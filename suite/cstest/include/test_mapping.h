// Copyright Â© 2024 Rot127 <unisono@quyllur.org>
// SPDX-License-Identifier: BSD-3

#ifndef TEST_MAPPING_H
#define TEST_MAPPING_H

#include "../../../Mapping.h"
#include <capstone/capstone.h>

/// Maps a string to an option
typedef struct {
	const char *str;
	cs_opt opt;
} TestOptionMapEntry;

/// A map entry, mapping a Capstone enumeration value id
/// to its absolute value.
typedef struct {
	const char *id;
	uint32_t val;
} TestCSEnumEntry;

/// REMEMBER TO SORT AFTER EDIT
static const cs_enum_id_map test_arch_map[] = {
	{ .str = "AArch64", .val = CS_ARCH_AARCH64 },
	{ .str = "CS_ARCH_AARCH64", .val = CS_ARCH_AARCH64 },
	{ .str = "CS_ARCH_ALPHA", .val = CS_ARCH_ALPHA },
	{ .str = "CS_ARCH_ARM", .val = CS_ARCH_ARM },
	{ .str = "CS_ARCH_BPF", .val = CS_ARCH_BPF },
	{ .str = "CS_ARCH_EVM", .val = CS_ARCH_EVM },
	{ .str = "CS_ARCH_HPPA", .val = CS_ARCH_HPPA },
	{ .str = "CS_ARCH_LOONGARCH", .val = CS_ARCH_LOONGARCH },
	{ .str = "CS_ARCH_M680X", .val = CS_ARCH_M680X },
	{ .str = "CS_ARCH_M68K", .val = CS_ARCH_M68K },
	{ .str = "CS_ARCH_MIPS", .val = CS_ARCH_MIPS },
	{ .str = "CS_ARCH_MOS65XX", .val = CS_ARCH_MOS65XX },
	{ .str = "CS_ARCH_PPC", .val = CS_ARCH_PPC },
	{ .str = "CS_ARCH_RISCV", .val = CS_ARCH_RISCV },
	{ .str = "CS_ARCH_SH", .val = CS_ARCH_SH },
	{ .str = "CS_ARCH_SPARC", .val = CS_ARCH_SPARC },
	{ .str = "CS_ARCH_SYSZ", .val = CS_ARCH_SYSZ },
	{ .str = "CS_ARCH_TMS320C64X", .val = CS_ARCH_TMS320C64X },
	{ .str = "CS_ARCH_TRICORE", .val = CS_ARCH_TRICORE },
	{ .str = "CS_ARCH_WASM", .val = CS_ARCH_WASM },
	{ .str = "CS_ARCH_X86", .val = CS_ARCH_X86 },
	{ .str = "CS_ARCH_XCORE", .val = CS_ARCH_XCORE },
	{ .str = "aarch64", .val = CS_ARCH_AARCH64 },
	{ .str = "alpha", .val = CS_ARCH_ALPHA },
	{ .str = "arm", .val = CS_ARCH_ARM },
	{ .str = "bpf", .val = CS_ARCH_BPF },
	{ .str = "evm", .val = CS_ARCH_EVM },
	{ .str = "hppa", .val = CS_ARCH_HPPA },
	{ .str = "loongarch", .val = CS_ARCH_LOONGARCH },
	{ .str = "m680x", .val = CS_ARCH_M680X },
	{ .str = "m68k", .val = CS_ARCH_M68K },
	{ .str = "mips", .val = CS_ARCH_MIPS },
	{ .str = "mos65xx", .val = CS_ARCH_MOS65XX },
	{ .str = "ppc", .val = CS_ARCH_PPC },
	{ .str = "riscv", .val = CS_ARCH_RISCV },
	{ .str = "sh", .val = CS_ARCH_SH },
	{ .str = "sparc", .val = CS_ARCH_SPARC },
	{ .str = "sysz", .val = CS_ARCH_SYSZ },
	{ .str = "tms320c64x", .val = CS_ARCH_TMS320C64X },
	{ .str = "tricore", .val = CS_ARCH_TRICORE },
	{ .str = "wasm", .val = CS_ARCH_WASM },
	{ .str = "x86", .val = CS_ARCH_X86 },
	{ .str = "xcore", .val = CS_ARCH_XCORE },
};

/// REMEMBER TO SORT AFTER EDIT
static const cs_enum_id_map test_mode_map[] = {
	{ .str = "CS_MODE_16", .val = CS_MODE_16 },
	{ .str = "CS_MODE_32", .val = CS_MODE_32 },
	{ .str = "CS_MODE_64", .val = CS_MODE_64 },
	{ .str = "CS_MODE_ARM", .val = CS_MODE_ARM },
	{ .str = "CS_MODE_BIG_ENDIAN", .val = CS_MODE_BIG_ENDIAN },
	{ .str = "CS_MODE_BOOKE", .val = CS_MODE_BOOKE },
	{ .str = "CS_MODE_BPF_CLASSIC", .val = CS_MODE_BPF_CLASSIC },
	{ .str = "CS_MODE_BPF_EXTENDED", .val = CS_MODE_BPF_EXTENDED },
	{ .str = "CS_MODE_HPPA_11", .val = CS_MODE_HPPA_11 },
	{ .str = "CS_MODE_HPPA_20", .val = CS_MODE_HPPA_20 },
	{ .str = "CS_MODE_HPPA_20W", .val = CS_MODE_HPPA_20W },
	{ .str = "CS_MODE_LITTLE_ENDIAN", .val = CS_MODE_LITTLE_ENDIAN },
	{ .str = "CS_MODE_LOONGARCH32", .val = CS_MODE_LOONGARCH32 },
	{ .str = "CS_MODE_LOONGARCH64", .val = CS_MODE_LOONGARCH64 },
	{ .str = "CS_MODE_M680X_6301", .val = CS_MODE_M680X_6301 },
	{ .str = "CS_MODE_M680X_6309", .val = CS_MODE_M680X_6309 },
	{ .str = "CS_MODE_M680X_6800", .val = CS_MODE_M680X_6800 },
	{ .str = "CS_MODE_M680X_6801", .val = CS_MODE_M680X_6801 },
	{ .str = "CS_MODE_M680X_6805", .val = CS_MODE_M680X_6805 },
	{ .str = "CS_MODE_M680X_6808", .val = CS_MODE_M680X_6808 },
	{ .str = "CS_MODE_M680X_6809", .val = CS_MODE_M680X_6809 },
	{ .str = "CS_MODE_M680X_6811", .val = CS_MODE_M680X_6811 },
	{ .str = "CS_MODE_M680X_CPU12", .val = CS_MODE_M680X_CPU12 },
	{ .str = "CS_MODE_M680X_HCS08", .val = CS_MODE_M680X_HCS08 },
	{ .str = "CS_MODE_M68K_000", .val = CS_MODE_M68K_000 },
	{ .str = "CS_MODE_M68K_010", .val = CS_MODE_M68K_010 },
	{ .str = "CS_MODE_M68K_020", .val = CS_MODE_M68K_020 },
	{ .str = "CS_MODE_M68K_030", .val = CS_MODE_M68K_030 },
	{ .str = "CS_MODE_M68K_040", .val = CS_MODE_M68K_040 },
	{ .str = "CS_MODE_M68K_060", .val = CS_MODE_M68K_060 },
	{ .str = "CS_MODE_MCLASS", .val = CS_MODE_MCLASS },
	{ .str = "CS_MODE_MICRO", .val = CS_MODE_MICRO },
	{ .str = "CS_MODE_MIPS2", .val = CS_MODE_MIPS2 },
	{ .str = "CS_MODE_MIPS3", .val = CS_MODE_MIPS3 },
	{ .str = "CS_MODE_MIPS32", .val = CS_MODE_MIPS32 },
	{ .str = "CS_MODE_MIPS32R6", .val = CS_MODE_MIPS32R6 },
	{ .str = "CS_MODE_MIPS64", .val = CS_MODE_MIPS64 },
	{ .str = "CS_MODE_MOS65XX_6502", .val = CS_MODE_MOS65XX_6502 },
	{ .str = "CS_MODE_MOS65XX_65816", .val = CS_MODE_MOS65XX_65816 },
	{ .str = "CS_MODE_MOS65XX_65816_LONG_M",
	  .val = CS_MODE_MOS65XX_65816_LONG_M },
	{ .str = "CS_MODE_MOS65XX_65816_LONG_MX",
	  .val = CS_MODE_MOS65XX_65816_LONG_M | CS_MODE_MOS65XX_65816_LONG_X },
	{ .str = "CS_MODE_MOS65XX_65816_LONG_X",
	  .val = CS_MODE_MOS65XX_65816_LONG_X },
	{ .str = "CS_MODE_MOS65XX_65C02", .val = CS_MODE_MOS65XX_65C02 },
	{ .str = "CS_MODE_MOS65XX_W65C02", .val = CS_MODE_MOS65XX_W65C02 },
	{ .str = "CS_MODE_PS", .val = CS_MODE_PS },
	{ .str = "CS_MODE_QPX", .val = CS_MODE_QPX },
	{ .str = "CS_MODE_RISCV32", .val = CS_MODE_RISCV32 },
	{ .str = "CS_MODE_RISCV64", .val = CS_MODE_RISCV64 },
	{ .str = "CS_MODE_RISCVC", .val = CS_MODE_RISCVC },
	{ .str = "CS_MODE_SH2", .val = CS_MODE_SH2 },
	{ .str = "CS_MODE_SH2A", .val = CS_MODE_SH2A },
	{ .str = "CS_MODE_SH3", .val = CS_MODE_SH3 },
	{ .str = "CS_MODE_SH4", .val = CS_MODE_SH4 },
	{ .str = "CS_MODE_SH4A", .val = CS_MODE_SH4A },
	{ .str = "CS_MODE_SHDSP", .val = CS_MODE_SHDSP },
	{ .str = "CS_MODE_SHFPU", .val = CS_MODE_SHFPU },
	{ .str = "CS_MODE_SPE", .val = CS_MODE_SPE },
	{ .str = "CS_MODE_THUMB", .val = CS_MODE_THUMB },
	{ .str = "CS_MODE_TRICORE_110", .val = CS_MODE_TRICORE_110 },
	{ .str = "CS_MODE_TRICORE_120", .val = CS_MODE_TRICORE_120 },
	{ .str = "CS_MODE_TRICORE_130", .val = CS_MODE_TRICORE_130 },
	{ .str = "CS_MODE_TRICORE_131", .val = CS_MODE_TRICORE_131 },
	{ .str = "CS_MODE_TRICORE_160", .val = CS_MODE_TRICORE_160 },
	{ .str = "CS_MODE_TRICORE_161", .val = CS_MODE_TRICORE_161 },
	{ .str = "CS_MODE_TRICORE_162", .val = CS_MODE_TRICORE_162 },
	{ .str = "CS_MODE_V8", .val = CS_MODE_V8 },
	{ .str = "CS_MODE_V9", .val = CS_MODE_V9 },
};

static const TestOptionMapEntry test_option_map[] = {
	{ .str = "CS_OPT_DETAIL",
	  .opt = { .type = CS_OPT_DETAIL, .val = CS_OPT_ON } },
	{ .str = "CS_OPT_DETAIL_REAL",
	  .opt = { .type = CS_OPT_DETAIL,
		   .val = CS_OPT_DETAIL_REAL | CS_OPT_ON } },
	{ .str = "CS_OPT_SKIPDATA",
	  .opt = { .type = CS_OPT_SKIPDATA, .val = CS_OPT_ON } },
	{ .str = "CS_OPT_UNSIGNED",
	  .opt = { .type = CS_OPT_UNSIGNED, .val = CS_OPT_ON } },
	{ .str = "CS_OPT_NO_BRANCH_OFFSET",
	  .opt = { .type = CS_OPT_NO_BRANCH_OFFSET, .val = CS_OPT_ON } },
	{ .str = "CS_OPT_SYNTAX_DEFAULT",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_DEFAULT } },
	{ .str = "CS_OPT_SYNTAX_INTEL",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_INTEL } },
	{ .str = "CS_OPT_SYNTAX_ATT",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_ATT } },
	{ .str = "CS_OPT_SYNTAX_NOREGNAME",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_NOREGNAME } },
	{ .str = "CS_OPT_SYNTAX_MASM",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_MASM } },
	{ .str = "CS_OPT_SYNTAX_MOTOROLA",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_MOTOROLA } },
	{ .str = "CS_OPT_SYNTAX_CS_REG_ALIAS",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_CS_REG_ALIAS } },
	{ .str = "CS_OPT_SYNTAX_PERCENT",
	  .opt = { .type = CS_OPT_SYNTAX, .val = CS_OPT_SYNTAX_PERCENT } },
};

static const cs_enum_id_map cs_enum_map[] = {
	{ .str = "AAAAAAAAAAAAAAAAAAAAAAAAAA", .val = 0xffffff }, // For testing
	{ .str = "AARCH64LAYOUT_INVALID", .val = AARCH64LAYOUT_INVALID },
	{ .str = "AARCH64LAYOUT_VL_16B", .val = AARCH64LAYOUT_VL_16B },
	{ .str = "AARCH64LAYOUT_VL_16S", .val = AARCH64LAYOUT_VL_16S },
	{ .str = "AARCH64LAYOUT_VL_1D", .val = AARCH64LAYOUT_VL_1D },
	{ .str = "AARCH64LAYOUT_VL_1Q", .val = AARCH64LAYOUT_VL_1Q },
	{ .str = "AARCH64LAYOUT_VL_1S", .val = AARCH64LAYOUT_VL_1S },
	{ .str = "AARCH64LAYOUT_VL_2D", .val = AARCH64LAYOUT_VL_2D },
	{ .str = "AARCH64LAYOUT_VL_2H", .val = AARCH64LAYOUT_VL_2H },
	{ .str = "AARCH64LAYOUT_VL_2S", .val = AARCH64LAYOUT_VL_2S },
	{ .str = "AARCH64LAYOUT_VL_32H", .val = AARCH64LAYOUT_VL_32H },
	{ .str = "AARCH64LAYOUT_VL_4B", .val = AARCH64LAYOUT_VL_4B },
	{ .str = "AARCH64LAYOUT_VL_4H", .val = AARCH64LAYOUT_VL_4H },
	{ .str = "AARCH64LAYOUT_VL_4S", .val = AARCH64LAYOUT_VL_4S },
	{ .str = "AARCH64LAYOUT_VL_64B", .val = AARCH64LAYOUT_VL_64B },
	{ .str = "AARCH64LAYOUT_VL_8B", .val = AARCH64LAYOUT_VL_8B },
	{ .str = "AARCH64LAYOUT_VL_8D", .val = AARCH64LAYOUT_VL_8D },
	{ .str = "AARCH64LAYOUT_VL_8H", .val = AARCH64LAYOUT_VL_8H },
	{ .str = "AARCH64LAYOUT_VL_B", .val = AARCH64LAYOUT_VL_B },
	{ .str = "AARCH64LAYOUT_VL_COMPLETE",
	  .val = AARCH64LAYOUT_VL_COMPLETE },
	{ .str = "AARCH64LAYOUT_VL_D", .val = AARCH64LAYOUT_VL_D },
	{ .str = "AARCH64LAYOUT_VL_H", .val = AARCH64LAYOUT_VL_H },
	{ .str = "AARCH64LAYOUT_VL_Q", .val = AARCH64LAYOUT_VL_Q },
	{ .str = "AARCH64LAYOUT_VL_S", .val = AARCH64LAYOUT_VL_S },
	{ .str = "AARCH64_EXT_INVALID", .val = AARCH64_EXT_INVALID },
	{ .str = "AARCH64_EXT_SXTB", .val = AARCH64_EXT_SXTB },
	{ .str = "AARCH64_EXT_SXTH", .val = AARCH64_EXT_SXTH },
	{ .str = "AARCH64_EXT_SXTW", .val = AARCH64_EXT_SXTW },
	{ .str = "AARCH64_EXT_SXTX", .val = AARCH64_EXT_SXTX },
	{ .str = "AARCH64_EXT_UXTB", .val = AARCH64_EXT_UXTB },
	{ .str = "AARCH64_EXT_UXTH", .val = AARCH64_EXT_UXTH },
	{ .str = "AARCH64_EXT_UXTW", .val = AARCH64_EXT_UXTW },
	{ .str = "AARCH64_EXT_UXTX", .val = AARCH64_EXT_UXTX },
	{ .str = "AARCH64_OP_AT", .val = AARCH64_OP_AT },
	{ .str = "AARCH64_OP_BTI", .val = AARCH64_OP_BTI },
	{ .str = "AARCH64_OP_CIMM", .val = AARCH64_OP_CIMM },
	{ .str = "AARCH64_OP_DB", .val = AARCH64_OP_DB },
	{ .str = "AARCH64_OP_DBNXS", .val = AARCH64_OP_DBNXS },
	{ .str = "AARCH64_OP_DC", .val = AARCH64_OP_DC },
	{ .str = "AARCH64_OP_EXACTFPIMM", .val = AARCH64_OP_EXACTFPIMM },
	{ .str = "AARCH64_OP_FP", .val = AARCH64_OP_FP },
	{ .str = "AARCH64_OP_IC", .val = AARCH64_OP_IC },
	{ .str = "AARCH64_OP_IMM", .val = AARCH64_OP_IMM },
	{ .str = "AARCH64_OP_IMM_RANGE", .val = AARCH64_OP_IMM_RANGE },
	{ .str = "AARCH64_OP_IMPLICIT_IMM_0",
	  .val = AARCH64_OP_IMPLICIT_IMM_0 },
	{ .str = "AARCH64_OP_ISB", .val = AARCH64_OP_ISB },
	{ .str = "AARCH64_OP_MEM", .val = AARCH64_OP_MEM },
	{ .str = "AARCH64_OP_MEM_IMM", .val = AARCH64_OP_MEM_IMM },
	{ .str = "AARCH64_OP_MEM_REG", .val = AARCH64_OP_MEM_REG },
	{ .str = "AARCH64_OP_PRED", .val = AARCH64_OP_PRED },
	{ .str = "AARCH64_OP_PRFM", .val = AARCH64_OP_PRFM },
	{ .str = "AARCH64_OP_PSB", .val = AARCH64_OP_PSB },
	{ .str = "AARCH64_OP_PSTATEIMM0_1", .val = AARCH64_OP_PSTATEIMM0_1 },
	{ .str = "AARCH64_OP_PSTATEIMM0_15", .val = AARCH64_OP_PSTATEIMM0_15 },
	{ .str = "AARCH64_OP_REG", .val = AARCH64_OP_REG },
	{ .str = "AARCH64_OP_REG_MRS", .val = AARCH64_OP_REG_MRS },
	{ .str = "AARCH64_OP_REG_MSR", .val = AARCH64_OP_REG_MSR },
	{ .str = "AARCH64_OP_RPRFM", .val = AARCH64_OP_RPRFM },
	{ .str = "AARCH64_OP_SME", .val = AARCH64_OP_SME },
	{ .str = "AARCH64_OP_SVCR", .val = AARCH64_OP_SVCR },
	{ .str = "AARCH64_OP_SVEPREDPAT", .val = AARCH64_OP_SVEPREDPAT },
	{ .str = "AARCH64_OP_SVEPRFM", .val = AARCH64_OP_SVEPRFM },
	{ .str = "AARCH64_OP_SVEVECLENSPECIFIER",
	  .val = AARCH64_OP_SVEVECLENSPECIFIER },
	{ .str = "AARCH64_OP_SYSALIAS", .val = AARCH64_OP_SYSALIAS },
	{ .str = "AARCH64_OP_SYSIMM", .val = AARCH64_OP_SYSIMM },
	{ .str = "AARCH64_OP_SYSREG", .val = AARCH64_OP_SYSREG },
	{ .str = "AARCH64_OP_TLBI", .val = AARCH64_OP_TLBI },
	{ .str = "AARCH64_OP_TSB", .val = AARCH64_OP_TSB },
	{ .str = "AARCH64_SFT_ASR", .val = AARCH64_SFT_ASR },
	{ .str = "AARCH64_SFT_INVALID", .val = AARCH64_SFT_INVALID },
	{ .str = "AARCH64_SFT_LSL", .val = AARCH64_SFT_LSL },
	{ .str = "AARCH64_SFT_LSR", .val = AARCH64_SFT_LSR },
	{ .str = "AARCH64_SFT_MSL", .val = AARCH64_SFT_MSL },
	{ .str = "AARCH64_SFT_ROR", .val = AARCH64_SFT_ROR },
	{ .str = "AArch64CC_AL", .val = AArch64CC_AL },
	{ .str = "AArch64CC_EQ", .val = AArch64CC_EQ },
	{ .str = "AArch64CC_GE", .val = AArch64CC_GE },
	{ .str = "AArch64CC_GT", .val = AArch64CC_GT },
	{ .str = "AArch64CC_HI", .val = AArch64CC_HI },
	{ .str = "AArch64CC_HS", .val = AArch64CC_HS },
	{ .str = "AArch64CC_Invalid", .val = AArch64CC_Invalid },
	{ .str = "AArch64CC_LE", .val = AArch64CC_LE },
	{ .str = "AArch64CC_LO", .val = AArch64CC_LO },
	{ .str = "AArch64CC_LS", .val = AArch64CC_LS },
	{ .str = "AArch64CC_LT", .val = AArch64CC_LT },
	{ .str = "AArch64CC_MI", .val = AArch64CC_MI },
	{ .str = "AArch64CC_NE", .val = AArch64CC_NE },
	{ .str = "AArch64CC_NV", .val = AArch64CC_NV },
	{ .str = "AArch64CC_PL", .val = AArch64CC_PL },
	{ .str = "AArch64CC_VC", .val = AArch64CC_VC },
	{ .str = "AArch64CC_VS", .val = AArch64CC_VS },
	{ .str = "ARMCC_AL", .val = ARMCC_AL },
	{ .str = "ARMCC_EQ", .val = ARMCC_EQ },
	{ .str = "ARMCC_GE", .val = ARMCC_GE },
	{ .str = "ARMCC_GT", .val = ARMCC_GT },
	{ .str = "ARMCC_HI", .val = ARMCC_HI },
	{ .str = "ARMCC_HS", .val = ARMCC_HS },
	{ .str = "ARMCC_LE", .val = ARMCC_LE },
	{ .str = "ARMCC_LO", .val = ARMCC_LO },
	{ .str = "ARMCC_LS", .val = ARMCC_LS },
	{ .str = "ARMCC_LT", .val = ARMCC_LT },
	{ .str = "ARMCC_MI", .val = ARMCC_MI },
	{ .str = "ARMCC_NE", .val = ARMCC_NE },
	{ .str = "ARMCC_PL", .val = ARMCC_PL },
	{ .str = "ARMCC_UNDEF", .val = ARMCC_UNDEF },
	{ .str = "ARMCC_VC", .val = ARMCC_VC },
	{ .str = "ARMCC_VS", .val = ARMCC_VS },
	{ .str = "ARMVCC_Else", .val = ARMVCC_Else },
	{ .str = "ARMVCC_None", .val = ARMVCC_None },
	{ .str = "ARMVCC_Then", .val = ARMVCC_Then },
	{ .str = "ARM_CPSFLAG_A", .val = ARM_CPSFLAG_A },
	{ .str = "ARM_CPSFLAG_F", .val = ARM_CPSFLAG_F },
	{ .str = "ARM_CPSFLAG_I", .val = ARM_CPSFLAG_I },
	{ .str = "ARM_CPSFLAG_INVALID", .val = ARM_CPSFLAG_INVALID },
	{ .str = "ARM_CPSFLAG_NONE", .val = ARM_CPSFLAG_NONE },
	{ .str = "ARM_CPSMODE_ID", .val = ARM_CPSMODE_ID },
	{ .str = "ARM_CPSMODE_IE", .val = ARM_CPSMODE_IE },
	{ .str = "ARM_CPSMODE_INVALID", .val = ARM_CPSMODE_INVALID },
	{ .str = "ARM_FIELD_CPSR_C", .val = ARM_FIELD_CPSR_C },
	{ .str = "ARM_FIELD_CPSR_F", .val = ARM_FIELD_CPSR_F },
	{ .str = "ARM_FIELD_CPSR_S", .val = ARM_FIELD_CPSR_S },
	{ .str = "ARM_FIELD_CPSR_X", .val = ARM_FIELD_CPSR_X },
	{ .str = "ARM_FIELD_SPSR_C", .val = ARM_FIELD_SPSR_C },
	{ .str = "ARM_FIELD_SPSR_F", .val = ARM_FIELD_SPSR_F },
	{ .str = "ARM_FIELD_SPSR_S", .val = ARM_FIELD_SPSR_S },
	{ .str = "ARM_FIELD_SPSR_X", .val = ARM_FIELD_SPSR_X },
	{ .str = "ARM_MB_ISH", .val = ARM_MB_ISH },
	{ .str = "ARM_MB_ISHLD", .val = ARM_MB_ISHLD },
	{ .str = "ARM_MB_ISHST", .val = ARM_MB_ISHST },
	{ .str = "ARM_MB_LD", .val = ARM_MB_LD },
	{ .str = "ARM_MB_NSH", .val = ARM_MB_NSH },
	{ .str = "ARM_MB_NSHLD", .val = ARM_MB_NSHLD },
	{ .str = "ARM_MB_NSHST", .val = ARM_MB_NSHST },
	{ .str = "ARM_MB_OSH", .val = ARM_MB_OSH },
	{ .str = "ARM_MB_OSHLD", .val = ARM_MB_OSHLD },
	{ .str = "ARM_MB_OSHST", .val = ARM_MB_OSHST },
	{ .str = "ARM_MB_RESERVED_0", .val = ARM_MB_RESERVED_0 },
	{ .str = "ARM_MB_RESERVED_12", .val = ARM_MB_RESERVED_12 },
	{ .str = "ARM_MB_RESERVED_4", .val = ARM_MB_RESERVED_4 },
	{ .str = "ARM_MB_RESERVED_8", .val = ARM_MB_RESERVED_8 },
	{ .str = "ARM_MB_ST", .val = ARM_MB_ST },
	{ .str = "ARM_MB_SY", .val = ARM_MB_SY },
	{ .str = "ARM_SETEND_BE", .val = ARM_SETEND_BE },
	{ .str = "ARM_SETEND_INVALID", .val = ARM_SETEND_INVALID },
	{ .str = "ARM_SETEND_LE", .val = ARM_SETEND_LE },
	{ .str = "ARM_SFT_ASR", .val = ARM_SFT_ASR },
	{ .str = "ARM_SFT_ASR_REG", .val = ARM_SFT_ASR_REG },
	{ .str = "ARM_SFT_INVALID", .val = ARM_SFT_INVALID },
	{ .str = "ARM_SFT_LSL", .val = ARM_SFT_LSL },
	{ .str = "ARM_SFT_LSL_REG", .val = ARM_SFT_LSL_REG },
	{ .str = "ARM_SFT_LSR", .val = ARM_SFT_LSR },
	{ .str = "ARM_SFT_LSR_REG", .val = ARM_SFT_LSR_REG },
	{ .str = "ARM_SFT_ROR", .val = ARM_SFT_ROR },
	{ .str = "ARM_SFT_ROR_REG", .val = ARM_SFT_ROR_REG },
	{ .str = "ARM_SFT_RRX", .val = ARM_SFT_RRX },
	{ .str = "ARM_SFT_RRX_REG", .val = ARM_SFT_RRX_REG },
	{ .str = "ARM_T", .val = ARM_T },
	{ .str = "ARM_TE", .val = ARM_TE },
	{ .str = "ARM_TEE", .val = ARM_TEE },
	{ .str = "ARM_TEEE", .val = ARM_TEEE },
	{ .str = "ARM_TEET", .val = ARM_TEET },
	{ .str = "ARM_TET", .val = ARM_TET },
	{ .str = "ARM_TETE", .val = ARM_TETE },
	{ .str = "ARM_TETT", .val = ARM_TETT },
	{ .str = "ARM_TT", .val = ARM_TT },
	{ .str = "ARM_TTE", .val = ARM_TTE },
	{ .str = "ARM_TTEE", .val = ARM_TTEE },
	{ .str = "ARM_TTET", .val = ARM_TTET },
	{ .str = "ARM_TTT", .val = ARM_TTT },
	{ .str = "ARM_TTTE", .val = ARM_TTTE },
	{ .str = "ARM_TTTT", .val = ARM_TTTT },
	{ .str = "ARM_VECTORDATA_F16", .val = ARM_VECTORDATA_F16 },
	{ .str = "ARM_VECTORDATA_F16F32", .val = ARM_VECTORDATA_F16F32 },
	{ .str = "ARM_VECTORDATA_F16F64", .val = ARM_VECTORDATA_F16F64 },
	{ .str = "ARM_VECTORDATA_F16S16", .val = ARM_VECTORDATA_F16S16 },
	{ .str = "ARM_VECTORDATA_F16S32", .val = ARM_VECTORDATA_F16S32 },
	{ .str = "ARM_VECTORDATA_F16U16", .val = ARM_VECTORDATA_F16U16 },
	{ .str = "ARM_VECTORDATA_F16U32", .val = ARM_VECTORDATA_F16U32 },
	{ .str = "ARM_VECTORDATA_F32", .val = ARM_VECTORDATA_F32 },
	{ .str = "ARM_VECTORDATA_F32F16", .val = ARM_VECTORDATA_F32F16 },
	{ .str = "ARM_VECTORDATA_F32F64", .val = ARM_VECTORDATA_F32F64 },
	{ .str = "ARM_VECTORDATA_F32S16", .val = ARM_VECTORDATA_F32S16 },
	{ .str = "ARM_VECTORDATA_F32S32", .val = ARM_VECTORDATA_F32S32 },
	{ .str = "ARM_VECTORDATA_F32U16", .val = ARM_VECTORDATA_F32U16 },
	{ .str = "ARM_VECTORDATA_F32U32", .val = ARM_VECTORDATA_F32U32 },
	{ .str = "ARM_VECTORDATA_F64", .val = ARM_VECTORDATA_F64 },
	{ .str = "ARM_VECTORDATA_F64F16", .val = ARM_VECTORDATA_F64F16 },
	{ .str = "ARM_VECTORDATA_F64F32", .val = ARM_VECTORDATA_F64F32 },
	{ .str = "ARM_VECTORDATA_F64S16", .val = ARM_VECTORDATA_F64S16 },
	{ .str = "ARM_VECTORDATA_F64S32", .val = ARM_VECTORDATA_F64S32 },
	{ .str = "ARM_VECTORDATA_F64U16", .val = ARM_VECTORDATA_F64U16 },
	{ .str = "ARM_VECTORDATA_F64U32", .val = ARM_VECTORDATA_F64U32 },
	{ .str = "ARM_VECTORDATA_I16", .val = ARM_VECTORDATA_I16 },
	{ .str = "ARM_VECTORDATA_I32", .val = ARM_VECTORDATA_I32 },
	{ .str = "ARM_VECTORDATA_I64", .val = ARM_VECTORDATA_I64 },
	{ .str = "ARM_VECTORDATA_I8", .val = ARM_VECTORDATA_I8 },
	{ .str = "ARM_VECTORDATA_INVALID", .val = ARM_VECTORDATA_INVALID },
	{ .str = "ARM_VECTORDATA_P16", .val = ARM_VECTORDATA_P16 },
	{ .str = "ARM_VECTORDATA_P8", .val = ARM_VECTORDATA_P8 },
	{ .str = "ARM_VECTORDATA_S16", .val = ARM_VECTORDATA_S16 },
	{ .str = "ARM_VECTORDATA_S16F16", .val = ARM_VECTORDATA_S16F16 },
	{ .str = "ARM_VECTORDATA_S16F32", .val = ARM_VECTORDATA_S16F32 },
	{ .str = "ARM_VECTORDATA_S16F64", .val = ARM_VECTORDATA_S16F64 },
	{ .str = "ARM_VECTORDATA_S32", .val = ARM_VECTORDATA_S32 },
	{ .str = "ARM_VECTORDATA_S32F16", .val = ARM_VECTORDATA_S32F16 },
	{ .str = "ARM_VECTORDATA_S32F32", .val = ARM_VECTORDATA_S32F32 },
	{ .str = "ARM_VECTORDATA_S32F64", .val = ARM_VECTORDATA_S32F64 },
	{ .str = "ARM_VECTORDATA_S64", .val = ARM_VECTORDATA_S64 },
	{ .str = "ARM_VECTORDATA_S8", .val = ARM_VECTORDATA_S8 },
	{ .str = "ARM_VECTORDATA_U16", .val = ARM_VECTORDATA_U16 },
	{ .str = "ARM_VECTORDATA_U16F16", .val = ARM_VECTORDATA_U16F16 },
	{ .str = "ARM_VECTORDATA_U16F32", .val = ARM_VECTORDATA_U16F32 },
	{ .str = "ARM_VECTORDATA_U16F64", .val = ARM_VECTORDATA_U16F64 },
	{ .str = "ARM_VECTORDATA_U32", .val = ARM_VECTORDATA_U32 },
	{ .str = "ARM_VECTORDATA_U32F16", .val = ARM_VECTORDATA_U32F16 },
	{ .str = "ARM_VECTORDATA_U32F32", .val = ARM_VECTORDATA_U32F32 },
	{ .str = "ARM_VECTORDATA_U32F64", .val = ARM_VECTORDATA_U32F64 },
	{ .str = "ARM_VECTORDATA_U64", .val = ARM_VECTORDATA_U64 },
	{ .str = "ARM_VECTORDATA_U8", .val = ARM_VECTORDATA_U8 },
	{ .str = "CS_AC_READ", .val = CS_AC_READ },
	{ .str = "CS_AC_READ_WRITE", .val = CS_AC_READ_WRITE },
	{ .str = "CS_AC_WRITE", .val = CS_AC_WRITE },
	{ .str = "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
	  .val = 0xffffff }, // For testing

};

#endif // TEST_MAPPING_H
