# Test simple disassembly decoding tests

# The RUN line parsing
# RUN: llvm-mc -triple aarch64-none-linux-gnu -mattr=+v8.1a --disassemble < %s | FileCheck %s
# RUN: llvm-mc -triple=arm64 -mattr=+crc -disassemble < %s | FileCheck %s


[0x00,0x0a,0x31,0xd5]
# CHECK:   mrs x0, TRCRSR

[0x80,0x08,0x31,0xd5]
# CHECK:   mrs x0, TRCEXTINSELR

[0x80,0x09,0x31,0xd5]
# CHECK:   mrs x0, TRCEXTINSELR1

# Now a block of instruction tests

[0x41,0x01,0x00,0x19]
[0x41,0x01,0x10,0x19]
[0x62,0xf1,0x0f,0x19]
[0xe3,0xd3,0x1f,0x19]
#CHECK:       stlurb    w1, [x10]
#CHECK-NEXT:  stlurb  w1, [x10, #-256]
#CHECK-NEXT:  stlurb  w2, [x11, #255]
#CHECK-NEXT:  stlurb  w3, [sp, #-3]

# Now the other way around defined

# CHECK: crc32b  w5, w7, w20
//CHECK: crc32h  w28, wzr, w30
# CHECK: crc32w  w0, w1, w2
// CHECK: crc32x  w7, w9, x20
# CHECK: crc32cb w9, w5, w4
#CHECK: crc32ch w13, w17, w25
# CHECK: crc32cw wzr, w3, w5
# CHECK: crc32cx w18, w16, xzr
0xe5 0x40 0xd4 0x1a
0xfc 0x47 0xde 0x1a
0x20 0x48 0xc2 0x1a
0x27 0x4d 0xd4 0x9a
0xa9 0x50 0xc4 0x1a
0x2d 0x56 0xd9 0x1a
0x7f 0x58 0xc5 0x1a
0x12 0x5e 0xdf 0x9a

# Now one line tests

# CHECK-NEXT:  mrs     x0, AMCG1IDR_EL0        // encoding: [0xc0,0xd2,0x3b,0xd5]
// CHECK-NEXT:  msr     AMEVCNTVOFF00_EL2, x0   // encoding: [0x00,0xd8,0x1c,0xd5]
// CHECK:  msr     AMEVCNTVOFF00_EL2, x0   // encoding: [0x00,0xd8,0x1c,0xd5]

# Annoying case. The last CHECK: <encdoding> should not be matched.

[0x20,0x84,0xc2,0x6e] # sqrdmlah  v0.2d, v1.2d, v2.2d
[0x20,0x8c,0xc2,0x6e] # sqrdmlsh  v0.2d, v1.2d, v2.2d
# CHECK: warning: invalid instruction encoding
# CHECK: [0x20,0x84,0x02,0x2e]


[0x62,0xfc,0x44,0x2e]
[0x62,0xfc,0x44,0x6e]
# Dont' parse this:
# NOBF16: warning: invalid instruction encoding
# NOBF16-NEXT: [0x62,0xfc,0x44,0x2e]
# NOBF16: warning: invalid instruction encoding
# NOBF16-NEXT: [0x62,0xfc,0x44,0x6e]
NOBF16-NEXT: [0x62,0xfc,0x44,0x2e]
# But this please. It belongs to the encding above
# CHECK: bfdot   v2.2s, v3.4h, v4.4h
# CHECK: bfdot   v2.4s, v3.8h, v4.8h

# Single digit hex numbers

# CHECK: svc      #0
# CHECK: svc      #{{65535|0xffff}}
0x1 0x0 0x0 0xd4
0xe1 0xff 0x1f 0xd4
