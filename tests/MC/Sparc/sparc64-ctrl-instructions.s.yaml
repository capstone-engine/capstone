test_cases:
  -
    input:
      bytes: [ 0x85, 0x66, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movne %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x64, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "move %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x66, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movg %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x64, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movle %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x66, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movge %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x64, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movl %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0x00, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movgu %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0x00, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movleu %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movcc %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movcs %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movpos %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movneg %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movvc %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movvs %icc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x66, 0x50, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movne %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x64, 0x50, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "move %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x66, 0x90, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movg %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x64, 0x90, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movle %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x66, 0xd0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movge %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x64, 0xd0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movl %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0x10, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movgu %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0x10, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movleu %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0x50, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movcc %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0x50, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movcs %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0x90, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movpos %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0x90, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movneg %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x67, 0xd0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movvc %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x65, 0xd0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movvs %xcc, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x61, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movu %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x61, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movg %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x61, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movug %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x61, 0x00, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movl %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x60, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movul %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x60, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movlg %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x60, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movne %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x62, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "move %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x62, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movue %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x62, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movge %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x63, 0x00, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movuge %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x63, 0x40, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movle %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x63, 0x80, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movule %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0x63, 0xc0, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movo %fcc0, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0x60, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsne %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0x60, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovse %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0xa0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsg %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0xa0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsle %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0xe0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsge %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0xe0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsl %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x20, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsgu %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x20, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsleu %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x60, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovscc %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x60, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovscs %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0xa0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovspos %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0xa0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsneg %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0xe0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsvc %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0xe0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsvs %icc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0x70, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsne %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0x70, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovse %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0xb0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsg %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0xb0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsle %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0xf0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsge %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0xf0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsl %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x30, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsgu %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x30, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsleu %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x70, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovscc %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x70, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovscs %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0xb0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovspos %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0xb0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsneg %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0xf0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsvc %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0xf0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsvs %xcc, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0xc0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsu %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x80, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsg %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x40, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsug %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x00, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsl %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0xc0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsul %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0x80, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovslg %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xa8, 0x40, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsne %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0x40, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovse %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0x80, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsue %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xaa, 0xc0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsge %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x00, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsuge %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x40, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsle %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0x80, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsule %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0xab, 0xc0, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovso %fcc0, %f1, %f2"
  -
    input:
      bytes: [ 0x85, 0x61, 0xc8, 0x01 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movu %fcc1, %g1, %g2"
  -
    input:
      bytes: [ 0x85, 0xa9, 0x90, 0x21 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovsg %fcc2, %f1, %f2"
  -
    input:
      bytes: [ 0x87, 0x78, 0x44, 0x02 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movrz %g1, %g2, %g3"
  -
    input:
      bytes: [ 0x87, 0x78, 0x48, 0x02 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movrlez %g1, %g2, %g3"
  -
    input:
      bytes: [ 0x87, 0x78, 0x4c, 0x02 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movrlz %g1, %g2, %g3"
  -
    input:
      bytes: [ 0x87, 0x78, 0x54, 0x02 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movrnz %g1, %g2, %g3"
  -
    input:
      bytes: [ 0x87, 0x78, 0x58, 0x02 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movrgz %g1, %g2, %g3"
  -
    input:
      bytes: [ 0x87, 0x78, 0x5c, 0x02 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "movrgez %g1, %g2, %g3"
  -
    input:
      bytes: [ 0x87, 0xa8, 0x44, 0xa2 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovrsz %g1, %f2, %f3"
  -
    input:
      bytes: [ 0x87, 0xa8, 0x48, 0xa2 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovrslez %g1, %f2, %f3"
  -
    input:
      bytes: [ 0x87, 0xa8, 0x4c, 0xa2 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovrslz %g1, %f2, %f3"
  -
    input:
      bytes: [ 0x87, 0xa8, 0x54, 0xa2 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovrsnz %g1, %f2, %f3"
  -
    input:
      bytes: [ 0x87, 0xa8, 0x58, 0xa2 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovrsgz %g1, %f2, %f3"
  -
    input:
      bytes: [ 0x87, 0xa8, 0x5c, 0xa2 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "fmovrsgez %g1, %f2, %f3"
  -
    input:
      bytes: [ 0x81, 0xcf, 0xe0, 0x08 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "rett %i7+8"
  -
    input:
      bytes: [ 0x83, 0xd0, 0x30, 0x03 ]
      arch: "CS_ARCH_SPARC"
      options: [ "CS_MODE_BIG_ENDIAN" ]
    expected:
      insns:
        -
          asm_text: "te %xcc, %g0 + 3"
