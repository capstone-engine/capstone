test_cases:
  -
    input:
      bytes: [ 0xa8, 0xee, 0xce, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshlc q0, lr, #8"
  -
    input:
      bytes: [ 0xa8, 0xee, 0x4c, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovlb.s8 q0, q6"
  -
    input:
      bytes: [ 0xa8, 0xee, 0x48, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovlt.s8 q0, q4"
  -
    input:
      bytes: [ 0x41, 0xfe, 0x00, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpt.i8 eq, q0, q0"
  -
    input:
      bytes: [ 0xa8, 0xee, 0x48, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovltt.s8 q0, q4"
  -
    input:
      bytes: [ 0xa8, 0xfe, 0x40, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovlb.u8 q0, q0"
  -
    input:
      bytes: [ 0xa8, 0xfe, 0x44, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovlt.u8 q0, q2"
  -
    input:
      bytes: [ 0xb0, 0xfe, 0x40, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovlb.u16 q1, q0"
  -
    input:
      bytes: [ 0xb0, 0xfe, 0x44, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovlt.u16 q0, q2"
  -
    input:
      bytes: [ 0x31, 0xee, 0x05, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllb.s8 q0, q2, #8"
  -
    input:
      bytes: [ 0x31, 0xee, 0x0b, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.s8 q1, q5, #8"
  -
    input:
      bytes: [ 0xaf, 0xee, 0x40, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllb.s8 q0, q0, #7"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x03, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllb.u8 q1, q1, #8"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x01, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.u8 q0, q0, #8"
  -
    input:
      bytes: [ 0xab, 0xfe, 0x40, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllb.u8 q0, q0, #3"
  -
    input:
      bytes: [ 0x35, 0xfe, 0x0b, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllb.u16 q0, q5, #0x10"
  -
    input:
      bytes: [ 0x35, 0xfe, 0x07, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.u16 q0, q3, #0x10"
  -
    input:
      bytes: [ 0x35, 0xee, 0x01, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.s16 q0, q0, #0x10"
  -
    input:
      bytes: [ 0xbe, 0xee, 0x40, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.s16 q0, q0, #0xe"
  -
    input:
      bytes: [ 0xbb, 0xee, 0x40, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.s16 q0, q0, #0xb"
  -
    input:
      bytes: [ 0xb4, 0xfe, 0x44, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllb.u16 q0, q2, #4"
  -
    input:
      bytes: [ 0x8f, 0xfe, 0xc7, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshrnb.i16 q0, q3, #1"
  -
    input:
      bytes: [ 0x8b, 0xfe, 0xc5, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshrnt.i16 q0, q2, #5"
  -
    input:
      bytes: [ 0x98, 0xfe, 0xc9, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshrnb.i32 q0, q4, #8"
  -
    input:
      bytes: [ 0x99, 0xfe, 0xc5, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshrnt.i32 q0, q2, #7"
  -
    input:
      bytes: [ 0x8f, 0xee, 0xc5, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshrnb.i16 q1, q2, #1"
  -
    input:
      bytes: [ 0x8f, 0xee, 0xc3, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshrnt.i16 q0, q1, #1"
  -
    input:
      bytes: [ 0x94, 0xee, 0xc1, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshrnb.i32 q0, q0, #0xc"
  -
    input:
      bytes: [ 0x9c, 0xee, 0xc5, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshrnt.i32 q0, q2, #4"
  -
    input:
      bytes: [ 0x88, 0xfe, 0xc4, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrunb.s16 q0, q2, #8"
  -
    input:
      bytes: [ 0x8a, 0xfe, 0xc0, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrunt.s16 q0, q0, #6"
  -
    input:
      bytes: [ 0x98, 0xfe, 0xc2, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrunt.s32 q0, q1, #8"
  -
    input:
      bytes: [ 0x93, 0xfe, 0xce, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrunb.s32 q0, q7, #0xd"
  -
    input:
      bytes: [ 0x8b, 0xee, 0xce, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrunb.s16 q0, q7, #5"
  -
    input:
      bytes: [ 0x89, 0xee, 0xc2, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrunt.s16 q0, q1, #7"
  -
    input:
      bytes: [ 0x9c, 0xee, 0xcc, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrunb.s32 q0, q6, #4"
  -
    input:
      bytes: [ 0x96, 0xee, 0xc4, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrunt.s32 q0, q2, #0xa"
  -
    input:
      bytes: [ 0x88, 0xee, 0x4f, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrnb.s16 q0, q7, #8"
  -
    input:
      bytes: [ 0x8c, 0xfe, 0x47, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrnt.u16 q1, q3, #4"
  -
    input:
      bytes: [ 0x99, 0xfe, 0x43, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrnb.u32 q0, q1, #7"
  -
    input:
      bytes: [ 0x95, 0xee, 0x43, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshrnt.s32 q0, q1, #0xb"
  -
    input:
      bytes: [ 0x8b, 0xee, 0x4c, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrnb.s16 q0, q6, #5"
  -
    input:
      bytes: [ 0x8c, 0xee, 0x42, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrnt.s16 q0, q1, #4"
  -
    input:
      bytes: [ 0x89, 0xfe, 0x46, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrnb.u16 q0, q3, #7"
  -
    input:
      bytes: [ 0x88, 0xfe, 0x44, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrnt.u16 q0, q2, #8"
  -
    input:
      bytes: [ 0x9d, 0xee, 0x48, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrnt.s32 q1, q4, #3"
  -
    input:
      bytes: [ 0x92, 0xfe, 0x44, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshrnb.u32 q0, q2, #0xe"
  -
    input:
      bytes: [ 0x0c, 0xef, 0x4c, 0xc4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.s8 q6, q6, q6"
  -
    input:
      bytes: [ 0x14, 0xef, 0x48, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.s16 q0, q4, q2"
  -
    input:
      bytes: [ 0x2a, 0xef, 0x42, 0x24 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.s32 q1, q1, q5"
  -
    input:
      bytes: [ 0x04, 0xff, 0x4e, 0x24 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.u8 q1, q7, q2"
  -
    input:
      bytes: [ 0x10, 0xff, 0x48, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.u16 q0, q4, q0"
  -
    input:
      bytes: [ 0x28, 0xff, 0x44, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.u32 q2, q2, q4"
  -
    input:
      bytes: [ 0x0c, 0xef, 0x52, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s8 q0, q1, q6"
  -
    input:
      bytes: [ 0x1e, 0xef, 0x56, 0x84 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s16 q4, q3, q7"
  -
    input:
      bytes: [ 0x2a, 0xef, 0x5a, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s32 q0, q5, q5"
  -
    input:
      bytes: [ 0x0c, 0xff, 0x50, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u8 q0, q0, q6"
  -
    input:
      bytes: [ 0x18, 0xff, 0x5a, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u16 q0, q5, q4"
  -
    input:
      bytes: [ 0x28, 0xff, 0x50, 0x24 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u32 q1, q0, q4"
  -
    input:
      bytes: [ 0x02, 0xef, 0x5c, 0x25 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.s8 q1, q6, q1"
  -
    input:
      bytes: [ 0x1c, 0xef, 0x58, 0x45 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.s16 q2, q4, q6"
  -
    input:
      bytes: [ 0x2a, 0xef, 0x50, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.s32 q0, q0, q5"
  -
    input:
      bytes: [ 0x02, 0xff, 0x54, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u8 q0, q2, q1"
  -
    input:
      bytes: [ 0x10, 0xff, 0x5c, 0x25 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u16 q1, q6, q0"
  -
    input:
      bytes: [ 0x20, 0xff, 0x50, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u32 q0, q0, q0"
  -
    input:
      bytes: [ 0x08, 0xef, 0x4c, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.s8 q0, q6, q4"
  -
    input:
      bytes: [ 0x1e, 0xef, 0x48, 0x25 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.s16 q1, q4, q7"
  -
    input:
      bytes: [ 0x28, 0xef, 0x48, 0x25 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.s32 q1, q4, q4"
  -
    input:
      bytes: [ 0x0a, 0xff, 0x46, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.u8 q0, q3, q5"
  -
    input:
      bytes: [ 0x1a, 0xff, 0x4c, 0xa5 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.u16 q5, q6, q5"
  -
    input:
      bytes: [ 0x26, 0xff, 0x4e, 0x25 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.u32 q1, q7, q3"
  -
    input:
      bytes: [ 0x8d, 0xff, 0x54, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsri.8 q0, q2, #3"
  -
    input:
      bytes: [ 0x9b, 0xff, 0x54, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsri.16 q0, q2, #5"
  -
    input:
      bytes: [ 0xb1, 0xff, 0x52, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsri.32 q0, q1, #0xf"
  -
    input:
      bytes: [ 0x8b, 0xff, 0x56, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsli.8 q0, q3, #3"
  -
    input:
      bytes: [ 0x9c, 0xff, 0x52, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsli.16 q0, q1, #0xc"
  -
    input:
      bytes: [ 0xa8, 0xff, 0x52, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsli.32 q0, q1, #8"
  -
    input:
      bytes: [ 0x8e, 0xef, 0x58, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s8 q0, q4, #6"
  -
    input:
      bytes: [ 0x8e, 0xff, 0x5c, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u8 q0, q6, #6"
  -
    input:
      bytes: [ 0x95, 0xef, 0x54, 0x27 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s16 q1, q2, #5"
  -
    input:
      bytes: [ 0x93, 0xff, 0x5a, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u16 q0, q5, #3"
  -
    input:
      bytes: [ 0xbd, 0xef, 0x56, 0x27 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s32 q1, q3, #0x1d"
  -
    input:
      bytes: [ 0xb3, 0xff, 0x54, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u32 q0, q2, #0x13"
  -
    input:
      bytes: [ 0x88, 0xff, 0x52, 0x06 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshlu.s8 q0, q1, #0"
  -
    input:
      bytes: [ 0x9c, 0xff, 0x52, 0x46 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshlu.s16 q2, q1, #0xc"
  -
    input:
      bytes: [ 0xba, 0xff, 0x58, 0x06 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshlu.s32 q0, q4, #0x1a"
  -
    input:
      bytes: [ 0x89, 0xef, 0x56, 0x22 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshr.s8 q1, q3, #7"
  -
    input:
      bytes: [ 0x8e, 0xff, 0x56, 0x22 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshr.u8 q1, q3, #2"
  -
    input:
      bytes: [ 0x96, 0xef, 0x52, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshr.s16 q0, q1, #0xa"
  -
    input:
      bytes: [ 0x94, 0xff, 0x5a, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshr.u16 q0, q5, #0xc"
  -
    input:
      bytes: [ 0xa9, 0xef, 0x5a, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshr.s32 q0, q5, #0x17"
  -
    input:
      bytes: [ 0xa2, 0xff, 0x52, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshr.u32 q0, q1, #0x1e"
  -
    input:
      bytes: [ 0x8c, 0xef, 0x5e, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshr.s8 q0, q7, #4"
  -
    input:
      bytes: [ 0x8b, 0xff, 0x54, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshr.u8 q0, q2, #5"
  -
    input:
      bytes: [ 0x90, 0xef, 0x56, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshr.s16 q0, q3, #0x10"
  -
    input:
      bytes: [ 0x98, 0xff, 0x5c, 0xe0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshr.u16 q7, q6, #8"
  -
    input:
      bytes: [ 0xa8, 0xef, 0x5c, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshr.s32 q0, q6, #0x18"
  -
    input:
      bytes: [ 0xa2, 0xff, 0x5a, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshr.u32 q2, q5, #0x1e"
  -
    input:
      bytes: [ 0x8e, 0xef, 0x5c, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.i8 q0, q6, #6"
  -
    input:
      bytes: [ 0x9c, 0xef, 0x50, 0x25 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.i16 q1, q0, #0xc"
  -
    input:
      bytes: [ 0xba, 0xef, 0x54, 0x45 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.i32 q2, q2, #0x1a"
  -
    input:
      bytes: [ 0xa9, 0xee, 0x42, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllt.s8 q0, q1, #1"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0xb4, 0xee, 0x42, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshlltt.s16 q0, q1, #4"
  -
    input:
      bytes: [ 0xb8, 0xfe, 0x42, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshllbe.u16 q0, q1, #8"
