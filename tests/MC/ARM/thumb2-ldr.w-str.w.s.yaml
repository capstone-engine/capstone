test_cases:
  -
    input:
      bytes: [ 0x51, 0xf8, 0x04, 0x3b, 0x51, 0xf8, 0x04, 0x3b, 0x40, 0xf8, 0x04, 0x3b, 0x40, 0xf8, 0x04, 0x3b, 0x51, 0xf8, 0x04, 0x3d, 0x51, 0xf8, 0x04, 0x3d, 0x40, 0xf8, 0x04, 0x3d, 0x40, 0xf8, 0x04, 0x3d, 0x51, 0xf8, 0x04, 0x0d, 0x51, 0xf8, 0x04, 0xdd, 0x51, 0xf8, 0x04, 0xfd, 0x50, 0xf8, 0x04, 0x1d, 0x5d, 0xf8, 0x04, 0x1d, 0x50, 0xf8, 0xff, 0x1f, 0x50, 0xf8, 0xff, 0x1d, 0x50, 0xf8, 0x00, 0x1f, 0x08, 0xbf, 0x50, 0xf8, 0xff, 0x1f, 0xd8, 0xbf, 0x50, 0xf8, 0xff, 0x1f, 0x51, 0xf8, 0x04, 0x0b, 0x51, 0xf8, 0x04, 0xdb, 0x51, 0xf8, 0x04, 0xfb, 0x51, 0xf8, 0x04, 0x0b, 0x5d, 0xf8, 0x04, 0x0b, 0x5f, 0xf8, 0x04, 0x0b, 0x51, 0xf8, 0xff, 0x0b, 0x51, 0xf8, 0x00, 0x0b, 0x51, 0xf8, 0xff, 0x09, 0x08, 0xbf, 0x51, 0xf8, 0xff, 0x0b, 0xd8, 0xbf, 0x51, 0xf8, 0xff, 0x0b, 0x40, 0xf8, 0x04, 0x1d, 0x40, 0xf8, 0x04, 0xdd, 0x42, 0xf8, 0x04, 0x1d, 0x4d, 0xf8, 0x04, 0x1d, 0x42, 0xf8, 0xff, 0x1f, 0x42, 0xf8, 0x00, 0x1f, 0x42, 0xf8, 0xff, 0x1d, 0x08, 0xbf, 0x42, 0xf8, 0xff, 0x1f, 0xd8, 0xbf, 0x42, 0xf8, 0xff, 0x1f, 0x40, 0xf8, 0x04, 0x1b, 0x40, 0xf8, 0x04, 0xdb, 0x41, 0xf8, 0x04, 0x0b, 0x4d, 0xf8, 0x04, 0x0b, 0x40, 0xf8, 0xff, 0x1b, 0x40, 0xf8, 0x00, 0x1b, 0x40, 0xf8, 0xff, 0x19, 0x08, 0xbf, 0x40, 0xf8, 0xff, 0x1b, 0xd8, 0xbf, 0x40, 0xf8, 0xff, 0x1b ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ldr r3, [r1], #4"
        -
          asm_text: "ldr r3, [r1], #4"
        -
          asm_text: "str r3, [r0], #4"
        -
          asm_text: "str r3, [r0], #4"
        -
          asm_text: "ldr r3, [r1, #-4]!"
        -
          asm_text: "ldr r3, [r1, #-4]!"
        -
          asm_text: "str r3, [r0, #-4]!"
        -
          asm_text: "str r3, [r0, #-4]!"
        -
          asm_text: "ldr r0, [r1, #-4]!"
        -
          asm_text: "ldr sp, [r1, #-4]!"
        -
          asm_text: "ldr pc, [r1, #-4]!"
        -
          asm_text: "ldr r1, [r0, #-4]!"
        -
          asm_text: "ldr r1, [sp, #-4]!"
        -
          asm_text: "ldr r1, [r0, #0xff]!"
        -
          asm_text: "ldr r1, [r0, #-0xff]!"
        -
          asm_text: "ldr r1, [r0, #0]!"
        -
          asm_text: "it eq"
        -
          asm_text: "ldreq r1, [r0, #0xff]!"
        -
          asm_text: "it le"
        -
          asm_text: "ldrle r1, [r0, #0xff]!"
        -
          asm_text: "ldr r0, [r1], #4"
        -
          asm_text: "ldr sp, [r1], #4"
        -
          asm_text: "ldr pc, [r1], #4"
        -
          asm_text: "ldr r0, [r1], #4"
        -
          asm_text: "pop {r0}"
        -
          asm_text: "ldr.w r0, [pc, #-0xb04]"
        -
          asm_text: "ldr r0, [r1], #0xff"
        -
          asm_text: "ldr r0, [r1], #0"
        -
          asm_text: "ldr r0, [r1], #-0xff"
        -
          asm_text: "it eq"
        -
          asm_text: "ldreq r0, [r1], #0xff"
        -
          asm_text: "it le"
        -
          asm_text: "ldrle r0, [r1], #0xff"
        -
          asm_text: "str r1, [r0, #-4]!"
        -
          asm_text: "str sp, [r0, #-4]!"
        -
          asm_text: "str r1, [r2, #-4]!"
        -
          asm_text: "str r1, [sp, #-4]!"
        -
          asm_text: "str r1, [r2, #0xff]!"
        -
          asm_text: "str r1, [r2, #0]!"
        -
          asm_text: "str r1, [r2, #-0xff]!"
        -
          asm_text: "it eq"
        -
          asm_text: "streq r1, [r2, #0xff]!"
        -
          asm_text: "it le"
        -
          asm_text: "strle r1, [r2, #0xff]!"
        -
          asm_text: "str r1, [r0], #4"
        -
          asm_text: "str sp, [r0], #4"
        -
          asm_text: "str r0, [r1], #4"
        -
          asm_text: "str r0, [sp], #4"
        -
          asm_text: "str r1, [r0], #0xff"
        -
          asm_text: "str r1, [r0], #0"
        -
          asm_text: "str r1, [r0], #-0xff"
        -
          asm_text: "it eq"
        -
          asm_text: "streq r1, [r0], #0xff"
        -
          asm_text: "it le"
        -
          asm_text: "strle r1, [r0], #0xff"
