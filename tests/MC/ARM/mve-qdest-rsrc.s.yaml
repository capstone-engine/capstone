test_cases:
  -
    input:
      bytes: [ 0x07, 0xee, 0x43, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsub.i8 q0, q3, r3"
  -
    input:
      bytes: [ 0x1f, 0xee, 0x4e, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsub.i16 q0, q7, lr"
  -
    input:
      bytes: [ 0x2b, 0xee, 0x4a, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsub.i32 q1, q5, r10"
  -
    input:
      bytes: [ 0x09, 0xee, 0x47, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadd.i8 q1, q4, r7"
  -
    input:
      bytes: [ 0x1d, 0xee, 0x4b, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadd.i16 q0, q6, r11"
  -
    input:
      bytes: [ 0x23, 0xee, 0x46, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadd.i32 q0, q1, r6"
  -
    input:
      bytes: [ 0x04, 0xee, 0x68, 0x5f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqsub.s8 q2, q2, r8"
  -
    input:
      bytes: [ 0x18, 0xee, 0x60, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqsub.s16 q1, q4, r0"
  -
    input:
      bytes: [ 0x24, 0xee, 0x60, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqsub.s32 q0, q2, r0"
  -
    input:
      bytes: [ 0x02, 0xfe, 0x62, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqsub.u8 q0, q1, r2"
  -
    input:
      bytes: [ 0x14, 0xfe, 0x66, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqsub.u16 q0, q2, r6"
  -
    input:
      bytes: [ 0x24, 0xfe, 0x62, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqsub.u32 q0, q2, r2"
  -
    input:
      bytes: [ 0x0c, 0xee, 0x61, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqadd.s8 q0, q6, r1"
  -
    input:
      bytes: [ 0x18, 0xee, 0x62, 0x6f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqadd.s16 q3, q4, r2"
  -
    input:
      bytes: [ 0x2a, 0xee, 0x6b, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqadd.s32 q0, q5, r11"
  -
    input:
      bytes: [ 0x02, 0xfe, 0x68, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqadd.u8 q0, q1, r8"
  -
    input:
      bytes: [ 0x1a, 0xfe, 0x69, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqadd.u16 q0, q5, r9"
  -
    input:
      bytes: [ 0x20, 0xfe, 0x67, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqadd.u32 q0, q0, r7"
  -
    input:
      bytes: [ 0x32, 0xee, 0x66, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullb.s16 q0, q1, r6"
  -
    input:
      bytes: [ 0x36, 0xfe, 0x0f, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullb.s32 q0, q3, q7"
  -
    input:
      bytes: [ 0x32, 0xee, 0x60, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullt.s16 q0, q1, r0"
  -
    input:
      bytes: [ 0x38, 0xfe, 0x65, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullt.s32 q0, q4, r5"
  -
    input:
      bytes: [ 0x36, 0xfe, 0x47, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsub.f16 q0, q3, r7"
  -
    input:
      bytes: [ 0x32, 0xee, 0x4a, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsub.f32 q1, q1, r10"
  -
    input:
      bytes: [ 0x32, 0xfe, 0x4e, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadd.f16 q0, q1, lr"
  -
    input:
      bytes: [ 0x38, 0xee, 0x44, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadd.f32 q1, q4, r4"
  -
    input:
      bytes: [ 0x06, 0xee, 0x4e, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhsub.s8 q0, q3, lr"
  -
    input:
      bytes: [ 0x10, 0xee, 0x46, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhsub.s16 q0, q0, r6"
  -
    input:
      bytes: [ 0x24, 0xee, 0x47, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhsub.s32 q1, q2, r7"
  -
    input:
      bytes: [ 0x0c, 0xfe, 0x45, 0x3f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhsub.u8 q1, q6, r5"
  -
    input:
      bytes: [ 0x18, 0xfe, 0x4a, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhsub.u16 q0, q4, r10"
  -
    input:
      bytes: [ 0x28, 0xfe, 0x4c, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhsub.u32 q0, q4, r12"
  -
    input:
      bytes: [ 0x04, 0xee, 0x41, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhadd.s8 q0, q2, r1"
  -
    input:
      bytes: [ 0x14, 0xee, 0x41, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhadd.s16 q0, q2, r1"
  -
    input:
      bytes: [ 0x20, 0xee, 0x4a, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhadd.s32 q0, q0, r10"
  -
    input:
      bytes: [ 0x0a, 0xfe, 0x4e, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhadd.u8 q0, q5, lr"
  -
    input:
      bytes: [ 0x14, 0xfe, 0x42, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhadd.u16 q1, q2, r2"
  -
    input:
      bytes: [ 0x24, 0xfe, 0x4b, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhadd.u32 q0, q2, r11"
  -
    input:
      bytes: [ 0x33, 0xee, 0xe0, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.s8 q0, r0"
  -
    input:
      bytes: [ 0x37, 0xee, 0xe3, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.s16 q0, r3"
  -
    input:
      bytes: [ 0x3b, 0xee, 0xee, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.s32 q0, lr"
  -
    input:
      bytes: [ 0x33, 0xfe, 0xe0, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u8 q0, r0"
  -
    input:
      bytes: [ 0x37, 0xfe, 0xe2, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u16 q0, r2"
  -
    input:
      bytes: [ 0x3b, 0xfe, 0xe3, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u32 q0, r3"
  -
    input:
      bytes: [ 0x31, 0xee, 0xe0, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s8 q0, r0"
  -
    input:
      bytes: [ 0x35, 0xee, 0xe1, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s16 q1, r1"
  -
    input:
      bytes: [ 0x39, 0xee, 0xe3, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.s32 q0, r3"
  -
    input:
      bytes: [ 0x31, 0xfe, 0xe1, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u8 q0, r1"
  -
    input:
      bytes: [ 0x35, 0xfe, 0xeb, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u16 q0, r11"
  -
    input:
      bytes: [ 0x39, 0xfe, 0xee, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqshl.u32 q0, lr"
  -
    input:
      bytes: [ 0x33, 0xee, 0x66, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.s8 q0, r6"
  -
    input:
      bytes: [ 0x37, 0xee, 0x6e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.s16 q0, lr"
  -
    input:
      bytes: [ 0x3b, 0xee, 0x64, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.s32 q0, r4"
  -
    input:
      bytes: [ 0x33, 0xfe, 0x60, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.u8 q0, r0"
  -
    input:
      bytes: [ 0x37, 0xfe, 0x6a, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.u16 q0, r10"
  -
    input:
      bytes: [ 0x3b, 0xfe, 0x61, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshl.u32 q0, r1"
  -
    input:
      bytes: [ 0x31, 0xee, 0x6e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.s8 q0, lr"
  -
    input:
      bytes: [ 0x35, 0xee, 0x6e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.s16 q0, lr"
  -
    input:
      bytes: [ 0x39, 0xee, 0x61, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.s32 q0, r1"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x6a, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.u8 q0, r10"
  -
    input:
      bytes: [ 0x35, 0xfe, 0x6a, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.u16 q1, r10"
  -
    input:
      bytes: [ 0x39, 0xfe, 0x6c, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshl.u32 q0, r12"
  -
    input:
      bytes: [ 0x09, 0xfe, 0x68, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vbrsr.8 q0, q4, r8"
  -
    input:
      bytes: [ 0x13, 0xfe, 0x61, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vbrsr.16 q0, q1, r1"
  -
    input:
      bytes: [ 0x2d, 0xfe, 0x60, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vbrsr.32 q0, q6, r0"
  -
    input:
      bytes: [ 0x01, 0xee, 0x6c, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmul.i8 q0, q0, r12"
  -
    input:
      bytes: [ 0x19, 0xee, 0x67, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmul.i16 q0, q4, r7"
  -
    input:
      bytes: [ 0x23, 0xee, 0x6b, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmul.i32 q0, q1, r11"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x6a, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmul.f16 q0, q0, r10"
  -
    input:
      bytes: [ 0x33, 0xee, 0x67, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmul.f32 q0, q1, r7"
  -
    input:
      bytes: [ 0x03, 0xee, 0x66, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmulh.s8 q0, q1, r6"
  -
    input:
      bytes: [ 0x15, 0xee, 0x62, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmulh.s16 q0, q2, r2"
  -
    input:
      bytes: [ 0x27, 0xee, 0x68, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmulh.s32 q1, q3, r8"
  -
    input:
      bytes: [ 0x05, 0xfe, 0x66, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmulh.s8 q0, q2, r6"
  -
    input:
      bytes: [ 0x11, 0xfe, 0x62, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmulh.s16 q0, q0, r2"
  -
    input:
      bytes: [ 0x21, 0xfe, 0x62, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmulh.s32 q0, q0, r2"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x4c, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vfmas.f16 q0, q0, r12"
  -
    input:
      bytes: [ 0x37, 0xee, 0x4e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vfmas.f32 q0, q3, lr"
  -
    input:
      bytes: [ 0x01, 0xee, 0x46, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i8 q0, q0, r6"
  -
    input:
      bytes: [ 0x15, 0xee, 0x49, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i16 q0, q2, r9"
  -
    input:
      bytes: [ 0x2f, 0xee, 0x46, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i32 q0, q7, r6"
  -
    input:
      bytes: [ 0x01, 0xee, 0x46, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i8 q0, q0, r6"
  -
    input:
      bytes: [ 0x15, 0xee, 0x49, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i16 q0, q2, r9"
  -
    input:
      bytes: [ 0x2f, 0xee, 0x46, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i32 q0, q7, r6"
  -
    input:
      bytes: [ 0x0b, 0xee, 0x4e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i8 q0, q5, lr"
  -
    input:
      bytes: [ 0x17, 0xee, 0x4c, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i16 q0, q3, r12"
  -
    input:
      bytes: [ 0x23, 0xee, 0x4b, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmlas.i32 q1, q1, r11"
  -
    input:
      bytes: [ 0x33, 0xfe, 0x46, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vfma.f16 q1, q1, r6"
  -
    input:
      bytes: [ 0x39, 0xee, 0x46, 0xfe ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vfmas.f32 q7, q4, r6"
  -
    input:
      bytes: [ 0x07, 0xee, 0x48, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i8 q0, q3, r8"
  -
    input:
      bytes: [ 0x17, 0xee, 0x4a, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i16 q1, q3, r10"
  -
    input:
      bytes: [ 0x27, 0xee, 0x41, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i32 q1, q3, r1"
  -
    input:
      bytes: [ 0x07, 0xee, 0x48, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i8 q0, q3, r8"
  -
    input:
      bytes: [ 0x17, 0xee, 0x4a, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i16 q1, q3, r10"
  -
    input:
      bytes: [ 0x27, 0xee, 0x41, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i32 q1, q3, r1"
  -
    input:
      bytes: [ 0x0f, 0xee, 0x4a, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i8 q0, q7, r10"
  -
    input:
      bytes: [ 0x11, 0xee, 0x47, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i16 q0, q0, r7"
  -
    input:
      bytes: [ 0x2d, 0xee, 0x4a, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmla.i32 q1, q6, r10"
  -
    input:
      bytes: [ 0x00, 0xee, 0x65, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlash.s8 q0, q0, r5"
  -
    input:
      bytes: [ 0x1a, 0xee, 0x6e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlash.s16 q0, q5, lr"
  -
    input:
      bytes: [ 0x24, 0xee, 0x63, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlash.s32 q0, q2, r3"
  -
    input:
      bytes: [ 0x06, 0xee, 0x63, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlah.s8 q0, q3, r3"
  -
    input:
      bytes: [ 0x16, 0xee, 0x69, 0xae ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlah.s16 q5, q3, r9"
  -
    input:
      bytes: [ 0x22, 0xee, 0x6b, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlah.s32 q0, q1, r11"
  -
    input:
      bytes: [ 0x0a, 0xee, 0x4a, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlash.s8 q0, q5, r10"
  -
    input:
      bytes: [ 0x16, 0xee, 0x42, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlash.s16 q0, q3, r2"
  -
    input:
      bytes: [ 0x20, 0xee, 0x44, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlash.s32 q0, q0, r4"
  -
    input:
      bytes: [ 0x0a, 0xee, 0x4b, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlah.s8 q0, q5, r11"
  -
    input:
      bytes: [ 0x14, 0xee, 0x4a, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlah.s16 q0, q2, r10"
  -
    input:
      bytes: [ 0x28, 0xee, 0x4b, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlah.s32 q0, q4, r11"
  -
    input:
      bytes: [ 0x0f, 0xee, 0x60, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "viwdup.u8 q0, lr, r1, #1"
  -
    input:
      bytes: [ 0x1b, 0xee, 0xe1, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "viwdup.u16 q1, r10, r1, #8"
  -
    input:
      bytes: [ 0x2b, 0xee, 0xe4, 0xcf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "viwdup.u32 q6, r10, r5, #4"
  -
    input:
      bytes: [ 0x0d, 0xee, 0xeb, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vdwdup.u8 q0, r12, r11, #8"
  -
    input:
      bytes: [ 0x1d, 0xee, 0x61, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vdwdup.u16 q0, r12, r1, #2"
  -
    input:
      bytes: [ 0x21, 0xee, 0xe7, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vdwdup.u32 q0, r0, r7, #8"
  -
    input:
      bytes: [ 0x0f, 0xee, 0x6f, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vidup.u8 q0, lr, #2"
  -
    input:
      bytes: [ 0x1f, 0xee, 0xee, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vidup.u16 q0, lr, #4"
  -
    input:
      bytes: [ 0x2d, 0xee, 0x6e, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vidup.u32 q0, r12, #1"
  -
    input:
      bytes: [ 0x05, 0xee, 0xee, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vddup.u8 q0, r4, #4"
  -
    input:
      bytes: [ 0x1b, 0xee, 0xee, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vddup.u16 q0, r10, #4"
  -
    input:
      bytes: [ 0x21, 0xee, 0xef, 0x5f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vddup.u32 q2, r0, #8"
  -
    input:
      bytes: [ 0x0e, 0xf0, 0x01, 0xe8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vctp.8 lr"
  -
    input:
      bytes: [ 0x10, 0xf0, 0x01, 0xe8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vctp.16 r0"
  -
    input:
      bytes: [ 0x2a, 0xf0, 0x01, 0xe8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vctp.32 r10"
  -
    input:
      bytes: [ 0x31, 0xf0, 0x01, 0xe8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vctp.64 r1"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x02, 0xef, 0x54, 0x09 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmult.i8 q0, q1, q2"
  -
    input:
      bytes: [ 0x12, 0xef, 0x54, 0x09 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmule.i16 q0, q1, q2"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x12, 0xef, 0x54, 0x09 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmult.i16 q0, q1, q2"
  -
    input:
      bytes: [ 0x14, 0xef, 0x56, 0x29 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmule.i16 q1, q2, q3"
  -
    input:
      bytes: [ 0x3b, 0xfe, 0xe0, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshl.u32 q0, r0"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x37, 0xfe, 0xe0, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshlt.u16 q0, r0"
  -
    input:
      bytes: [ 0x14, 0xef, 0x52, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrshle.s16 q0, q1, q2"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x14, 0xff, 0x42, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshlt.u16 q0, q1, q2"
  -
    input:
      bytes: [ 0x3b, 0xee, 0x60, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrshle.s32 q0, r0"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x31, 0xee, 0x60, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshlt.s8 q0, r0"
  -
    input:
      bytes: [ 0x39, 0xfe, 0x60, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vshle.u32 q0, r0"
