test_cases:
  -
    input:
      bytes: [ 0xee, 0xfe, 0x86, 0xef ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vminnmv.f16 lr, q3"
  -
    input:
      bytes: [ 0xee, 0xee, 0x82, 0xef ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vminnmv.f32 lr, q1"
  -
    input:
      bytes: [ 0xec, 0xfe, 0x80, 0xef ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vminnmav.f16 lr, q0"
  -
    input:
      bytes: [ 0xec, 0xee, 0x86, 0xef ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vminnmav.f32 lr, q3"
  -
    input:
      bytes: [ 0xee, 0xfe, 0x02, 0xef ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmaxnmv.f16 lr, q1"
  -
    input:
      bytes: [ 0xee, 0xee, 0x02, 0xaf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmaxnmv.f32 r10, q1"
  -
    input:
      bytes: [ 0xec, 0xfe, 0x0c, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmaxnmav.f16 r0, q6"
  -
    input:
      bytes: [ 0xec, 0xee, 0x0e, 0xef ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmaxnmav.f32 lr, q7"
