test_cases:
  -
    input:
      bytes: [ 0x40, 0x1d ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adds r0, r0, #5"
  -
    input:
      bytes: [ 0x08, 0x31 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adds r1, #8"
  -
    input:
      bytes: [ 0x11, 0xf1, 0x08, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adds.w r1, r1, #8"
  -
    input:
      bytes: [ 0x18, 0xf1, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adds.w r8, r8, #8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x40, 0x1d ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addeq r0, r0, #5"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x08, 0x31 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addeq r1, #8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x10, 0xf1, 0x05, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addseq.w r0, r0, #5"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x11, 0xf1, 0x08, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addseq.w r1, r1, #8"
  -
    input:
      bytes: [ 0x50, 0x18 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adds r0, r2, r1"
  -
    input:
      bytes: [ 0x52, 0x18 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adds r2, r2, r1"
  -
    input:
      bytes: [ 0x0b, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add r3, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x50, 0x18 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addeq r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x52, 0x18 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addeq r2, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x12, 0xeb, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addseq.w r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x12, 0xeb, 0x01, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "addseq.w r2, r2, r1"
  -
    input:
      bytes: [ 0x0b, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add r3, r1"
  -
    input:
      bytes: [ 0x7c, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add r4, pc"
  -
    input:
      bytes: [ 0x7c, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add r4, pc"
  -
    input:
      bytes: [ 0x97, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add pc, r2"
  -
    input:
      bytes: [ 0x97, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add pc, r2"
  -
    input:
      bytes: [ 0xef, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add pc, sp, pc"
  -
    input:
      bytes: [ 0x05, 0xb0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add sp, #0x14"
  -
    input:
      bytes: [ 0x7f, 0xb0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add sp, #0x1fc"
  -
    input:
      bytes: [ 0x0d, 0xf5, 0x00, 0x7d ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add.w sp, sp, #0x200"
  -
    input:
      bytes: [ 0xe9, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add r9, sp, r9"
  -
    input:
      bytes: [ 0xd5, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add sp, r10"
  -
    input:
      bytes: [ 0xd5, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add sp, r10"
  -
    input:
      bytes: [ 0xfd, 0x44 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "add sp, pc"
  -
    input:
      bytes: [ 0x12, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r0, r2, r1"
  -
    input:
      bytes: [ 0x0a, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands r2, r1"
  -
    input:
      bytes: [ 0x0a, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands r2, r1"
  -
    input:
      bytes: [ 0x10, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r0, r0, r1"
  -
    input:
      bytes: [ 0x11, 0xea, 0x03, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r3, r1, r3"
  -
    input:
      bytes: [ 0x01, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "and.w r0, r1, r0"
  -
    input:
      bytes: [ 0x0f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands r7, r1"
  -
    input:
      bytes: [ 0x0f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands r7, r1"
  -
    input:
      bytes: [ 0x11, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r8, r1, r8"
  -
    input:
      bytes: [ 0x18, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r8, r8, r1"
  -
    input:
      bytes: [ 0x18, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r0, r8, r0"
  -
    input:
      bytes: [ 0x11, 0xea, 0x08, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r1, r1, r8"
  -
    input:
      bytes: [ 0x12, 0xea, 0x41, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r2, r2, r1, lsl #1"
  -
    input:
      bytes: [ 0x11, 0xea, 0x50, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ands.w r0, r1, r0, lsr #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x02, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0b, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq r3, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0b, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq r3, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x00, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r0, r0, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x01, 0xea, 0x02, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r2, r1, r2"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x11, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andseq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x01, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x08, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x08, 0xea, 0x04, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r4, r8, r4"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x04, 0xea, 0x08, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r4, r4, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x00, 0xea, 0x41, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r0, r0, r1, lsl #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x01, 0xea, 0x55, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "andeq.w r5, r1, r5, lsr #1"
  -
    input:
      bytes: [ 0x92, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r0, r2, r1"
  -
    input:
      bytes: [ 0x4d, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors r5, r1"
  -
    input:
      bytes: [ 0x4d, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors r5, r1"
  -
    input:
      bytes: [ 0x90, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r0, r0, r1"
  -
    input:
      bytes: [ 0x91, 0xea, 0x02, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r2, r1, r2"
  -
    input:
      bytes: [ 0x81, 0xea, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eor.w r1, r1, r1"
  -
    input:
      bytes: [ 0x4f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors r7, r1"
  -
    input:
      bytes: [ 0x4f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors r7, r1"
  -
    input:
      bytes: [ 0x91, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r8, r1, r8"
  -
    input:
      bytes: [ 0x98, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r8, r8, r1"
  -
    input:
      bytes: [ 0x98, 0xea, 0x06, 0x06 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r6, r8, r6"
  -
    input:
      bytes: [ 0x90, 0xea, 0x08, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r0, r0, r8"
  -
    input:
      bytes: [ 0x92, 0xea, 0x41, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r2, r2, r1, lsl #1"
  -
    input:
      bytes: [ 0x91, 0xea, 0x50, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eors.w r0, r1, r0, lsr #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x82, 0xea, 0x01, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r3, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq r0, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x4a, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x83, 0xea, 0x01, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r3, r3, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x81, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x91, 0xea, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eorseq.w r1, r1, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x4f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x4f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x81, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x88, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x88, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r0, r8, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x83, 0xea, 0x08, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r3, r3, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x84, 0xea, 0x41, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r4, r4, r1, lsl #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x81, 0xea, 0x50, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "eoreq.w r0, r1, r0, lsr #1"
  -
    input:
      bytes: [ 0x12, 0xfa, 0x01, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r0, r2, r1"
  -
    input:
      bytes: [ 0x8a, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls r2, r1"
  -
    input:
      bytes: [ 0x11, 0xfa, 0x02, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r2, r1, r2"
  -
    input:
      bytes: [ 0x10, 0xfa, 0x01, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r0, r0, r1"
  -
    input:
      bytes: [ 0x11, 0xfa, 0x04, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r4, r1, r4"
  -
    input:
      bytes: [ 0x01, 0xfa, 0x04, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsl.w r4, r1, r4"
  -
    input:
      bytes: [ 0x8f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls r7, r1"
  -
    input:
      bytes: [ 0x11, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r8, r1, r8"
  -
    input:
      bytes: [ 0x18, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r8, r8, r1"
  -
    input:
      bytes: [ 0x18, 0xfa, 0x03, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r3, r8, r3"
  -
    input:
      bytes: [ 0x15, 0xfa, 0x08, 0xf5 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsls.w r5, r5, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x02, 0xfa, 0x01, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x8a, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x01, 0xfa, 0x02, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r2, r1, r2"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x00, 0xfa, 0x01, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r0, r0, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x01, 0xfa, 0x03, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r3, r1, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x11, 0xfa, 0x04, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lslseq.w r4, r1, r4"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x8f, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x01, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x08, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x08, 0xfa, 0x00, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r0, r8, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x03, 0xfa, 0x08, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsleq.w r3, r3, r8"
  -
    input:
      bytes: [ 0x32, 0xfa, 0x01, 0xf6 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r6, r2, r1"
  -
    input:
      bytes: [ 0xca, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs r2, r1"
  -
    input:
      bytes: [ 0x31, 0xfa, 0x02, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r2, r1, r2"
  -
    input:
      bytes: [ 0x32, 0xfa, 0x01, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r2, r2, r1"
  -
    input:
      bytes: [ 0x31, 0xfa, 0x03, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r3, r1, r3"
  -
    input:
      bytes: [ 0x21, 0xfa, 0x04, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsr.w r4, r1, r4"
  -
    input:
      bytes: [ 0xcf, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs r7, r1"
  -
    input:
      bytes: [ 0x31, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r8, r1, r8"
  -
    input:
      bytes: [ 0x38, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r8, r8, r1"
  -
    input:
      bytes: [ 0x38, 0xfa, 0x02, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r2, r8, r2"
  -
    input:
      bytes: [ 0x35, 0xfa, 0x08, 0xf5 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrs.w r5, r5, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x22, 0xfa, 0x01, 0xf6 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r6, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0xcf, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x21, 0xfa, 0x07, 0xf7 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r7, r1, r7"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x27, 0xfa, 0x01, 0xf7 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r7, r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x21, 0xfa, 0x02, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r2, r1, r2"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x31, 0xfa, 0x00, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsrseq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0xcf, 0x40 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x21, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x28, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x28, 0xfa, 0x01, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r1, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x24, 0xfa, 0x08, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "lsreq.w r4, r4, r8"
  -
    input:
      bytes: [ 0x56, 0xfa, 0x05, 0xf7 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r7, r6, r5"
  -
    input:
      bytes: [ 0x08, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs r0, r1"
  -
    input:
      bytes: [ 0x51, 0xfa, 0x00, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r0, r1, r0"
  -
    input:
      bytes: [ 0x53, 0xfa, 0x01, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r3, r3, r1"
  -
    input:
      bytes: [ 0x51, 0xfa, 0x01, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r1, r1, r1"
  -
    input:
      bytes: [ 0x41, 0xfa, 0x00, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asr.w r0, r1, r0"
  -
    input:
      bytes: [ 0x0f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs r7, r1"
  -
    input:
      bytes: [ 0x51, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r8, r1, r8"
  -
    input:
      bytes: [ 0x58, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r8, r8, r1"
  -
    input:
      bytes: [ 0x58, 0xfa, 0x05, 0xf5 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r5, r8, r5"
  -
    input:
      bytes: [ 0x55, 0xfa, 0x08, 0xf5 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrs.w r5, r5, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xfa, 0x01, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0a, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xfa, 0x01, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r1, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x44, 0xfa, 0x01, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r4, r4, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xfa, 0x06, 0xf6 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r6, r1, r6"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x51, 0xfa, 0x03, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asrseq.w r3, r1, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0xfa, 0x01, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r1, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x43, 0xfa, 0x08, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "asreq.w r3, r3, r8"
  -
    input:
      bytes: [ 0x52, 0xeb, 0x01, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r5, r2, r1"
  -
    input:
      bytes: [ 0x4d, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs r5, r1"
  -
    input:
      bytes: [ 0x4b, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs r3, r1"
  -
    input:
      bytes: [ 0x52, 0xeb, 0x01, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r2, r2, r1"
  -
    input:
      bytes: [ 0x51, 0xeb, 0x03, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r3, r1, r3"
  -
    input:
      bytes: [ 0x41, 0xeb, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adc.w r0, r1, r0"
  -
    input:
      bytes: [ 0x4f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs r7, r1"
  -
    input:
      bytes: [ 0x4f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs r7, r1"
  -
    input:
      bytes: [ 0x51, 0xeb, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r8, r1, r8"
  -
    input:
      bytes: [ 0x58, 0xeb, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r8, r8, r1"
  -
    input:
      bytes: [ 0x58, 0xeb, 0x05, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r5, r8, r5"
  -
    input:
      bytes: [ 0x52, 0xeb, 0x08, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r2, r2, r8"
  -
    input:
      bytes: [ 0x53, 0xeb, 0x41, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r3, r3, r1, lsl #1"
  -
    input:
      bytes: [ 0x51, 0xeb, 0x54, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcs.w r4, r1, r4, lsr #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xeb, 0x03, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r1, r2, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x49, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq r1, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x4b, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq r3, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x43, 0xeb, 0x01, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r3, r3, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xeb, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x51, 0xeb, 0x03, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adcseq.w r3, r1, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x4f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x4f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xeb, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0xeb, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0xeb, 0x03, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r3, r8, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xeb, 0x08, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r1, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xeb, 0x41, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r2, r2, r1, lsl #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xeb, 0x51, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "adceq.w r1, r1, r1, lsr #1"
  -
    input:
      bytes: [ 0x72, 0xeb, 0x01, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r3, r2, r1"
  -
    input:
      bytes: [ 0x8c, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs r4, r1"
  -
    input:
      bytes: [ 0x74, 0xeb, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r1, r4, r1"
  -
    input:
      bytes: [ 0x74, 0xeb, 0x01, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r4, r4, r1"
  -
    input:
      bytes: [ 0x71, 0xeb, 0x02, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r2, r1, r2"
  -
    input:
      bytes: [ 0x61, 0xeb, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbc.w r0, r1, r0"
  -
    input:
      bytes: [ 0x8f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs r7, r1"
  -
    input:
      bytes: [ 0x71, 0xeb, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r8, r1, r8"
  -
    input:
      bytes: [ 0x78, 0xeb, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r8, r8, r1"
  -
    input:
      bytes: [ 0x78, 0xeb, 0x04, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r4, r8, r4"
  -
    input:
      bytes: [ 0x73, 0xeb, 0x08, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r3, r3, r8"
  -
    input:
      bytes: [ 0x72, 0xeb, 0x41, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r2, r2, r1, lsl #1"
  -
    input:
      bytes: [ 0x71, 0xeb, 0x55, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcs.w r5, r1, r5, lsr #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x62, 0xeb, 0x01, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r5, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x8d, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x65, 0xeb, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r1, r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x65, 0xeb, 0x01, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r5, r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x61, 0xeb, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x71, 0xeb, 0x02, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbcseq.w r2, r1, r2"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x8f, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x61, 0xeb, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x68, 0xeb, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x68, 0xeb, 0x07, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r7, r8, r7"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x67, 0xeb, 0x08, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r7, r7, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x62, 0xeb, 0x41, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r2, r2, r1, lsl #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x61, 0xeb, 0x55, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "sbceq.w r5, r1, r5, lsr #1"
  -
    input:
      bytes: [ 0x72, 0xfa, 0x01, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r3, r2, r1"
  -
    input:
      bytes: [ 0xc8, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors r0, r1"
  -
    input:
      bytes: [ 0x70, 0xfa, 0x01, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r1, r0, r1"
  -
    input:
      bytes: [ 0x72, 0xfa, 0x01, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r2, r2, r1"
  -
    input:
      bytes: [ 0x71, 0xfa, 0x02, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r2, r1, r2"
  -
    input:
      bytes: [ 0x61, 0xfa, 0x05, 0xf5 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ror.w r5, r1, r5"
  -
    input:
      bytes: [ 0xcf, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors r7, r1"
  -
    input:
      bytes: [ 0x71, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r8, r1, r8"
  -
    input:
      bytes: [ 0x78, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r8, r8, r1"
  -
    input:
      bytes: [ 0x78, 0xfa, 0x06, 0xf6 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r6, r8, r6"
  -
    input:
      bytes: [ 0x76, 0xfa, 0x08, 0xf6 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rors.w r6, r6, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x62, 0xfa, 0x01, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r4, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0xcc, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq r4, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x64, 0xfa, 0x01, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r1, r4, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x64, 0xfa, 0x01, 0xf4 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r4, r4, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x61, 0xfa, 0x00, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x71, 0xfa, 0x00, 0xf0 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "rorseq.w r0, r1, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0xcf, 0x41 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x61, 0xfa, 0x08, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x68, 0xfa, 0x01, 0xf8 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x68, 0xfa, 0x03, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r3, r8, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x61, 0xfa, 0x08, 0xf1 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "roreq.w r1, r1, r8"
  -
    input:
      bytes: [ 0x52, 0xea, 0x01, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r7, r2, r1"
  -
    input:
      bytes: [ 0x0a, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs r2, r1"
  -
    input:
      bytes: [ 0x0b, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs r3, r1"
  -
    input:
      bytes: [ 0x54, 0xea, 0x01, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r4, r4, r1"
  -
    input:
      bytes: [ 0x51, 0xea, 0x05, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r5, r1, r5"
  -
    input:
      bytes: [ 0x41, 0xea, 0x02, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orr.w r2, r1, r2"
  -
    input:
      bytes: [ 0x0f, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs r7, r1"
  -
    input:
      bytes: [ 0x0f, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs r7, r1"
  -
    input:
      bytes: [ 0x51, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r8, r1, r8"
  -
    input:
      bytes: [ 0x58, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r8, r8, r1"
  -
    input:
      bytes: [ 0x58, 0xea, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r1, r8, r1"
  -
    input:
      bytes: [ 0x50, 0xea, 0x08, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r0, r0, r8"
  -
    input:
      bytes: [ 0x51, 0xea, 0x41, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r1, r1, r1, lsl #1"
  -
    input:
      bytes: [ 0x51, 0xea, 0x50, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrs.w r0, r1, r0, lsr #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0d, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0d, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xea, 0x01, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r2, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xea, 0x03, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r3, r1, r3"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x51, 0xea, 0x04, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orrseq.w r4, r1, r4"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0f, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x0f, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x48, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r0, r8, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x40, 0xea, 0x08, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r0, r0, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x42, 0xea, 0x41, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r2, r2, r1, lsl #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x41, 0xea, 0x52, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "orreq.w r2, r1, r2, lsr #1"
  -
    input:
      bytes: [ 0x32, 0xea, 0x01, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r3, r2, r1"
  -
    input:
      bytes: [ 0x8a, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics r2, r1"
  -
    input:
      bytes: [ 0x32, 0xea, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r1, r2, r1"
  -
    input:
      bytes: [ 0x32, 0xea, 0x01, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r2, r2, r1"
  -
    input:
      bytes: [ 0x31, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r0, r1, r0"
  -
    input:
      bytes: [ 0x21, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bic.w r0, r1, r0"
  -
    input:
      bytes: [ 0x8f, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics r7, r1"
  -
    input:
      bytes: [ 0x31, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r8, r1, r8"
  -
    input:
      bytes: [ 0x38, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r8, r8, r1"
  -
    input:
      bytes: [ 0x38, 0xea, 0x07, 0x07 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r7, r8, r7"
  -
    input:
      bytes: [ 0x35, 0xea, 0x08, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r5, r5, r8"
  -
    input:
      bytes: [ 0x33, 0xea, 0x41, 0x03 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r3, r3, r1, lsl #1"
  -
    input:
      bytes: [ 0x31, 0xea, 0x54, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bics.w r4, r1, r4, lsr #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x22, 0xea, 0x01, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r0, r2, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x8d, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x25, 0xea, 0x01, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r1, r5, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x24, 0xea, 0x01, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r4, r4, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x21, 0xea, 0x02, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r2, r1, r2"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x31, 0xea, 0x05, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "bicseq.w r5, r1, r5"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x8f, 0x43 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq r7, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x21, 0xea, 0x08, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r8, r1, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x28, 0xea, 0x01, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r8, r8, r1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x28, 0xea, 0x00, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r0, r8, r0"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x22, 0xea, 0x08, 0x02 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r2, r2, r8"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x24, 0xea, 0x41, 0x04 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r4, r4, r1, lsl #1"
  -
    input:
      bytes: [ 0x08, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "it eq"
  -
    input:
      bytes: [ 0x21, 0xea, 0x55, 0x05 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "biceq.w r5, r1, r5, lsr #1"
