test_cases:
  -
    input:
      bytes: [ 0xa1, 0x07, 0x40, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.s8 d16, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0x50, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.s16 d16, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0x60, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.s32 d16, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0x40, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.u8 d16, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0x50, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.u16 d16, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0x60, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.u32 d16, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x0d, 0x60, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.f32 d16, d16, d17"
  -
    input:
      bytes: [ 0xe2, 0x07, 0x40, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.s8 q8, q8, q9"
  -
    input:
      bytes: [ 0xe2, 0x07, 0x50, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.s16 q8, q8, q9"
  -
    input:
      bytes: [ 0xe2, 0x07, 0x60, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.s32 q8, q8, q9"
  -
    input:
      bytes: [ 0xe2, 0x07, 0x40, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.u8 q8, q8, q9"
  -
    input:
      bytes: [ 0xe2, 0x07, 0x50, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.u16 q8, q8, q9"
  -
    input:
      bytes: [ 0xe2, 0x07, 0x60, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.u32 q8, q8, q9"
  -
    input:
      bytes: [ 0xe2, 0x0d, 0x60, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabd.f32 q8, q8, q9"
  -
    input:
      bytes: [ 0xa1, 0x07, 0xc0, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabdl.s8 q8, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0xd0, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabdl.s16 q8, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0xe0, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabdl.s32 q8, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0xc0, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabdl.u8 q8, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0xd0, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabdl.u16 q8, d16, d17"
  -
    input:
      bytes: [ 0xa1, 0x07, 0xe0, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabdl.u32 q8, d16, d17"
  -
    input:
      bytes: [ 0xb1, 0x07, 0x42, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.s8 d16, d18, d17"
  -
    input:
      bytes: [ 0xb1, 0x07, 0x52, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.s16 d16, d18, d17"
  -
    input:
      bytes: [ 0xb1, 0x07, 0x62, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.s32 d16, d18, d17"
  -
    input:
      bytes: [ 0xb1, 0x07, 0x42, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.u8 d16, d18, d17"
  -
    input:
      bytes: [ 0xb1, 0x07, 0x52, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.u16 d16, d18, d17"
  -
    input:
      bytes: [ 0xb1, 0x07, 0x62, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.u32 d16, d18, d17"
  -
    input:
      bytes: [ 0xf4, 0x27, 0x40, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.s8 q9, q8, q10"
  -
    input:
      bytes: [ 0xf4, 0x27, 0x50, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.s16 q9, q8, q10"
  -
    input:
      bytes: [ 0xf4, 0x27, 0x60, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.s32 q9, q8, q10"
  -
    input:
      bytes: [ 0xf4, 0x27, 0x40, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.u8 q9, q8, q10"
  -
    input:
      bytes: [ 0xf4, 0x27, 0x50, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.u16 q9, q8, q10"
  -
    input:
      bytes: [ 0xf4, 0x27, 0x60, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vaba.u32 q9, q8, q10"
  -
    input:
      bytes: [ 0xa2, 0x05, 0xc3, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabal.s8 q8, d19, d18"
  -
    input:
      bytes: [ 0xa2, 0x05, 0xd3, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabal.s16 q8, d19, d18"
  -
    input:
      bytes: [ 0xa2, 0x05, 0xe3, 0xf2 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabal.s32 q8, d19, d18"
  -
    input:
      bytes: [ 0xa2, 0x05, 0xc3, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabal.u8 q8, d19, d18"
  -
    input:
      bytes: [ 0xa2, 0x05, 0xd3, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabal.u16 q8, d19, d18"
  -
    input:
      bytes: [ 0xa2, 0x05, 0xe3, 0xf3 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_ARM" ]
    expected:
      insns:
        -
          asm_text: "vabal.u32 q8, d19, d18"
