test_cases:
  -
    input:
      bytes: [ 0x3f, 0xee, 0x09, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtb.f16.f32 q1, q4"
  -
    input:
      bytes: [ 0x3f, 0xfe, 0x03, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtt.f32.f16 q0, q1"
  -
    input:
      bytes: [ 0xb2, 0xee, 0xc0, 0x0b ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtt.f64.f16 d0, s0"
  -
    input:
      bytes: [ 0xf3, 0xee, 0xc2, 0x0b ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtt.f16.f64 s1, d2"
  -
    input:
      bytes: [ 0x3f, 0xee, 0x09, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtt.f16.f32 q1, q4"
  -
    input:
      bytes: [ 0x0c, 0xee, 0x0c, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmladhx.s8 q1, q6, q6"
  -
    input:
      bytes: [ 0x12, 0xee, 0x08, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmladhx.s16 q0, q1, q4"
  -
    input:
      bytes: [ 0x26, 0xee, 0x0e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmladhx.s32 q0, q3, q7"
  -
    input:
      bytes: [ 0x02, 0xee, 0x02, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmladh.s8 q0, q1, q1"
  -
    input:
      bytes: [ 0x14, 0xee, 0x04, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmladh.s16 q0, q2, q2"
  -
    input:
      bytes: [ 0x2a, 0xee, 0x0e, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmladh.s32 q1, q5, q7"
  -
    input:
      bytes: [ 0x0e, 0xee, 0x01, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladhx.s8 q0, q7, q0"
  -
    input:
      bytes: [ 0x10, 0xee, 0x03, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladhx.s16 q0, q0, q1"
  -
    input:
      bytes: [ 0x20, 0xee, 0x09, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladhx.s32 q1, q0, q4"
  -
    input:
      bytes: [ 0x22, 0xee, 0x01, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladhx.s32 q1, q1, q0"
  -
    input:
      bytes: [ 0x20, 0xee, 0x03, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladhx.s32 q1, q0, q1"
  -
    input:
      bytes: [ 0x0c, 0xee, 0x05, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladh.s8 q0, q6, q2"
  -
    input:
      bytes: [ 0x1a, 0xee, 0x09, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladh.s16 q1, q5, q4"
  -
    input:
      bytes: [ 0x24, 0xee, 0x05, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmladh.s32 q0, q2, q2"
  -
    input:
      bytes: [ 0x08, 0xfe, 0x0e, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlsdhx.s8 q1, q4, q7"
  -
    input:
      bytes: [ 0x14, 0xfe, 0x0a, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlsdhx.s16 q0, q2, q5"
  -
    input:
      bytes: [ 0x28, 0xfe, 0x0c, 0x7e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlsdhx.s32 q3, q4, q6"
  -
    input:
      bytes: [ 0x06, 0xfe, 0x0c, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlsdh.s8 q0, q3, q6"
  -
    input:
      bytes: [ 0x18, 0xfe, 0x02, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlsdh.s16 q0, q4, q1"
  -
    input:
      bytes: [ 0x2a, 0xfe, 0x00, 0x4e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmlsdh.s32 q2, q5, q0"
  -
    input:
      bytes: [ 0x06, 0xfe, 0x03, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdhx.s8 q0, q3, q1"
  -
    input:
      bytes: [ 0x12, 0xfe, 0x09, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdhx.s16 q0, q1, q4"
  -
    input:
      bytes: [ 0x2c, 0xfe, 0x07, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdhx.s32 q1, q6, q3"
  -
    input:
      bytes: [ 0x06, 0xfe, 0x01, 0x6e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdh.s8 q3, q3, q0"
  -
    input:
      bytes: [ 0x1e, 0xfe, 0x09, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdh.s16 q0, q7, q4"
  -
    input:
      bytes: [ 0x2c, 0xfe, 0x0f, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdh.s32 q0, q6, q7"
  -
    input:
      bytes: [ 0x20, 0xfe, 0x0f, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdh.s32 q0, q0, q7"
  -
    input:
      bytes: [ 0x2c, 0xfe, 0x01, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqrdmlsdh.s32 q0, q6, q0"
  -
    input:
      bytes: [ 0x32, 0xee, 0x05, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f16 q0, q1, q2, #0x5a"
  -
    input:
      bytes: [ 0x34, 0xee, 0x0a, 0xce ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f16 q6, q2, q5, #0"
  -
    input:
      bytes: [ 0x30, 0xee, 0x0b, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f16 q1, q0, q5, #0x5a"
  -
    input:
      bytes: [ 0x30, 0xee, 0x0a, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f16 q1, q0, q5, #0xb4"
  -
    input:
      bytes: [ 0x30, 0xee, 0x0b, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f16 q1, q0, q5, #0x10e"
  -
    input:
      bytes: [ 0x30, 0xee, 0x03, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f16 q1, q0, q1, #0x10e"
  -
    input:
      bytes: [ 0x3e, 0xfe, 0x0a, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f32 q1, q7, q5, #0"
  -
    input:
      bytes: [ 0x38, 0xfe, 0x05, 0x6e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f32 q3, q4, q2, #0x5a"
  -
    input:
      bytes: [ 0x32, 0xfe, 0x06, 0xbe ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f32 q5, q1, q3, #0xb4"
  -
    input:
      bytes: [ 0x3e, 0xfe, 0x09, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmul.f32 q0, q7, q4, #0x10e"
  -
    input:
      bytes: [ 0x0d, 0xee, 0x00, 0x4e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullb.s8 q2, q6, q0"
  -
    input:
      bytes: [ 0x19, 0xee, 0x06, 0x6e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullb.s16 q3, q4, q3"
  -
    input:
      bytes: [ 0x2b, 0xee, 0x0c, 0x6e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullb.s32 q3, q5, q6"
  -
    input:
      bytes: [ 0x0d, 0xee, 0x04, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullt.s8 q0, q6, q2"
  -
    input:
      bytes: [ 0x11, 0xee, 0x04, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullt.s16 q0, q0, q2"
  -
    input:
      bytes: [ 0x29, 0xee, 0x08, 0x5e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullt.s32 q2, q4, q4"
  -
    input:
      bytes: [ 0x37, 0xee, 0x0e, 0x4e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullb.p8 q2, q3, q7"
  -
    input:
      bytes: [ 0x33, 0xfe, 0x06, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullb.p16 q0, q1, q3"
  -
    input:
      bytes: [ 0x33, 0xee, 0x0e, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullt.p8 q1, q1, q7"
  -
    input:
      bytes: [ 0x3f, 0xfe, 0x0e, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullt.p16 q0, q7, q7"
  -
    input:
      bytes: [ 0x09, 0xee, 0x0b, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulh.s8 q0, q4, q5"
  -
    input:
      bytes: [ 0x1f, 0xee, 0x09, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulh.s16 q0, q7, q4"
  -
    input:
      bytes: [ 0x2f, 0xee, 0x09, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulh.s32 q0, q7, q4"
  -
    input:
      bytes: [ 0x0b, 0xfe, 0x05, 0x6e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulh.u8 q3, q5, q2"
  -
    input:
      bytes: [ 0x1f, 0xfe, 0x09, 0x4e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulh.u16 q2, q7, q4"
  -
    input:
      bytes: [ 0x27, 0xfe, 0x05, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulh.u32 q1, q3, q2"
  -
    input:
      bytes: [ 0x03, 0xee, 0x05, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrmulh.s8 q1, q1, q2"
  -
    input:
      bytes: [ 0x13, 0xee, 0x05, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrmulh.s16 q1, q1, q2"
  -
    input:
      bytes: [ 0x23, 0xee, 0x01, 0x7e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrmulh.s32 q3, q1, q0"
  -
    input:
      bytes: [ 0x0d, 0xfe, 0x01, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrmulh.u8 q1, q6, q0"
  -
    input:
      bytes: [ 0x17, 0xfe, 0x0d, 0x9e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrmulh.u16 q4, q3, q6"
  -
    input:
      bytes: [ 0x25, 0xfe, 0x05, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrmulh.u32 q1, q2, q2"
  -
    input:
      bytes: [ 0x33, 0xee, 0x03, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnb.s16 q0, q1"
  -
    input:
      bytes: [ 0x33, 0xee, 0x01, 0x5e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnt.s16 q2, q0"
  -
    input:
      bytes: [ 0x37, 0xee, 0x0b, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnb.s32 q0, q5"
  -
    input:
      bytes: [ 0x37, 0xee, 0x03, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnt.s32 q0, q1"
  -
    input:
      bytes: [ 0x33, 0xfe, 0x09, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnb.u16 q0, q4"
  -
    input:
      bytes: [ 0x33, 0xfe, 0x0f, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnt.u16 q0, q7"
  -
    input:
      bytes: [ 0x37, 0xfe, 0x09, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnb.u32 q0, q4"
  -
    input:
      bytes: [ 0x37, 0xfe, 0x05, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovnt.u32 q0, q2"
  -
    input:
      bytes: [ 0x3f, 0xee, 0x09, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtb.f16.f32 q1, q4"
  -
    input:
      bytes: [ 0x3f, 0xee, 0x09, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtt.f16.f32 q1, q4"
  -
    input:
      bytes: [ 0x3f, 0xfe, 0x07, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtb.f32.f16 q0, q3"
  -
    input:
      bytes: [ 0x3f, 0xfe, 0x03, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtt.f32.f16 q0, q1"
  -
    input:
      bytes: [ 0x31, 0xee, 0x87, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovunb.s16 q0, q3"
  -
    input:
      bytes: [ 0x31, 0xee, 0x83, 0x9e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovunt.s16 q4, q1"
  -
    input:
      bytes: [ 0x35, 0xee, 0x8f, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovunb.s32 q1, q7"
  -
    input:
      bytes: [ 0x35, 0xee, 0x85, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqmovunt.s32 q0, q2"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x8b, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovnb.i16 q1, q5"
  -
    input:
      bytes: [ 0x31, 0xfe, 0x81, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovnt.i16 q0, q0"
  -
    input:
      bytes: [ 0x35, 0xfe, 0x81, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovnb.i32 q1, q0"
  -
    input:
      bytes: [ 0x35, 0xfe, 0x87, 0x7e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmovnt.i32 q3, q3"
  -
    input:
      bytes: [ 0x0e, 0xee, 0x0a, 0x6f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s8 q3, q7, q5, #0x5a"
  -
    input:
      bytes: [ 0x10, 0xee, 0x0c, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s16 q0, q0, q6, #0x5a"
  -
    input:
      bytes: [ 0x10, 0xee, 0x0c, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s16 q0, q0, q6, #0x5a"
  -
    input:
      bytes: [ 0x12, 0xee, 0x00, 0x7f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s16 q3, q1, q0, #0x10e"
  -
    input:
      bytes: [ 0x28, 0xee, 0x0a, 0x6f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s32 q3, q4, q5, #0x5a"
  -
    input:
      bytes: [ 0x2e, 0xee, 0x04, 0xdf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s32 q6, q7, q2, #0x10e"
  -
    input:
      bytes: [ 0x30, 0xee, 0x04, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadc.i32 q1, q0, q2"
  -
    input:
      bytes: [ 0x32, 0xee, 0x02, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vadci.i32 q0, q1, q1"
  -
    input:
      bytes: [ 0x00, 0xfe, 0x04, 0x2f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.i8 q1, q0, q2, #0x5a"
  -
    input:
      bytes: [ 0x14, 0xfe, 0x06, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.i16 q0, q2, q3, #0x5a"
  -
    input:
      bytes: [ 0x1a, 0xfe, 0x0a, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.i16 q0, q5, q5, #0x10e"
  -
    input:
      bytes: [ 0x24, 0xfe, 0x0a, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.i32 q4, q2, q5, #0x5a"
  -
    input:
      bytes: [ 0x2a, 0xfe, 0x00, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.i32 q5, q5, q0, #0x10e"
  -
    input:
      bytes: [ 0x32, 0xfe, 0x02, 0x6f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsbc.i32 q3, q1, q1"
  -
    input:
      bytes: [ 0x3c, 0xfe, 0x04, 0x5f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vsbci.i32 q2, q6, q2"
  -
    input:
      bytes: [ 0x38, 0xee, 0x0b, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullb.s16 q0, q4, q5"
  -
    input:
      bytes: [ 0x3c, 0xee, 0x0b, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullt.s16 q0, q6, q5"
  -
    input:
      bytes: [ 0x36, 0xfe, 0x0f, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullb.s32 q0, q3, q7"
  -
    input:
      bytes: [ 0x3e, 0xfe, 0x0b, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullt.s32 q0, q7, q5"
  -
    input:
      bytes: [ 0x32, 0xee, 0x01, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullb.s16 q0, q1, q0"
  -
    input:
      bytes: [ 0x30, 0xee, 0x0b, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullt.s16 q0, q0, q5"
  -
    input:
      bytes: [ 0x32, 0xee, 0x05, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullt.s16 q0, q1, q2"
  -
    input:
      bytes: [ 0x30, 0xee, 0x60, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullb.s16 q0, q0, r0"
  -
    input:
      bytes: [ 0x20, 0xfe, 0x02, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.i32 q0, q0, q1, #0x10e"
  -
    input:
      bytes: [ 0x90, 0xfd, 0x42, 0x08 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcadd.f32 q0, q0, q1, #0x10e"
  -
    input:
      bytes: [ 0x20, 0xee, 0x02, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s32 q0, q0, q1, #0x10e"
  -
    input:
      bytes: [ 0x10, 0xee, 0x02, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vhcadd.s16 q0, q0, q1, #0x10e"
  -
    input:
      bytes: [ 0xb0, 0xff, 0xc0, 0x00 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vrev32.8 q0, q0"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x32, 0xfe, 0x05, 0x1f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmulltt.s32 q0, q1, q2"
  -
    input:
      bytes: [ 0x32, 0xee, 0x05, 0x0f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vqdmullbe.s16 q0, q1, q2"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x33, 0xee, 0x04, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmulltt.p8 q0, q1, q2"
  -
    input:
      bytes: [ 0x33, 0xfe, 0x04, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vmullbe.p16 q0, q1, q2"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0x8f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpste"
  -
    input:
      bytes: [ 0x32, 0xee, 0x04, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmult.f16 q0, q1, q2, #0xb4"
  -
    input:
      bytes: [ 0x32, 0xee, 0x04, 0x1e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcmule.f16 q0, q1, q2, #0xb4"
  -
    input:
      bytes: [ 0x71, 0xfe, 0x4d, 0xcf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpstet"
  -
    input:
      bytes: [ 0x3f, 0xee, 0x03, 0x0e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtbt.f16.f32 q0, q1"
  -
    input:
      bytes: [ 0xb7, 0xff, 0x42, 0x01 ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtne.s16.f16 q0, q1"
  -
    input:
      bytes: [ 0x77, 0xee, 0xc1, 0x9f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpte.f32 lt, q3, r1"
  -
    input:
      bytes: [ 0x3f, 0xee, 0x01, 0x5e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvttt.f16.f32 q2, q0"
  -
    input:
      bytes: [ 0x3f, 0xfe, 0x01, 0x3e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtte.f32.f16 q1, q0"
  -
    input:
      bytes: [ 0x77, 0xee, 0xc1, 0x9f ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vpte.f32 lt, q3, r1"
  -
    input:
      bytes: [ 0x3f, 0xee, 0x01, 0x4e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtbt.f16.f32 q2, q0"
  -
    input:
      bytes: [ 0x3f, 0xfe, 0x01, 0x2e ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtbe.f32.f16 q1, q0"
  -
    input:
      bytes: [ 0x0c, 0xbf ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "ite eq"
  -
    input:
      bytes: [ 0xb3, 0xee, 0xe0, 0x0a ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvtteq.f16.f32 s0, s1"
  -
    input:
      bytes: [ 0xb3, 0xee, 0xe0, 0x0a ]
      arch: "CS_ARCH_ARM"
      options: [ "CS_MODE_V8", "CS_MODE_MCLASS", "CS_MODE_THUMB" ]
    expected:
      insns:
        -
          asm_text: "vcvttne.f16.f32 s0, s1"
