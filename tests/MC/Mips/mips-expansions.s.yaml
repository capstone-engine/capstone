test_cases:
  -
    input:
      bytes: [ 0x7b, 0x00, 0x05, 0x34 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "ori $a1, $zero, 123"
  -
    input:
      bytes: [ 0xd7, 0xf6, 0x06, 0x24 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addiu $a2, $zero, -2345"
  -
    input:
      bytes: [ 0x01, 0x00, 0x07, 0x3c ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "lui $a3, 1"
  -
    input:
      bytes: [ 0x02, 0x00, 0xe7, 0x34 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "ori $a3, $a3, 2"
  -
    input:
      bytes: [ 0x14, 0x00, 0x04, 0x24 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addiu $a0, $zero, 20"
  -
    input:
      bytes: [ 0x01, 0x00, 0x07, 0x3c ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "lui $a3, 1"
  -
    input:
      bytes: [ 0x02, 0x00, 0xe7, 0x34 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "ori $a3, $a3, 2"
  -
    input:
      bytes: [ 0x14, 0x00, 0xa4, 0x24 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addiu $a0, $a1, 20"
  -
    input:
      bytes: [ 0x01, 0x00, 0x07, 0x3c ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "lui $a3, 1"
  -
    input:
      bytes: [ 0x02, 0x00, 0xe7, 0x34 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "ori $a3, $a3, 2"
  -
    input:
      bytes: [ 0x21, 0x38, 0xe8, 0x00 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addu $a3, $a3, $t0"
  -
    input:
      bytes: [ 0x21, 0x50, 0x44, 0x01 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addu $t2, $t2, $a0"
  -
    input:
      bytes: [ 0x21, 0x08, 0x29, 0x00 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addu $at, $at, $t1"
  -
    input:
      bytes: [ 0x0a, 0x00, 0x0a, 0x3c ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "lui $t2, 10"
  -
    input:
      bytes: [ 0x7b, 0x00, 0x4a, 0x8d ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "lw $t2, 123($t2)"
  -
    input:
      bytes: [ 0x02, 0x00, 0x01, 0x3c ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "lui $at, 2"
  -
    input:
      bytes: [ 0x21, 0x08, 0x29, 0x00 ]
      arch: "CS_ARCH_MIPS"
      options: [ "CS_MODE_MIPS32" ]
    expected:
      insns:
        -
          asm_text: "addu $at, $at, $t1"
