test_cases:
  -
    input:
      bytes: [ 0x0c, 0x20, 0x40, 0x02 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x60, 0x02 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx,s flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x40, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx,m flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x60, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx,sm flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x68, 0x02 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx,s,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x48, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx,m,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x68, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbx,sm,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x40, 0x42 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x60, 0x42 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx,s flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x40, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx,m flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x60, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx,sm flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x68, 0x42 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx,s,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x48, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx,m,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x68, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhx,sm,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x40, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x60, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx,s flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x40, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx,m flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x60, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx,sm flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x68, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx,s,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x48, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx,m,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x68, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwx,sm,sl flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x01, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x21, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax,s flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x01, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax,m flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x21, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax,sm flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x29, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax,s,sl flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x09, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax,m,sl flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x29, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwax,sm,sl flags(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x41, 0xc2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x61, 0xc2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx,s flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x41, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx,m flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x61, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx,sm flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x65, 0xc2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx,s,co flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x45, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx,m,co flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x20, 0x65, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcwx,sm,co flags(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x50, 0x02 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbs 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x50, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbs,ma 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x70, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbs,mb 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x58, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbs,ma,sl 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x78, 0x22 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldbs,mb,sl 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x50, 0x42 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhs 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x50, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhs,ma 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x70, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhs,mb 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x58, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhs,ma,sl 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x78, 0x62 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldhs,mb,sl 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x50, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldws 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x50, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldws,ma 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x70, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldws,mb 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x58, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldws,ma,sl 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x78, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldws,mb,sl 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x11, 0x82 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwas 0xf(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x11, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwas,ma 0xf(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x31, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwas,mb 0xf(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x19, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwas,ma,sl 0xf(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x39, 0xa2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldwas,mb,sl 0xf(r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x51, 0xc2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcws 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x51, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcws,ma 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x71, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcws,mb 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x55, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcws,ma,co 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x3e, 0x75, 0xe2 ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "ldcws,mb,co 0xf(sr1,r1),rp"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x52, 0x1e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbs r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x52, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbs,ma r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x72, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbs,mb r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x56, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbs,ma,bc r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x7a, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbs,mb,sl r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x52, 0x5e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "sths r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x52, 0x7e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "sths,ma r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x72, 0x7e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "sths,mb r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x56, 0x7e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "sths,ma,bc r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x7a, 0x7e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "sths,mb,sl r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x52, 0x9e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stws r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x52, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stws,ma r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x72, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stws,mb r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x56, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stws,ma,bc r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x7a, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stws,mb,sl r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x53, 0x1e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x53, 0x1e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x73, 0x1e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys,e r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x53, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys,b,m r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x73, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys,e,m r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x57, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys,b,m,bc r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x7b, 0x3e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stbys,e,m,sl r1,0xf(sr1,rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x13, 0x9e ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stwas r1,0xf(rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x33, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stwas,mb r1,0xf(rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x13, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stwas,ma r1,0xf(rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x37, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stwas,mb,bc r1,0xf(rp)"
  -
    input:
      bytes: [ 0x0c, 0x41, 0x1b, 0xbe ]
      arch: "CS_ARCH_HPPA"
      options: [ "CS_MODE_BIG_ENDIAN", "CS_MODE_HPPA_11" ]
    expected:
      insns:
        -
          asm_text: "stwas,ma,sl r1,0xf(rp)"
