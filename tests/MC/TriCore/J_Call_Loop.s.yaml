test_cases:
  -
    input:
      bytes: [ 0x6d, 0xff, 0x9d, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xc6"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x02, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x3fc"
  -
    input:
      bytes: [ 0x7f, 0xf8, 0x0b, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d8, d15, #0x16"
  -
    input:
      bytes: [ 0x3c, 0x0b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x16"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xb3, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x9a"
  -
    input:
      bytes: [ 0xff, 0x88, 0x1f, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d8, #0x8, #0x3e"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x1b, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x36"
  -
    input:
      bytes: [ 0x5e, 0x17 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0xe"
  -
    input:
      bytes: [ 0x3c, 0x08 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x10"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xbe, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x84"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x58, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x150"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xbd, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x486"
  -
    input:
      bytes: [ 0x7f, 0xf8, 0x0d, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d8, d15, #0x1a"
  -
    input:
      bytes: [ 0x3c, 0x0d ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x1a"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x6a, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x12c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x94, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xad8"
  -
    input:
      bytes: [ 0x3c, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x2"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x87, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xaf2"
  -
    input:
      bytes: [ 0xbf, 0x45, 0x0b, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d5, #0x4, #0x16"
  -
    input:
      bytes: [ 0x6f, 0x04, 0x05, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d4, #0, #0xa"
  -
    input:
      bytes: [ 0x3c, 0x03 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x6"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x9a, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xcc"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x4e, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x164"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x83, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xfa"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x37, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x192"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x32, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xb9c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xc3, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x7a"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x1e, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xbc4"
  -
    input:
      bytes: [ 0x7f, 0x81, 0x0a, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d1, d8, #0x14"
  -
    input:
      bytes: [ 0x3f, 0x08, 0x08, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d8, d0, #0x10"
  -
    input:
      bytes: [ 0x7f, 0x80, 0x04, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d0, d8, #0x8"
  -
    input:
      bytes: [ 0x3c, 0x05 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0xa"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xa6, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xb4"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x26, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x1b4"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xda, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x24c"
  -
    input:
      bytes: [ 0xdf, 0x04, 0x31, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d4, #0, #0x62"
  -
    input:
      bytes: [ 0x76, 0x6b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d6, #0x16"
  -
    input:
      bytes: [ 0x3c, 0x0c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x18"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xdc, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x248"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x8d, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x2e6"
  -
    input:
      bytes: [ 0x3c, 0x0e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x1c"
  -
    input:
      bytes: [ 0x6e, 0x03 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0x6"
  -
    input:
      bytes: [ 0xbf, 0x81, 0xf3, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d1, #0x8, #-0x1a"
  -
    input:
      bytes: [ 0xdf, 0x10, 0xee, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d0, #0x1, #-0x24"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xa6, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x2b4"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x19, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x3ce"
  -
    input:
      bytes: [ 0xee, 0x08 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d15, #0x10"
  -
    input:
      bytes: [ 0x3c, 0x09 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x12"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xbc, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x488"
  -
    input:
      bytes: [ 0x6e, 0x20 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0x40"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x22, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x3bc"
  -
    input:
      bytes: [ 0xff, 0x8f, 0x1a, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d15, #0x8, #0x34"
  -
    input:
      bytes: [ 0x3c, 0x1b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x36"
  -
    input:
      bytes: [ 0x6e, 0x29 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0x52"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xcb, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x46a"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x1e, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x5c4"
  -
    input:
      bytes: [ 0xfc, 0x6e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a6, #-0x4"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x5c, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x548"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x2e, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x5a4"
  -
    input:
      bytes: [ 0x5e, 0x1b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x16"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x06, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x3f4"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xfe, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x404"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xf2, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x41c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xea, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x42c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xde, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x444"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xd6, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x454"
  -
    input:
      bytes: [ 0x5f, 0x9f, 0x23, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d9, #0x46"
  -
    input:
      bytes: [ 0xdf, 0x1f, 0x5d, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0xba"
  -
    input:
      bytes: [ 0x6e, 0x2d ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0x5a"
  -
    input:
      bytes: [ 0xfe, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, d0, #0x28"
  -
    input:
      bytes: [ 0x3c, 0x07 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0xe"
  -
    input:
      bytes: [ 0xbe, 0x05 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x2a"
  -
    input:
      bytes: [ 0x3c, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x4"
  -
    input:
      bytes: [ 0xdf, 0x1f, 0x57, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0xae"
  -
    input:
      bytes: [ 0x7e, 0x93 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, d9, #0x6"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x7a, 0xfb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x90c"
  -
    input:
      bytes: [ 0x3c, 0x36 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x6c"
  -
    input:
      bytes: [ 0x7f, 0x0f, 0x07, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d15, d0, #0xe"
  -
    input:
      bytes: [ 0xbf, 0x21, 0xcb, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d1, #0x2, #-0x6a"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x18, 0xfb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x9d0"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x85, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xaf6"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xd6, 0xf8 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xe54"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x9c, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xac8"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x00, 0xfc ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x800"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xc6, 0xfb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x874"
  -
    input:
      bytes: [ 0xf6, 0x23 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d2, #0x6"
  -
    input:
      bytes: [ 0x3c, 0x63 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0xc6"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xa9, 0xfb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x8ae"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x45, 0xfb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x976"
  -
    input:
      bytes: [ 0x3c, 0x34 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x68"
  -
    input:
      bytes: [ 0xbf, 0x21, 0xcd, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d1, #0x2, #-0x66"
  -
    input:
      bytes: [ 0xde, 0x1e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x3c"
  -
    input:
      bytes: [ 0x3c, 0x17 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x2e"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xde, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xa44"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x89, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xaee"
  -
    input:
      bytes: [ 0xbf, 0x89, 0xea, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d9, #0x8, #-0x2c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xe8, 0xfb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x830"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xee, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xa24"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x73, 0xf5 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x151a"
  -
    input:
      bytes: [ 0xee, 0x06 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d15, #0xc"
  -
    input:
      bytes: [ 0x3c, 0x11 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x22"
  -
    input:
      bytes: [ 0x5e, 0x19 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x12"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xde, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x44"
  -
    input:
      bytes: [ 0x5e, 0x1a ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x14"
  -
    input:
      bytes: [ 0x3c, 0x29 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x52"
  -
    input:
      bytes: [ 0x5e, 0x1e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x1c"
  -
    input:
      bytes: [ 0x3e, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x8"
  -
    input:
      bytes: [ 0x3e, 0x08 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x10"
  -
    input:
      bytes: [ 0x3c, 0x0a ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x14"
  -
    input:
      bytes: [ 0x3c, 0x06 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0xc"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xb2, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x9c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xe8, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x30"
  -
    input:
      bytes: [ 0x3e, 0x0c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x18"
  -
    input:
      bytes: [ 0xbe, 0x0c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x38"
  -
    input:
      bytes: [ 0xbe, 0x0f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x3e"
  -
    input:
      bytes: [ 0x5f, 0x0f, 0x22, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x44"
  -
    input:
      bytes: [ 0x5f, 0x0f, 0x24, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d0, #0x48"
  -
    input:
      bytes: [ 0x3c, 0x27 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x4e"
  -
    input:
      bytes: [ 0xee, 0x03 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d15, #0x6"
  -
    input:
      bytes: [ 0x3c, 0x12 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x24"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x43, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x886"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x54, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x8a8"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x91, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x522"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x4a, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x894"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xa4, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x548"
  -
    input:
      bytes: [ 0xee, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d15, #-0xc"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xc4, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x388"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x29, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x852"
  -
    input:
      bytes: [ 0xdf, 0x08, 0x92, 0x81 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d8, #0, #0x324"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x5a, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x4b4"
  -
    input:
      bytes: [ 0x6e, 0xfa ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #-0xc"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xbb, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x376"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x8c, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x318"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xf1, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x5e2"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xe8, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1d0"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xab, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x556"
  -
    input:
      bytes: [ 0x3c, 0x37 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x6e"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x03, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x206"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xb3, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x566"
  -
    input:
      bytes: [ 0x6e, 0x09 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0x12"
  -
    input:
      bytes: [ 0x2d, 0x02, 0x00, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "calli a2"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x91, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x122"
  -
    input:
      bytes: [ 0x3f, 0xfc, 0xc9, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d12, d15, #-0x6e"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xca, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x194"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x87, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x50e"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x92, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x124"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x47, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x48e"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x1f, 0x02 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x43e"
  -
    input:
      bytes: [ 0xf6, 0x83 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d8, #0x6"
  -
    input:
      bytes: [ 0x6f, 0x1f, 0xf8, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0x1, #-0x10"
  -
    input:
      bytes: [ 0x6f, 0x0f, 0xf2, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0, #-0x1c"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x34, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x68"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xea, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x3d4"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x21, 0xfd ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x5be"
  -
    input:
      bytes: [ 0x3f, 0xf0, 0xfd, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d0, d15, #-0x6"
  -
    input:
      bytes: [ 0x2e, 0x1b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0x1, #0x16"
  -
    input:
      bytes: [ 0xdf, 0x1f, 0xfe, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, #0x1, #-0x4"
  -
    input:
      bytes: [ 0x6f, 0x1f, 0x12, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0x1, #0x24"
  -
    input:
      bytes: [ 0xdf, 0x1f, 0xfb, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, #0x1, #-0xa"
  -
    input:
      bytes: [ 0x6f, 0x0f, 0xff, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0, #-0x2"
  -
    input:
      bytes: [ 0x6f, 0x0f, 0xfc, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0, #-0x8"
  -
    input:
      bytes: [ 0xdc, 0x0f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "ji a15"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x2f, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x5e"
  -
    input:
      bytes: [ 0x3e, 0x28 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d2, #0x10"
  -
    input:
      bytes: [ 0x5e, 0x13 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x6"
  -
    input:
      bytes: [ 0xee, 0x13 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d15, #0x26"
  -
    input:
      bytes: [ 0x5e, 0x32 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x3, #0x4"
  -
    input:
      bytes: [ 0x7d, 0x4f, 0x0d, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne.a a15, a4, #0x1a"
  -
    input:
      bytes: [ 0x3c, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x8"
  -
    input:
      bytes: [ 0xbf, 0x30, 0xea, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d0, #0x3, #-0x2c"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xe0, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x40"
  -
    input:
      bytes: [ 0x1e, 0x32 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, #0x3, #0x4"
  -
    input:
      bytes: [ 0x5e, 0x43 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x4, #0x6"
  -
    input:
      bytes: [ 0x5e, 0x23 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x2, #0x6"
  -
    input:
      bytes: [ 0xdf, 0x19, 0x49, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d9, #0x1, #0x92"
  -
    input:
      bytes: [ 0x5f, 0x8f, 0x28, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d15, d8, #0x50"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xa5, 0x0b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x174a"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x0a, 0x0a ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1414"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xc0, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x80"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xc3, 0x0b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1786"
  -
    input:
      bytes: [ 0x3c, 0x1c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x38"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x6b, 0x0b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x16d6"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xbc, 0x09 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1378"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x72, 0x0b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x16e4"
  -
    input:
      bytes: [ 0xff, 0x3f, 0x0b, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jge.u d15, #0x3, #0x16"
  -
    input:
      bytes: [ 0x7d, 0xf4, 0x04, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne.a a4, a15, #0x8"
  -
    input:
      bytes: [ 0x3c, 0x10 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x20"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xd6, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x54"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x28, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x1b0"
  -
    input:
      bytes: [ 0xf6, 0x26 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d2, #0xc"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x71, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x11e"
  -
    input:
      bytes: [ 0x7e, 0x0d ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, d0, #0x1a"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x5b, 0x06 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0xcb6"
  -
    input:
      bytes: [ 0x3f, 0x0f, 0x04, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d15, d0, #0x8"
  -
    input:
      bytes: [ 0xdf, 0x7f, 0xf6, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x7, #-0x14"
  -
    input:
      bytes: [ 0x76, 0x17 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d1, #0xe"
  -
    input:
      bytes: [ 0x76, 0x13 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d1, #0x6"
  -
    input:
      bytes: [ 0x3c, 0x1e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x3c"
  -
    input:
      bytes: [ 0xf6, 0x06 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz d0, #0xc"
  -
    input:
      bytes: [ 0x7e, 0x05 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, d0, #0xa"
  -
    input:
      bytes: [ 0x3f, 0x40, 0xe3, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d0, d4, #-0x3a"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x65, 0x09 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x12ca"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xf9, 0x07 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0xff2"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x3a, 0x08 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1074"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xf2, 0xfc ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x61c"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x9a, 0x08 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1134"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xdc, 0x08 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x11b8"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xf0, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x9e0"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x0d, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x3e6"
  -
    input:
      bytes: [ 0x6d, 0xff, 0x04, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x3f8"
  -
    input:
      bytes: [ 0x76, 0x27 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d2, #0xe"
  -
    input:
      bytes: [ 0x76, 0x23 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d2, #0x6"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x71, 0x12 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x24e2"
  -
    input:
      bytes: [ 0xfc, 0x5e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a5, #-0x4"
  -
    input:
      bytes: [ 0xfc, 0x29 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a2, #-0xe"
  -
    input:
      bytes: [ 0x6f, 0x0f, 0xfe, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz.t d15, #0, #-0x4"
  -
    input:
      bytes: [ 0x6f, 0x1f, 0xfa, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jnz.t d15, #0x1, #-0xc"
  -
    input:
      bytes: [ 0x1d, 0x00, 0x03, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x6"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x02, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x204"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xe1, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1c2"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x0d, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1a"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x72, 0x12 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x24e4"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xea, 0x11 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x23d4"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xfa, 0x11 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x23f4"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xf3, 0x0f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1fe6"
  -
    input:
      bytes: [ 0x3c, 0x50 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0xa0"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xc6, 0x10 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x218c"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x41, 0x0f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1e82"
  -
    input:
      bytes: [ 0xbf, 0x48, 0xb1, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jlt.u d8, #0x4, #-0x9e"
  -
    input:
      bytes: [ 0x6f, 0x70, 0xec, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d0, #0x7, #-0x28"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x50, 0x0c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x18a0"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xf9, 0x0a ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x15f2"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x5f, 0x0c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x18be"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x38, 0x0b ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1670"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x44, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x88"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x27, 0x01 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x24e"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xb7, 0xfe ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x292"
  -
    input:
      bytes: [ 0x3c, 0x14 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x28"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xbd, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x86"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xb9, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x8e"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xb4, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0x98"
  -
    input:
      bytes: [ 0x6d, 0xff, 0xaf, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #-0xa2"
  -
    input:
      bytes: [ 0x3c, 0xed ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #-0x26"
  -
    input:
      bytes: [ 0xfc, 0xf6 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a15, #-0x14"
  -
    input:
      bytes: [ 0xfd, 0xf0, 0xed, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a15, #-0x26"
  -
    input:
      bytes: [ 0xdf, 0x1f, 0x23, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x1, #0x46"
  -
    input:
      bytes: [ 0x6e, 0x04 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0x8"
  -
    input:
      bytes: [ 0x76, 0xcf ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d12, #0x1e"
  -
    input:
      bytes: [ 0xfc, 0x4e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a4, #-0x4"
  -
    input:
      bytes: [ 0xdf, 0x0c, 0xe0, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d12, #0, #-0x40"
  -
    input:
      bytes: [ 0xfc, 0x2e ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a2, #-0x4"
  -
    input:
      bytes: [ 0x3c, 0xd9 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #-0x4e"
  -
    input:
      bytes: [ 0xde, 0x25 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x2, #0x2a"
  -
    input:
      bytes: [ 0x2e, 0x03 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz.t d15, #0, #0x6"
  -
    input:
      bytes: [ 0xdf, 0x0c, 0xd3, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d12, #0, #-0x5a"
  -
    input:
      bytes: [ 0x76, 0xc5 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d12, #0xa"
  -
    input:
      bytes: [ 0xfc, 0x2f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "loop a2, #-0x2"
  -
    input:
      bytes: [ 0x6e, 0xc9 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #-0x6e"
  -
    input:
      bytes: [ 0x3c, 0xc4 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #-0x78"
  -
    input:
      bytes: [ 0xdf, 0x00, 0x2e, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d0, #0, #0x5c"
  -
    input:
      bytes: [ 0xdf, 0x10, 0x2b, 0x80 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d0, #0x1, #0x56"
  -
    input:
      bytes: [ 0xfe, 0xdb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, d13, #0x36"
  -
    input:
      bytes: [ 0x76, 0xdb ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d13, #0x16"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x53, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0xa6"
  -
    input:
      bytes: [ 0xdf, 0x0c, 0x9b, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d12, #0, #-0xca"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x38, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x70"
  -
    input:
      bytes: [ 0x3c, 0x94 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #-0xd8"
  -
    input:
      bytes: [ 0xdf, 0x2f, 0x91, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jne d15, #0x2, #-0xde"
  -
    input:
      bytes: [ 0x6e, 0x07 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jz d15, #0xe"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x15, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x2a"
  -
    input:
      bytes: [ 0xdf, 0x0c, 0x86, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d12, #0, #-0xf4"
  -
    input:
      bytes: [ 0xdf, 0x04, 0x7c, 0x7f ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "jeq d4, #0, #-0x108"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x04, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x8"
  -
    input:
      bytes: [ 0x1d, 0xff, 0x77, 0xff ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #-0x112"
  -
    input:
      bytes: [ 0x1d, 0x00, 0x02, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x4"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x15, 0x0c ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x182a"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xbe, 0x0a ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x157c"
  -
    input:
      bytes: [ 0x6d, 0x00, 0x0e, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1c"
  -
    input:
      bytes: [ 0x6d, 0x00, 0xf1, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "call #0x1e2"
  -
    input:
      bytes: [ 0x3c, 0x00 ]
      arch: "CS_ARCH_TRICORE"
      options: [ "CS_MODE_TRICORE_162" ]
    expected:
      insns:
        -
          asm_text: "j #0x0"
