test_cases:
  -
    input:
      bytes: [ 0x82,0x00,0x25,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x2, x4, w5, uxtb"

  -
    input:
      bytes: [ 0xf4,0x23,0x33,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x20, sp, w19, uxth"

  -
    input:
      bytes: [ 0x2c,0x40,0x34,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x12, x1, w20, uxtw"

  -
    input:
      bytes: [ 0x74,0x60,0x2d,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x20, x3, x13, uxtx"

  -
    input:
      bytes: [ 0x31,0x83,0x34,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x17, x25, w20, sxtb"

  -
    input:
      bytes: [ 0xb2,0xa1,0x33,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x18, x13, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add sp, x2, w3, sxtw"

  -
    input:
      bytes: [ 0xa3,0xe0,0x29,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x3, x5, x9, sxtx"

  -
    input:
      bytes: [ 0xa2,0x00,0x27,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w2, w5, w7, uxtb"

  -
    input:
      bytes: [ 0xf5,0x21,0x31,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w21, w15, w17, uxth"

  -
    input:
      bytes: [ 0xbe,0x43,0x3f,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w30, w29, wzr, uxtw"

  -
    input:
      bytes: [ 0x33,0x62,0x21,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w19, w17, w1, uxtx"

  -
    input:
      bytes: [ 0xa2,0x80,0x21,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w2, w5, w1, sxtb"

  -
    input:
      bytes: [ 0x3a,0xa2,0x33,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w26, w17, w19, sxth"

  -
    input:
      bytes: [ 0x40,0xc0,0x23,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w0, w2, w3, sxtw"

  -
    input:
      bytes: [ 0x62,0xe0,0x25,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w2, w3, w5, sxtx"

  -
    input:
      bytes: [ 0x62,0x80,0x25,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x2, x3, w5, sxtb"

  -
    input:
      bytes: [ 0x67,0x31,0x2d,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x7, x11, w13, uxth #4"

  -
    input:
      bytes: [ 0x71,0x4a,0x37,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w17, w19, w23, uxtw #2"

  -
    input:
      bytes: [ 0xfd,0x66,0x31,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w29, w23, w17, uxtx #1"

  -
    input:
      bytes: [ 0x82,0x08,0x25,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x2, x4, w5, uxtb #2"

  -
    input:
      bytes: [ 0xf4,0x33,0x33,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x20, sp, w19, uxth #4"

  -
    input:
      bytes: [ 0x2c,0x40,0x34,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x12, x1, w20, uxtw"

  -
    input:
      bytes: [ 0x74,0x60,0x2d,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x20, x3, x13, uxtx"

  -
    input:
      bytes: [ 0x31,0x83,0x34,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x17, x25, w20, sxtb"

  -
    input:
      bytes: [ 0xb2,0xa1,0x33,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x18, x13, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub sp, x2, w3, sxtw"

  -
    input:
      bytes: [ 0xa3,0xe0,0x29,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x3, x5, x9, sxtx"

  -
    input:
      bytes: [ 0xa2,0x00,0x27,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w2, w5, w7, uxtb"

  -
    input:
      bytes: [ 0xf5,0x21,0x31,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w21, w15, w17, uxth"

  -
    input:
      bytes: [ 0xbe,0x43,0x3f,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w30, w29, wzr, uxtw"

  -
    input:
      bytes: [ 0x33,0x62,0x21,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w19, w17, w1, uxtx"

  -
    input:
      bytes: [ 0xa2,0x80,0x21,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w2, w5, w1, sxtb"

  -
    input:
      bytes: [ 0xfa,0xa3,0x33,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w26, wsp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub wsp, w2, w3, sxtw"

  -
    input:
      bytes: [ 0x62,0xe0,0x25,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w2, w3, w5, sxtx"

  -
    input:
      bytes: [ 0x82,0x08,0x25,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x2, x4, w5, uxtb #2"

  -
    input:
      bytes: [ 0xf4,0x33,0x33,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x20, sp, w19, uxth #4"

  -
    input:
      bytes: [ 0x2c,0x40,0x34,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x12, x1, w20, uxtw"

  -
    input:
      bytes: [ 0x74,0x60,0x2d,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x20, x3, x13, uxtx"

  -
    input:
      bytes: [ 0x3f,0x8f,0x34,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x25, w20, sxtb #3"

  -
    input:
      bytes: [ 0xf2,0xa3,0x33,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x18, sp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x2, w3, sxtw"

  -
    input:
      bytes: [ 0xa3,0xe8,0x29,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x3, x5, x9, sxtx #2"

  -
    input:
      bytes: [ 0xa2,0x00,0x27,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w2, w5, w7, uxtb"

  -
    input:
      bytes: [ 0xf5,0x21,0x31,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w21, w15, w17, uxth"

  -
    input:
      bytes: [ 0xbe,0x43,0x3f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w30, w29, wzr, uxtw"

  -
    input:
      bytes: [ 0x33,0x62,0x21,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w19, w17, w1, uxtx"

  -
    input:
      bytes: [ 0xa2,0x84,0x21,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w2, w5, w1, sxtb #1"

  -
    input:
      bytes: [ 0xfa,0xa3,0x33,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w26, wsp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w2, w3, sxtw"

  -
    input:
      bytes: [ 0x62,0xe0,0x25,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w2, w3, w5, sxtx"

  -
    input:
      bytes: [ 0x82,0x08,0x25,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x2, x4, w5, uxtb #2"

  -
    input:
      bytes: [ 0xf4,0x33,0x33,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x20, sp, w19, uxth #4"

  -
    input:
      bytes: [ 0x2c,0x40,0x34,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x12, x1, w20, uxtw"

  -
    input:
      bytes: [ 0x74,0x60,0x2d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x20, x3, x13, uxtx"

  -
    input:
      bytes: [ 0x3f,0x8f,0x34,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x25, w20, sxtb #3"

  -
    input:
      bytes: [ 0xf2,0xa3,0x33,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x18, sp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x2, w3, sxtw"

  -
    input:
      bytes: [ 0xa3,0xe8,0x29,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x3, x5, x9, sxtx #2"

  -
    input:
      bytes: [ 0xa2,0x00,0x27,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w2, w5, w7, uxtb"

  -
    input:
      bytes: [ 0xf5,0x21,0x31,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w21, w15, w17, uxth"

  -
    input:
      bytes: [ 0xbe,0x43,0x3f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w30, w29, wzr, uxtw"

  -
    input:
      bytes: [ 0x33,0x62,0x21,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w19, w17, w1, uxtx"

  -
    input:
      bytes: [ 0xa2,0x84,0x21,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w2, w5, w1, sxtb #1"

  -
    input:
      bytes: [ 0xfa,0xa3,0x33,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w26, wsp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w2, w3, sxtw"

  -
    input:
      bytes: [ 0x62,0xe0,0x25,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w2, w3, w5, sxtx"

  -
    input:
      bytes: [ 0x9f,0x08,0x25,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x4, w5, uxtb #2"

  -
    input:
      bytes: [ 0xff,0x33,0x33,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp sp, w19, uxth #4"

  -
    input:
      bytes: [ 0x3f,0x40,0x34,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x1, w20, uxtw"

  -
    input:
      bytes: [ 0x7f,0x60,0x2d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x3, x13, uxtx"

  -
    input:
      bytes: [ 0x3f,0x8f,0x34,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x25, w20, sxtb #3"

  -
    input:
      bytes: [ 0xff,0xa3,0x33,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp sp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x2, w3, sxtw"

  -
    input:
      bytes: [ 0xbf,0xe8,0x29,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x5, x9, sxtx #2"

  -
    input:
      bytes: [ 0xbf,0x00,0x27,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w5, w7, uxtb"

  -
    input:
      bytes: [ 0xff,0x21,0x31,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w15, w17, uxth"

  -
    input:
      bytes: [ 0xbf,0x43,0x3f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w29, wzr, uxtw"

  -
    input:
      bytes: [ 0x3f,0x62,0x21,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w17, w1, uxtx"

  -
    input:
      bytes: [ 0xbf,0x84,0x21,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w5, w1, sxtb #1"

  -
    input:
      bytes: [ 0xff,0xa3,0x33,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wsp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w2, w3, sxtw"

  -
    input:
      bytes: [ 0x7f,0xe0,0x25,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w3, w5, sxtx"

  -
    input:
      bytes: [ 0x9f,0x08,0x25,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x4, w5, uxtb #2"

  -
    input:
      bytes: [ 0xff,0x33,0x33,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn sp, w19, uxth #4"

  -
    input:
      bytes: [ 0x3f,0x40,0x34,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x1, w20, uxtw"

  -
    input:
      bytes: [ 0x7f,0x60,0x2d,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x3, x13, uxtx"

  -
    input:
      bytes: [ 0x3f,0x8f,0x34,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x25, w20, sxtb #3"

  -
    input:
      bytes: [ 0xff,0xa3,0x33,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn sp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x2, w3, sxtw"

  -
    input:
      bytes: [ 0xbf,0xe8,0x29,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x5, x9, sxtx #2"

  -
    input:
      bytes: [ 0xbf,0x00,0x27,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w5, w7, uxtb"

  -
    input:
      bytes: [ 0xff,0x21,0x31,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w15, w17, uxth"

  -
    input:
      bytes: [ 0xbf,0x43,0x3f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w29, wzr, uxtw"

  -
    input:
      bytes: [ 0x3f,0x62,0x21,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w17, w1, uxtx"

  -
    input:
      bytes: [ 0xbf,0x84,0x21,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w5, w1, sxtb #1"

  -
    input:
      bytes: [ 0xff,0xa3,0x33,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn wsp, w19, sxth"

  -
    input:
      bytes: [ 0x5f,0xc0,0x23,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w2, w3, sxtw"

  -
    input:
      bytes: [ 0x7f,0xe0,0x25,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w3, w5, sxtx"

  -
    input:
      bytes: [ 0x9f,0x0e,0x3d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x20, w29, uxtb #3"

  -
    input:
      bytes: [ 0x9f,0x71,0x2d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x12, x13, uxtx #4"

  -
    input:
      bytes: [ 0xff,0x03,0x21,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wsp, w1, uxtb"

  -
    input:
      bytes: [ 0xff,0xc3,0x3f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn wsp, wzr, sxtw"

  -
    input:
      bytes: [ 0x7f,0x70,0x27,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub sp, x3, x7, lsl #4"

  -
    input:
      bytes: [ 0xe2,0x47,0x23,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w2, wsp, w3, lsl #1"

  -
    input:
      bytes: [ 0xff,0x43,0x29,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wsp, w9"

  -
    input:
      bytes: [ 0xff,0x53,0x23,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn wsp, w3, lsl #4"

  -
    input:
      bytes: [ 0xe3,0x6b,0x29,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x3, sp, x9, lsl #2"

  -
    input:
      bytes: [ 0xa4,0x00,0x00,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w4, w5, #0"

  -
    input:
      bytes: [ 0x62,0xfc,0x3f,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w2, w3, #4095"

  -
    input:
      bytes: [ 0xbe,0x07,0x40,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w30, w29, #1, lsl #12"

  -
    input:
      bytes: [ 0xad,0xfc,0x7f,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w13, w5, #4095, lsl #12"

  -
    input:
      bytes: [ 0xe5,0x98,0x19,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x5, x7, #1638"

  -
    input:
      bytes: [ 0xf4,0x87,0x0c,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w20, wsp, #801"

  -
    input:
      bytes: [ 0xff,0x43,0x11,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add wsp, wsp, #1104"

  -
    input:
      bytes: [ 0xdf,0xd3,0x3f,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add wsp, w30, #4084"

  -
    input:
      bytes: [ 0x00,0x8f,0x04,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x0, x24, #291"

  -
    input:
      bytes: [ 0x03,0xff,0x7f,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x3, x24, #4095, lsl #12"

  -
    input:
      bytes: [ 0xe8,0xcb,0x10,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x8, sp, #1074"

  -
    input:
      bytes: [ 0xbf,0xa3,0x3b,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add sp, x29, #3816"

  -
    input:
      bytes: [ 0xe0,0xb7,0x3f,0x51 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w0, wsp, #4077"

  -
    input:
      bytes: [ 0x84,0x8a,0x48,0x51 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w4, w20, #546, lsl #12"

  -
    input:
      bytes: [ 0xff,0x83,0x04,0xd1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub sp, sp, #288"

  -
    input:
      bytes: [ 0x7f,0x42,0x00,0x51 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub wsp, w19, #16"

  -
    input:
      bytes: [ 0xed,0x8e,0x44,0x31 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w13, w23, #291, lsl #12"

  -
    input:
      bytes: [ 0x5f,0xfc,0x3f,0x31 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w2, #4095"

  -
    input:
      bytes: [ 0xf4,0x03,0x00,0x31 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w20, wsp, #0"

  -
    input:
      bytes: [ 0x7f,0x04,0x40,0xb1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x3, #1, lsl #12"

  -
    input:
      bytes: [ 0xff,0x53,0x40,0xf1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp sp, #20, lsl #12"

  -
    input:
      bytes: [ 0xdf,0xff,0x3f,0xf1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x30, #4095"

  -
    input:
      bytes: [ 0xe4,0xbb,0x3b,0xf1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x4, sp, #3822"

  -
    input:
      bytes: [ 0x7f,0x8c,0x44,0x31 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w3, #291, lsl #12"

  -
    input:
      bytes: [ 0xff,0x57,0x15,0x31 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn wsp, #1365"

  -
    input:
      bytes: [ 0xff,0x13,0x51,0xb1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn sp, #1092, lsl #12"

  -
    input:
      bytes: [ 0x9f,0xb0,0x44,0xf1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x4, #300, lsl #12"

  -
    input:
      bytes: [ 0xff,0xd3,0x07,0x71 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wsp, #500"

  -
    input:
      bytes: [ 0xff,0x23,0x03,0xf1 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp sp, #200"

  -
    input:
      bytes: [ 0xdf,0x03,0x00,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov sp, x30"

  -
    input:
      bytes: [ 0x9f,0x02,0x00,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov wsp, w20"

  -
    input:
      bytes: [ 0xeb,0x03,0x00,0x91 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov x11, sp"

  -
    input:
      bytes: [ 0xf8,0x03,0x00,0x11 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov w24, wsp"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w3, w5, w7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add wzr, w3, w5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w20, wzr, w4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w4, w6, wzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w11, w13, w15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w9, w3, wzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0x7f,0x14,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w17, w29, w20, lsl #31"

  -
    input:
      bytes: [ 0xb1,0x77,0x14,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w17, w29, w20, lsl #29"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w21, w22, w23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w24, w25, w26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0x7f,0x5d,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w27, w28, w29, lsr #31"

  -
    input:
      bytes: [ 0x9b,0x77,0x5d,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w27, w28, w29, lsr #29"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w2, w3, w4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w5, w6, w7, asr #21"

  -
    input:
      bytes: [ 0x28,0x7d,0x8a,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w8, w9, w10, asr #31"

  -
    input:
      bytes: [ 0x28,0x75,0x8a,0x0b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add w8, w9, w10, asr #29"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x3, x5, x7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add xzr, x3, x5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x20, xzr, x4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x4, x6, xzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x11, x13, x15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x9, x3, xzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0xff,0x14,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x17, x29, x20, lsl #63"

  -
    input:
      bytes: [ 0xb1,0xeb,0x14,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x17, x29, x20, lsl #58"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x21, x22, x23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x24, x25, x26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0xff,0x5d,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x27, x28, x29, lsr #63"

  -
    input:
      bytes: [ 0xb1,0xeb,0x54,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x17, x29, x20, lsr #58"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x2, x3, x4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x5, x6, x7, asr #21"

  -
    input:
      bytes: [ 0x28,0xfd,0x8a,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x8, x9, x10, asr #63"

  -
    input:
      bytes: [ 0xb1,0xeb,0x94,0x8b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "add x17, x29, x20, asr #58"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w3, w5, w7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w3, w5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w20, wzr, w4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w4, w6, wzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w11, w13, w15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w9, w3, wzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0x7f,0x14,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w17, w29, w20, lsl #31"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w21, w22, w23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w24, w25, w26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0x7f,0x5d,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w27, w28, w29, lsr #31"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w2, w3, w4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w5, w6, w7, asr #21"

  -
    input:
      bytes: [ 0x28,0x7d,0x8a,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds w8, w9, w10, asr #31"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x3, x5, x7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x3, x5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x20, xzr, x4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x4, x6, xzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x11, x13, x15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x9, x3, xzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0xff,0x14,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x17, x29, x20, lsl #63"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x21, x22, x23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x24, x25, x26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0xff,0x5d,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x27, x28, x29, lsr #63"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x2, x3, x4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x5, x6, x7, asr #21"

  -
    input:
      bytes: [ 0x28,0xfd,0x8a,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adds x8, x9, x10, asr #63"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w3, w5, w7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub wzr, w3, w5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w20, w4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w4, w6, wzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w11, w13, w15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w9, w3, wzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0x7f,0x14,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w17, w29, w20, lsl #31"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w21, w22, w23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w24, w25, w26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0x7f,0x5d,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w27, w28, w29, lsr #31"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w2, w3, w4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w5, w6, w7, asr #21"

  -
    input:
      bytes: [ 0x28,0x7d,0x8a,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub w8, w9, w10, asr #31"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x3, x5, x7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub xzr, x3, x5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x20, x4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x4, x6, xzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x11, x13, x15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x9, x3, xzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0xff,0x14,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x17, x29, x20, lsl #63"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x21, x22, x23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x24, x25, x26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0xff,0x5d,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x27, x28, x29, lsr #63"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x2, x3, x4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x5, x6, x7, asr #21"

  -
    input:
      bytes: [ 0x28,0xfd,0x8a,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sub x8, x9, x10, asr #63"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w3, w5, w7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w3, w5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w20, w4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w4, w6, wzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w11, w13, w15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w9, w3, wzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0x7f,0x14,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w17, w29, w20, lsl #31"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w21, w22, w23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w24, w25, w26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0x7f,0x5d,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w27, w28, w29, lsr #31"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w2, w3, w4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w5, w6, w7, asr #21"

  -
    input:
      bytes: [ 0x28,0x7d,0x8a,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs w8, w9, w10, asr #31"

  -
    input:
      bytes: [ 0xa3,0x00,0x07,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x3, x5, x7"

  -
    input:
      bytes: [ 0x7f,0x00,0x05,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x3, x5"

  -
    input:
      bytes: [ 0xf4,0x03,0x04,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x20, x4"

  -
    input:
      bytes: [ 0xc4,0x00,0x1f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x4, x6, xzr"

  -
    input:
      bytes: [ 0xab,0x01,0x0f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x11, x13, x15"

  -
    input:
      bytes: [ 0x69,0x28,0x1f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x9, x3, xzr, lsl #10"

  -
    input:
      bytes: [ 0xb1,0xff,0x14,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x17, x29, x20, lsl #63"

  -
    input:
      bytes: [ 0xd5,0x02,0x57,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x21, x22, x23, lsr #0"

  -
    input:
      bytes: [ 0x38,0x4b,0x5a,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x24, x25, x26, lsr #18"

  -
    input:
      bytes: [ 0x9b,0xff,0x5d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x27, x28, x29, lsr #63"

  -
    input:
      bytes: [ 0x62,0x00,0x84,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x2, x3, x4, asr #0"

  -
    input:
      bytes: [ 0xc5,0x54,0x87,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x5, x6, x7, asr #21"

  -
    input:
      bytes: [ 0x28,0xfd,0x8a,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "subs x8, x9, x10, asr #63"

  -
    input:
      bytes: [ 0x1f,0x00,0x03,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w0, w3"

  -
    input:
      bytes: [ 0xff,0x03,0x04,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn wzr, w4"

  -
    input:
      bytes: [ 0xbf,0x00,0x1f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w5, wzr"

  -
    input:
      bytes: [ 0xff,0x43,0x26,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn wsp, w6"

  -
    input:
      bytes: [ 0xdf,0x00,0x07,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w6, w7"

  -
    input:
      bytes: [ 0x1f,0x3d,0x09,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w8, w9, lsl #15"

  -
    input:
      bytes: [ 0x5f,0x7d,0x0b,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w10, w11, lsl #31"

  -
    input:
      bytes: [ 0x9f,0x01,0x4d,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w12, w13, lsr #0"

  -
    input:
      bytes: [ 0xdf,0x55,0x4f,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w14, w15, lsr #21"

  -
    input:
      bytes: [ 0x1f,0x7e,0x51,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w16, w17, lsr #31"

  -
    input:
      bytes: [ 0x5f,0x02,0x93,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w18, w19, asr #0"

  -
    input:
      bytes: [ 0x9f,0x5a,0x95,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w20, w21, asr #22"

  -
    input:
      bytes: [ 0xdf,0x7e,0x97,0x2b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn w22, w23, asr #31"

  -
    input:
      bytes: [ 0x1f,0x00,0x03,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x0, x3"

  -
    input:
      bytes: [ 0xff,0x03,0x04,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn xzr, x4"

  -
    input:
      bytes: [ 0xbf,0x00,0x1f,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x5, xzr"

  -
    input:
      bytes: [ 0xff,0x63,0x26,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn sp, x6"

  -
    input:
      bytes: [ 0xdf,0x00,0x07,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x6, x7"

  -
    input:
      bytes: [ 0x1f,0x3d,0x09,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x8, x9, lsl #15"

  -
    input:
      bytes: [ 0x5f,0xfd,0x0b,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x10, x11, lsl #63"

  -
    input:
      bytes: [ 0x9f,0x01,0x4d,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x12, x13, lsr #0"

  -
    input:
      bytes: [ 0xdf,0xa5,0x4f,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x14, x15, lsr #41"

  -
    input:
      bytes: [ 0x1f,0xfe,0x51,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x16, x17, lsr #63"

  -
    input:
      bytes: [ 0x5f,0x02,0x93,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x18, x19, asr #0"

  -
    input:
      bytes: [ 0x9f,0xde,0x95,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x20, x21, asr #55"

  -
    input:
      bytes: [ 0xdf,0xfe,0x97,0xab ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmn x22, x23, asr #63"

  -
    input:
      bytes: [ 0x1f,0x00,0x03,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w0, w3"

  -
    input:
      bytes: [ 0xff,0x03,0x04,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wzr, w4"

  -
    input:
      bytes: [ 0xbf,0x00,0x1f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w5, wzr"

  -
    input:
      bytes: [ 0xff,0x43,0x26,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wsp, w6"

  -
    input:
      bytes: [ 0xdf,0x00,0x07,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w6, w7"

  -
    input:
      bytes: [ 0x1f,0x3d,0x09,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w8, w9, lsl #15"

  -
    input:
      bytes: [ 0x5f,0x7d,0x0b,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w10, w11, lsl #31"

  -
    input:
      bytes: [ 0x9f,0x01,0x4d,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w12, w13, lsr #0"

  -
    input:
      bytes: [ 0xdf,0x55,0x4f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w14, w15, lsr #21"

  -
    input:
      bytes: [ 0x1f,0x7e,0x51,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w16, w17, lsr #31"

  -
    input:
      bytes: [ 0x5f,0x02,0x93,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w18, w19, asr #0"

  -
    input:
      bytes: [ 0x9f,0x5a,0x95,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w20, w21, asr #22"

  -
    input:
      bytes: [ 0xdf,0x7e,0x97,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp w22, w23, asr #31"

  -
    input:
      bytes: [ 0x1f,0x00,0x03,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x0, x3"

  -
    input:
      bytes: [ 0xff,0x03,0x04,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp xzr, x4"

  -
    input:
      bytes: [ 0xbf,0x00,0x1f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x5, xzr"

  -
    input:
      bytes: [ 0xff,0x63,0x26,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp sp, x6"

  -
    input:
      bytes: [ 0xdf,0x00,0x07,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x6, x7"

  -
    input:
      bytes: [ 0x1f,0x3d,0x09,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x8, x9, lsl #15"

  -
    input:
      bytes: [ 0x5f,0xfd,0x0b,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x10, x11, lsl #63"

  -
    input:
      bytes: [ 0x9f,0x01,0x4d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x12, x13, lsr #0"

  -
    input:
      bytes: [ 0xdf,0xa5,0x4f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x14, x15, lsr #41"

  -
    input:
      bytes: [ 0x1f,0xfe,0x51,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x16, x17, lsr #63"

  -
    input:
      bytes: [ 0x5f,0x02,0x93,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x18, x19, asr #0"

  -
    input:
      bytes: [ 0x9f,0xde,0x95,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x20, x21, asr #55"

  -
    input:
      bytes: [ 0xdf,0xfe,0x97,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp x22, x23, asr #63"

  -
    input:
      bytes: [ 0xfd,0x03,0x1e,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w29, w30"

  -
    input:
      bytes: [ 0xfe,0x03,0x1f,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w30, wzr"

  -
    input:
      bytes: [ 0xff,0x03,0x00,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg wzr, w0"

  -
    input:
      bytes: [ 0xfc,0x03,0x1b,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w28, w27"

  -
    input:
      bytes: [ 0xfa,0x77,0x19,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w26, w25, lsl #29"

  -
    input:
      bytes: [ 0xf8,0x7f,0x17,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w24, w23, lsl #31"

  -
    input:
      bytes: [ 0xf6,0x03,0x55,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w22, w21, lsr #0"

  -
    input:
      bytes: [ 0xf4,0x07,0x53,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w20, w19, lsr #1"

  -
    input:
      bytes: [ 0xf2,0x7f,0x51,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w18, w17, lsr #31"

  -
    input:
      bytes: [ 0xf0,0x03,0x8f,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w16, w15, asr #0"

  -
    input:
      bytes: [ 0xee,0x33,0x8d,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w14, w13, asr #12"

  -
    input:
      bytes: [ 0xec,0x7f,0x8b,0x4b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg w12, w11, asr #31"

  -
    input:
      bytes: [ 0xfd,0x03,0x1e,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x29, x30"

  -
    input:
      bytes: [ 0xfe,0x03,0x1f,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x30, xzr"

  -
    input:
      bytes: [ 0xff,0x03,0x00,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg xzr, x0"

  -
    input:
      bytes: [ 0xfc,0x03,0x1b,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x28, x27"

  -
    input:
      bytes: [ 0xfa,0x77,0x19,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x26, x25, lsl #29"

  -
    input:
      bytes: [ 0xf8,0x7f,0x17,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x24, x23, lsl #31"

  -
    input:
      bytes: [ 0xf6,0x03,0x55,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x22, x21, lsr #0"

  -
    input:
      bytes: [ 0xf4,0x07,0x53,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x20, x19, lsr #1"

  -
    input:
      bytes: [ 0xf2,0x7f,0x51,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x18, x17, lsr #31"

  -
    input:
      bytes: [ 0xf0,0x03,0x8f,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x16, x15, asr #0"

  -
    input:
      bytes: [ 0xee,0x33,0x8d,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x14, x13, asr #12"

  -
    input:
      bytes: [ 0xec,0x7f,0x8b,0xcb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "neg x12, x11, asr #31"

  -
    input:
      bytes: [ 0xfd,0x03,0x1e,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w29, w30"

  -
    input:
      bytes: [ 0xfe,0x03,0x1f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w30, wzr"

  -
    input:
      bytes: [ 0xff,0x03,0x00,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp wzr, w0"

  -
    input:
      bytes: [ 0xfc,0x03,0x1b,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w28, w27"

  -
    input:
      bytes: [ 0xfa,0x77,0x19,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w26, w25, lsl #29"

  -
    input:
      bytes: [ 0xf8,0x7f,0x17,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w24, w23, lsl #31"

  -
    input:
      bytes: [ 0xf6,0x03,0x55,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w22, w21, lsr #0"

  -
    input:
      bytes: [ 0xf4,0x07,0x53,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w20, w19, lsr #1"

  -
    input:
      bytes: [ 0xf2,0x7f,0x51,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w18, w17, lsr #31"

  -
    input:
      bytes: [ 0xf0,0x03,0x8f,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w16, w15, asr #0"

  -
    input:
      bytes: [ 0xee,0x33,0x8d,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w14, w13, asr #12"

  -
    input:
      bytes: [ 0xec,0x7f,0x8b,0x6b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs w12, w11, asr #31"

  -
    input:
      bytes: [ 0xfd,0x03,0x1e,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x29, x30"

  -
    input:
      bytes: [ 0xfe,0x03,0x1f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x30, xzr"

  -
    input:
      bytes: [ 0xff,0x03,0x00,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cmp xzr, x0"

  -
    input:
      bytes: [ 0xfc,0x03,0x1b,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x28, x27"

  -
    input:
      bytes: [ 0xfa,0x77,0x19,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x26, x25, lsl #29"

  -
    input:
      bytes: [ 0xf8,0x7f,0x17,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x24, x23, lsl #31"

  -
    input:
      bytes: [ 0xf6,0x03,0x55,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x22, x21, lsr #0"

  -
    input:
      bytes: [ 0xf4,0x07,0x53,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x20, x19, lsr #1"

  -
    input:
      bytes: [ 0xf2,0x7f,0x51,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x18, x17, lsr #31"

  -
    input:
      bytes: [ 0xf0,0x03,0x8f,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x16, x15, asr #0"

  -
    input:
      bytes: [ 0xee,0x33,0x8d,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x14, x13, asr #12"

  -
    input:
      bytes: [ 0xec,0x7f,0x8b,0xeb ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "negs x12, x11, asr #31"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc w29, w27, w25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc wzr, w3, w4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc w9, wzr, w10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc w20, w0, wzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc x29, x27, x25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc xzr, x3, x4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc x9, xzr, x10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adc x20, x0, xzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs w29, w27, w25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs wzr, w3, w4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs w9, wzr, w10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs w20, w0, wzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs x29, x27, x25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs xzr, x3, x4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs x9, xzr, x10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adcs x20, x0, xzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbc w29, w27, w25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbc wzr, w3, w4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc w9, w10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbc w20, w0, wzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbc x29, x27, x25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbc xzr, x3, x4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc x9, x10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbc x20, x0, xzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbcs w29, w27, w25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbcs wzr, w3, w4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs w9, w10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbcs w20, w0, wzr"

  -
    input:
      bytes: [ 0x7d,0x03,0x19,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbcs x29, x27, x25"

  -
    input:
      bytes: [ 0x7f,0x00,0x04,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbcs xzr, x3, x4"

  -
    input:
      bytes: [ 0xe9,0x03,0x0a,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs x9, x10"

  -
    input:
      bytes: [ 0x14,0x00,0x1f,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbcs x20, x0, xzr"

  -
    input:
      bytes: [ 0xe3,0x03,0x0c,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc w3, w12"

  -
    input:
      bytes: [ 0xff,0x03,0x09,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc wzr, w9"

  -
    input:
      bytes: [ 0xf7,0x03,0x1f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc w23, wzr"

  -
    input:
      bytes: [ 0xfd,0x03,0x1e,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc x29, x30"

  -
    input:
      bytes: [ 0xff,0x03,0x00,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc xzr, x0"

  -
    input:
      bytes: [ 0xe0,0x03,0x1f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngc x0, xzr"

  -
    input:
      bytes: [ 0xe3,0x03,0x0c,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs w3, w12"

  -
    input:
      bytes: [ 0xff,0x03,0x09,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs wzr, w9"

  -
    input:
      bytes: [ 0xf7,0x03,0x1f,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs w23, wzr"

  -
    input:
      bytes: [ 0xfd,0x03,0x1e,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs x29, x30"

  -
    input:
      bytes: [ 0xff,0x03,0x00,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs xzr, x0"

  -
    input:
      bytes: [ 0xe0,0x03,0x1f,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ngcs x0, xzr"

  -
    input:
      bytes: [ 0x41,0x10,0x43,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfx x1, x2, #3, #2"

  -
    input:
      bytes: [ 0x83,0xfc,0x7f,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x3, x4, #63"

  -
    input:
      bytes: [ 0xff,0x7f,0x1f,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr wzr, wzr, #31"

  -
    input:
      bytes: [ 0x2c,0x01,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfx w12, w9, #0, #1"

  -
    input:
      bytes: [ 0xa4,0x28,0x4c,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfiz x4, x5, #52, #11"

  -
    input:
      bytes: [ 0x9f,0x00,0x40,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfx xzr, x4, #0, #1"

  -
    input:
      bytes: [ 0xe4,0x17,0x7f,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfiz x4, xzr, #1, #6"

  -
    input:
      bytes: [ 0xc5,0xfc,0x4c,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x5, x6, #12"

  -
    input:
      bytes: [ 0xa4,0x28,0x4c,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi x4, x5, #52, #11"

  -
    input:
      bytes: [ 0x9f,0x00,0x40,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil xzr, x4, #0, #1"

  -
    input:
      bytes: [ 0xe4,0x17,0x7f,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi x4, xzr, #1, #6"

  -
    input:
      bytes: [ 0xc5,0xfc,0x4c,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil x5, x6, #12, #52"

  -
    input:
      bytes: [ 0x41,0x1c,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sxtb w1, w2"

  -
    input:
      bytes: [ 0x7f,0x1c,0x40,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sxtb xzr, w3"

  -
    input:
      bytes: [ 0x49,0x3d,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sxth w9, w10"

  -
    input:
      bytes: [ 0x20,0x3c,0x40,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sxth x0, w1"

  -
    input:
      bytes: [ 0xc3,0x7f,0x40,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sxtw x3, w30"

  -
    input:
      bytes: [ 0x41,0x1c,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "uxtb w1, w2"

  -
    input:
      bytes: [ 0x7f,0x1c,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "uxtb wzr, w3"

  -
    input:
      bytes: [ 0x49,0x3d,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "uxth w9, w10"

  -
    input:
      bytes: [ 0x20,0x3c,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "uxth w0, w1"

  -
    input:
      bytes: [ 0x43,0x7c,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w3, w2, #0"

  -
    input:
      bytes: [ 0x49,0x7d,0x1f,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w9, w10, #31"

  -
    input:
      bytes: [ 0xb4,0xfe,0x7f,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x20, x21, #63"

  -
    input:
      bytes: [ 0xe1,0x7f,0x03,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w1, wzr, #3"

  -
    input:
      bytes: [ 0x43,0x7c,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w3, w2, #0"

  -
    input:
      bytes: [ 0x49,0x7d,0x1f,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w9, w10, #31"

  -
    input:
      bytes: [ 0xb4,0xfe,0x7f,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x20, x21, #63"

  -
    input:
      bytes: [ 0xff,0x7f,0x03,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr wzr, wzr, #3"

  -
    input:
      bytes: [ 0x43,0x7c,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w3, w2, #0"

  -
    input:
      bytes: [ 0x49,0x01,0x01,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl w9, w10, #31"

  -
    input:
      bytes: [ 0xb4,0x02,0x41,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl x20, x21, #63"

  -
    input:
      bytes: [ 0xe1,0x73,0x1d,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl w1, wzr, #3"

  -
    input:
      bytes: [ 0x49,0x01,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfx w9, w10, #0, #1"

  -
    input:
      bytes: [ 0x62,0x00,0x41,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfiz x2, x3, #63, #1"

  -
    input:
      bytes: [ 0x93,0xfe,0x40,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x19, x20, #0"

  -
    input:
      bytes: [ 0x49,0xe9,0x7b,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfiz x9, x10, #5, #59"

  -
    input:
      bytes: [ 0x49,0x7d,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w9, w10, #0"

  -
    input:
      bytes: [ 0x8b,0x01,0x01,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfiz w11, w12, #31, #1"

  -
    input:
      bytes: [ 0xcd,0x09,0x03,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfiz w13, w14, #29, #3"

  -
    input:
      bytes: [ 0xff,0x2b,0x76,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfiz xzr, xzr, #10, #11"

  -
    input:
      bytes: [ 0x49,0x01,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfx w9, w10, #0, #1"

  -
    input:
      bytes: [ 0x62,0xfc,0x7f,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x2, x3, #63"

  -
    input:
      bytes: [ 0x93,0xfe,0x40,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x19, x20, #0"

  -
    input:
      bytes: [ 0x49,0xfd,0x45,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x9, x10, #5"

  -
    input:
      bytes: [ 0x49,0x7d,0x00,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w9, w10, #0"

  -
    input:
      bytes: [ 0x8b,0x7d,0x1f,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w11, w12, #31"

  -
    input:
      bytes: [ 0xcd,0x7d,0x1d,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w13, w14, #29"

  -
    input:
      bytes: [ 0xff,0x53,0x4a,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sbfx xzr, xzr, #10, #11"

  -
    input:
      bytes: [ 0x49,0x01,0x00,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w9, w10, #0, #1"

  -
    input:
      bytes: [ 0x62,0x00,0x41,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi x2, x3, #63, #1"

  -
    input:
      bytes: [ 0x93,0xfe,0x40,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil x19, x20, #0, #64"

  -
    input:
      bytes: [ 0x49,0xe9,0x7b,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi x9, x10, #5, #59"

  -
    input:
      bytes: [ 0x49,0x7d,0x00,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w9, w10, #0, #32"

  -
    input:
      bytes: [ 0x8b,0x01,0x01,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi w11, w12, #31, #1"

  -
    input:
      bytes: [ 0xcd,0x09,0x03,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi w13, w14, #29, #3"

  -
    input:
      bytes: [ 0xff,0x2b,0x76,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi xzr, xzr, #10, #11"

  -
    input:
      bytes: [ 0x49,0x01,0x00,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w9, w10, #0, #1"

  -
    input:
      bytes: [ 0x62,0xfc,0x7f,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil x2, x3, #63, #1"

  -
    input:
      bytes: [ 0x93,0xfe,0x40,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil x19, x20, #0, #64"

  -
    input:
      bytes: [ 0x49,0xfd,0x45,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil x9, x10, #5, #59"

  -
    input:
      bytes: [ 0x49,0x7d,0x00,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w9, w10, #0, #32"

  -
    input:
      bytes: [ 0x8b,0x7d,0x1f,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w11, w12, #31, #1"

  -
    input:
      bytes: [ 0xcd,0x7d,0x1d,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w13, w14, #29, #3"

  -
    input:
      bytes: [ 0xff,0x53,0x4a,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil xzr, xzr, #10, #11"

  -
    input:
      bytes: [ 0x49,0x01,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfx w9, w10, #0, #1"

  -
    input:
      bytes: [ 0x62,0x00,0x41,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl x2, x3, #63"

  -
    input:
      bytes: [ 0x93,0xfe,0x40,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x19, x20, #0"

  -
    input:
      bytes: [ 0x49,0xe9,0x7b,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl x9, x10, #5"

  -
    input:
      bytes: [ 0x49,0x7d,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w9, w10, #0"

  -
    input:
      bytes: [ 0x8b,0x01,0x01,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl w11, w12, #31"

  -
    input:
      bytes: [ 0xcd,0x09,0x03,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl w13, w14, #29"

  -
    input:
      bytes: [ 0xff,0x2b,0x76,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfiz xzr, xzr, #10, #11"

  -
    input:
      bytes: [ 0x49,0x01,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfx w9, w10, #0, #1"

  -
    input:
      bytes: [ 0x62,0xfc,0x7f,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x2, x3, #63"

  -
    input:
      bytes: [ 0x93,0xfe,0x40,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x19, x20, #0"

  -
    input:
      bytes: [ 0x49,0xfd,0x45,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x9, x10, #5"

  -
    input:
      bytes: [ 0x49,0x7d,0x00,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w9, w10, #0"

  -
    input:
      bytes: [ 0x8b,0x7d,0x1f,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w11, w12, #31"

  -
    input:
      bytes: [ 0xcd,0x7d,0x1d,0x53 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w13, w14, #29"

  -
    input:
      bytes: [ 0xff,0x53,0x4a,0xd3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ubfx xzr, xzr, #10, #11"

  -
    input:
      bytes: [ 0xe3,0x7f,0x00,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfxil w3, wzr, #0, #32"

  -
    input:
      bytes: [ 0xff,0x03,0x01,0x33 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi wzr, wzr, #31, #1"

  -
    input:
      bytes: [ 0xe0,0x23,0x7b,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi x0, xzr, #5, #9"

  -
    input:
      bytes: [ 0xff,0x03,0x41,0xb3 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bfi xzr, xzr, #63, #1"

  -
    input:
      bytes: [ 0x05,0x00,0x00,0x34 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cbz w5, #0"

  -
    input:
      bytes: [ 0xe3,0xff,0xff,0xb5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cbnz x3, #-4"

  -
    input:
      bytes: [ 0xf4,0xff,0x7f,0x34 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cbz w20, #1048572"

  -
    input:
      bytes: [ 0x1f,0x00,0x80,0xb5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cbnz xzr, #-1048576"

  -
    input:
      bytes: [ 0x00,0x00,0x00,0x54 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "b.eq #0"

  -
    input:
      bytes: [ 0xeb,0xff,0xff,0x54 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "b.lt #-4"

  -
    input:
      bytes: [ 0xe3,0xff,0x7f,0x54 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "b.lo #1048572"

  -
    input:
      bytes: [ 0x20,0x08,0x5f,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp w1, #31, #0, eq"

  -
    input:
      bytes: [ 0x6f,0x28,0x40,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp w3, #0, #15, hs"

  -
    input:
      bytes: [ 0xed,0x2b,0x4f,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp wzr, #15, #13, hs"

  -
    input:
      bytes: [ 0x20,0xd9,0x5f,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp x9, #31, #0, le"

  -
    input:
      bytes: [ 0x6f,0xc8,0x40,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp x3, #0, #15, gt"

  -
    input:
      bytes: [ 0xe7,0x1b,0x45,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp xzr, #5, #7, ne"

  -
    input:
      bytes: [ 0x20,0x08,0x5f,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn w1, #31, #0, eq"

  -
    input:
      bytes: [ 0x6f,0x28,0x40,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn w3, #0, #15, hs"

  -
    input:
      bytes: [ 0xed,0x2b,0x4f,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn wzr, #15, #13, hs"

  -
    input:
      bytes: [ 0x20,0xd9,0x5f,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn x9, #31, #0, le"

  -
    input:
      bytes: [ 0x6f,0xc8,0x40,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn x3, #0, #15, gt"

  -
    input:
      bytes: [ 0xe7,0x1b,0x45,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn xzr, #5, #7, ne"

  -
    input:
      bytes: [ 0x20,0x00,0x5f,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp w1, wzr, #0, eq"

  -
    input:
      bytes: [ 0x6f,0x20,0x40,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp w3, w0, #15, hs"

  -
    input:
      bytes: [ 0xed,0x23,0x4f,0x7a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp wzr, w15, #13, hs"

  -
    input:
      bytes: [ 0x20,0xd1,0x5f,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp x9, xzr, #0, le"

  -
    input:
      bytes: [ 0x6f,0xc0,0x40,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp x3, x0, #15, gt"

  -
    input:
      bytes: [ 0xe7,0x13,0x45,0xfa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmp xzr, x5, #7, ne"

  -
    input:
      bytes: [ 0x20,0x00,0x5f,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn w1, wzr, #0, eq"

  -
    input:
      bytes: [ 0x6f,0x20,0x40,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn w3, w0, #15, hs"

  -
    input:
      bytes: [ 0xed,0x23,0x4f,0x3a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn wzr, w15, #13, hs"

  -
    input:
      bytes: [ 0x20,0xd1,0x5f,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn x9, xzr, #0, le"

  -
    input:
      bytes: [ 0x6f,0xc0,0x40,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn x3, x0, #15, gt"

  -
    input:
      bytes: [ 0xe7,0x13,0x45,0xba ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ccmn xzr, x5, #7, ne"

  -
    input:
      bytes: [ 0x01,0x10,0x93,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel w1, w0, w19, ne"

  -
    input:
      bytes: [ 0xbf,0x00,0x89,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel wzr, w5, w9, eq"

  -
    input:
      bytes: [ 0xe9,0xc3,0x9e,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel w9, wzr, w30, gt"

  -
    input:
      bytes: [ 0x81,0x43,0x9f,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel w1, w28, wzr, mi"

  -
    input:
      bytes: [ 0xf3,0xb2,0x9d,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel x19, x23, x29, lt"

  -
    input:
      bytes: [ 0x7f,0xa0,0x84,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel xzr, x3, x4, ge"

  -
    input:
      bytes: [ 0xe5,0x23,0x86,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel x5, xzr, x6, hs"

  -
    input:
      bytes: [ 0x07,0x31,0x9f,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csel x7, x8, xzr, lo"

  -
    input:
      bytes: [ 0x01,0x14,0x93,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc w1, w0, w19, ne"

  -
    input:
      bytes: [ 0xbf,0x04,0x89,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc wzr, w5, w9, eq"

  -
    input:
      bytes: [ 0xe9,0xc7,0x9e,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc w9, wzr, w30, gt"

  -
    input:
      bytes: [ 0x81,0x47,0x9f,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc w1, w28, wzr, mi"

  -
    input:
      bytes: [ 0xf3,0xb6,0x9d,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc x19, x23, x29, lt"

  -
    input:
      bytes: [ 0x7f,0xa4,0x84,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc xzr, x3, x4, ge"

  -
    input:
      bytes: [ 0xe5,0x27,0x86,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc x5, xzr, x6, hs"

  -
    input:
      bytes: [ 0x07,0x35,0x9f,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinc x7, x8, xzr, lo"

  -
    input:
      bytes: [ 0x01,0x10,0x93,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv w1, w0, w19, ne"

  -
    input:
      bytes: [ 0xbf,0x00,0x89,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv wzr, w5, w9, eq"

  -
    input:
      bytes: [ 0xe9,0xc3,0x9e,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv w9, wzr, w30, gt"

  -
    input:
      bytes: [ 0x81,0x43,0x9f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv w1, w28, wzr, mi"

  -
    input:
      bytes: [ 0xf3,0xb2,0x9d,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv x19, x23, x29, lt"

  -
    input:
      bytes: [ 0x7f,0xa0,0x84,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv xzr, x3, x4, ge"

  -
    input:
      bytes: [ 0xe5,0x23,0x86,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv x5, xzr, x6, hs"

  -
    input:
      bytes: [ 0x07,0x31,0x9f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csinv x7, x8, xzr, lo"

  -
    input:
      bytes: [ 0x01,0x14,0x93,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg w1, w0, w19, ne"

  -
    input:
      bytes: [ 0xbf,0x04,0x89,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg wzr, w5, w9, eq"

  -
    input:
      bytes: [ 0xe9,0xc7,0x9e,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg w9, wzr, w30, gt"

  -
    input:
      bytes: [ 0x81,0x47,0x9f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg w1, w28, wzr, mi"

  -
    input:
      bytes: [ 0xf3,0xb6,0x9d,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg x19, x23, x29, lt"

  -
    input:
      bytes: [ 0x7f,0xa4,0x84,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg xzr, x3, x4, ge"

  -
    input:
      bytes: [ 0xe5,0x27,0x86,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg x5, xzr, x6, hs"

  -
    input:
      bytes: [ 0x07,0x35,0x9f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csneg x7, x8, xzr, lo"

  -
    input:
      bytes: [ 0xe3,0x17,0x9f,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cset w3, eq"

  -
    input:
      bytes: [ 0xe9,0x47,0x9f,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cset x9, pl"

  -
    input:
      bytes: [ 0xf4,0x03,0x9f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csetm w20, ne"

  -
    input:
      bytes: [ 0xfe,0xb3,0x9f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csetm x30, ge"

  -
    input:
      bytes: [ 0xa3,0xd4,0x85,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinc w3, w5, gt"

  -
    input:
      bytes: [ 0x9f,0xc4,0x84,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinc wzr, w4, le"

  -
    input:
      bytes: [ 0xe9,0xa7,0x9f,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cset w9, lt"

  -
    input:
      bytes: [ 0xa3,0xd4,0x85,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinc x3, x5, gt"

  -
    input:
      bytes: [ 0x9f,0xc4,0x84,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinc xzr, x4, le"

  -
    input:
      bytes: [ 0xe9,0xa7,0x9f,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cset x9, lt"

  -
    input:
      bytes: [ 0xa3,0xd0,0x85,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinv w3, w5, gt"

  -
    input:
      bytes: [ 0x9f,0xc0,0x84,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinv wzr, w4, le"

  -
    input:
      bytes: [ 0xe9,0xa3,0x9f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csetm w9, lt"

  -
    input:
      bytes: [ 0xa3,0xd0,0x85,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinv x3, x5, gt"

  -
    input:
      bytes: [ 0x9f,0xc0,0x84,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cinv xzr, x4, le"

  -
    input:
      bytes: [ 0xe9,0xa3,0x9f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "csetm x9, lt"

  -
    input:
      bytes: [ 0xa3,0xd4,0x85,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cneg w3, w5, gt"

  -
    input:
      bytes: [ 0x9f,0xc4,0x84,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cneg wzr, w4, le"

  -
    input:
      bytes: [ 0xe9,0xa7,0x9f,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cneg w9, wzr, lt"

  -
    input:
      bytes: [ 0xa3,0xd4,0x85,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cneg x3, x5, gt"

  -
    input:
      bytes: [ 0x9f,0xc4,0x84,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cneg xzr, x4, le"

  -
    input:
      bytes: [ 0xe9,0xa7,0x9f,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cneg x9, xzr, lt"

  -
    input:
      bytes: [ 0xe0,0x00,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rbit w0, w7"

  -
    input:
      bytes: [ 0x72,0x00,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rbit x18, x3"

  -
    input:
      bytes: [ 0x31,0x04,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev16 w17, w1"

  -
    input:
      bytes: [ 0x45,0x04,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev16 x5, x2"

  -
    input:
      bytes: [ 0x12,0x08,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev w18, w0"

  -
    input:
      bytes: [ 0x34,0x08,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev32 x20, x1"

  -
    input:
      bytes: [ 0xf4,0x0b,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev32 x20, xzr"

  -
    input:
      bytes: [ 0x56,0x0c,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev x22, x2"

  -
    input:
      bytes: [ 0xf2,0x0f,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev x18, xzr"

  -
    input:
      bytes: [ 0xe7,0x0b,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev w7, wzr"

  -
    input:
      bytes: [ 0x78,0x10,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clz w24, w3"

  -
    input:
      bytes: [ 0x9a,0x10,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clz x26, x4"

  -
    input:
      bytes: [ 0xa3,0x14,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cls w3, w5"

  -
    input:
      bytes: [ 0xb4,0x14,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "cls x20, x5"

  -
    input:
      bytes: [ 0xf8,0x13,0xc0,0x5a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clz w24, wzr"

  -
    input:
      bytes: [ 0xf6,0x0f,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev x22, xzr"

  -
    input:
      bytes: [ 0x8d,0x0d,0xc0,0xda ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "rev x13, x12"

  -
    input:
      bytes: [ 0xe0,0x08,0xca,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "udiv w0, w7, w10"

  -
    input:
      bytes: [ 0xc9,0x0a,0xc4,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "udiv x9, x22, x4"

  -
    input:
      bytes: [ 0xac,0x0e,0xc0,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sdiv w12, w21, w0"

  -
    input:
      bytes: [ 0x4d,0x0c,0xc1,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sdiv x13, x2, x1"

  -
    input:
      bytes: [ 0x8b,0x21,0xcd,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl w11, w12, w13"

  -
    input:
      bytes: [ 0xee,0x21,0xd0,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl x14, x15, x16"

  -
    input:
      bytes: [ 0x51,0x26,0xd3,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w17, w18, w19"

  -
    input:
      bytes: [ 0xb4,0x26,0xd6,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x20, x21, x22"

  -
    input:
      bytes: [ 0x17,0x2b,0xd9,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w23, w24, w25"

  -
    input:
      bytes: [ 0x7a,0x2b,0xdc,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x26, x27, x28"

  -
    input:
      bytes: [ 0x20,0x2c,0xc2,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror w0, w1, w2"

  -
    input:
      bytes: [ 0x83,0x2c,0xc5,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror x3, x4, x5"

  -
    input:
      bytes: [ 0xe6,0x20,0xc8,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl w6, w7, w8"

  -
    input:
      bytes: [ 0x49,0x21,0xcb,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsl x9, x10, x11"

  -
    input:
      bytes: [ 0xac,0x25,0xce,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr w12, w13, w14"

  -
    input:
      bytes: [ 0x0f,0x26,0xd1,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "lsr x15, x16, x17"

  -
    input:
      bytes: [ 0x72,0x2a,0xd4,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr w18, w19, w20"

  -
    input:
      bytes: [ 0xd5,0x2a,0xd7,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "asr x21, x22, x23"

  -
    input:
      bytes: [ 0x38,0x2f,0xda,0x1a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror w24, w25, w26"

  -
    input:
      bytes: [ 0x9b,0x2f,0xdd,0x9a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror x27, x28, x29"

  -
    input:
      bytes: [ 0x61,0x10,0x07,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd w1, w3, w7, w4"

  -
    input:
      bytes: [ 0x1f,0x2c,0x09,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd wzr, w0, w9, w11"

  -
    input:
      bytes: [ 0xed,0x13,0x04,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd w13, wzr, w4, w4"

  -
    input:
      bytes: [ 0xd3,0x77,0x1f,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd w19, w30, wzr, w29"

  -
    input:
      bytes: [ 0xa4,0x7c,0x06,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul w4, w5, w6"

  -
    input:
      bytes: [ 0x61,0x10,0x07,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd x1, x3, x7, x4"

  -
    input:
      bytes: [ 0x1f,0x2c,0x09,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd xzr, x0, x9, x11"

  -
    input:
      bytes: [ 0xed,0x13,0x04,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd x13, xzr, x4, x4"

  -
    input:
      bytes: [ 0xd3,0x77,0x1f,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "madd x19, x30, xzr, x29"

  -
    input:
      bytes: [ 0xa4,0x7c,0x06,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul x4, x5, x6"

  -
    input:
      bytes: [ 0x61,0x90,0x07,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub w1, w3, w7, w4"

  -
    input:
      bytes: [ 0x1f,0xac,0x09,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub wzr, w0, w9, w11"

  -
    input:
      bytes: [ 0xed,0x93,0x04,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub w13, wzr, w4, w4"

  -
    input:
      bytes: [ 0xd3,0xf7,0x1f,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub w19, w30, wzr, w29"

  -
    input:
      bytes: [ 0xa4,0xfc,0x06,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mneg w4, w5, w6"

  -
    input:
      bytes: [ 0x61,0x90,0x07,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub x1, x3, x7, x4"

  -
    input:
      bytes: [ 0x1f,0xac,0x09,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub xzr, x0, x9, x11"

  -
    input:
      bytes: [ 0xed,0x93,0x04,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub x13, xzr, x4, x4"

  -
    input:
      bytes: [ 0xd3,0xf7,0x1f,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msub x19, x30, xzr, x29"

  -
    input:
      bytes: [ 0xa4,0xfc,0x06,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mneg x4, x5, x6"

  -
    input:
      bytes: [ 0xa3,0x24,0x22,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smaddl x3, w5, w2, x9"

  -
    input:
      bytes: [ 0x5f,0x31,0x2b,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smaddl xzr, w10, w11, x12"

  -
    input:
      bytes: [ 0xed,0x3f,0x2e,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smaddl x13, wzr, w14, x15"

  -
    input:
      bytes: [ 0x30,0x4a,0x3f,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smaddl x16, w17, wzr, x18"

  -
    input:
      bytes: [ 0x93,0x7e,0x35,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smull x19, w20, w21"

  -
    input:
      bytes: [ 0xa3,0xa4,0x22,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smsubl x3, w5, w2, x9"

  -
    input:
      bytes: [ 0x5f,0xb1,0x2b,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smsubl xzr, w10, w11, x12"

  -
    input:
      bytes: [ 0xed,0xbf,0x2e,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smsubl x13, wzr, w14, x15"

  -
    input:
      bytes: [ 0x30,0xca,0x3f,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smsubl x16, w17, wzr, x18"

  -
    input:
      bytes: [ 0x93,0xfe,0x35,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smnegl x19, w20, w21"

  -
    input:
      bytes: [ 0xa3,0x24,0xa2,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umaddl x3, w5, w2, x9"

  -
    input:
      bytes: [ 0x5f,0x31,0xab,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umaddl xzr, w10, w11, x12"

  -
    input:
      bytes: [ 0xed,0x3f,0xae,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umaddl x13, wzr, w14, x15"

  -
    input:
      bytes: [ 0x30,0x4a,0xbf,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umaddl x16, w17, wzr, x18"

  -
    input:
      bytes: [ 0x93,0x7e,0xb5,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umull x19, w20, w21"

  -
    input:
      bytes: [ 0xa3,0xa4,0xa2,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umsubl x3, w5, w2, x9"

  -
    input:
      bytes: [ 0x5f,0xb1,0xab,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umsubl xzr, w10, w11, x12"

  -
    input:
      bytes: [ 0xed,0xbf,0xae,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umsubl x13, wzr, w14, x15"

  -
    input:
      bytes: [ 0x30,0xca,0xbf,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umsubl x16, w17, wzr, x18"

  -
    input:
      bytes: [ 0x93,0xfe,0xb5,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umnegl x19, w20, w21"

  -
    input:
      bytes: [ 0xbe,0x7f,0x5c,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smulh x30, x29, x28"

  -
    input:
      bytes: [ 0x7f,0x7f,0x5a,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smulh xzr, x27, x26"

  -
    input:
      bytes: [ 0xf9,0x7f,0x58,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smulh x25, xzr, x24"

  -
    input:
      bytes: [ 0xd7,0x7e,0x5f,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smulh x23, x22, xzr"

  -
    input:
      bytes: [ 0xbe,0x7f,0xdc,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umulh x30, x29, x28"

  -
    input:
      bytes: [ 0x7f,0x7f,0xda,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umulh xzr, x27, x26"

  -
    input:
      bytes: [ 0xf9,0x7f,0xd8,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umulh x25, xzr, x24"

  -
    input:
      bytes: [ 0xd7,0x7e,0xdf,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umulh x23, x22, xzr"

  -
    input:
      bytes: [ 0x83,0x7c,0x05,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul w3, w4, w5"

  -
    input:
      bytes: [ 0xdf,0x7c,0x07,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul wzr, w6, w7"

  -
    input:
      bytes: [ 0xe8,0x7f,0x09,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul w8, wzr, w9"

  -
    input:
      bytes: [ 0x6a,0x7d,0x1f,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul w10, w11, wzr"

  -
    input:
      bytes: [ 0xac,0x7d,0x0e,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul x12, x13, x14"

  -
    input:
      bytes: [ 0xff,0x7d,0x10,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul xzr, x15, x16"

  -
    input:
      bytes: [ 0xf1,0x7f,0x12,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul x17, xzr, x18"

  -
    input:
      bytes: [ 0x93,0x7e,0x1f,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mul x19, x20, xzr"

  -
    input:
      bytes: [ 0xd5,0xfe,0x17,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mneg w21, w22, w23"

  -
    input:
      bytes: [ 0x1f,0xff,0x19,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mneg wzr, w24, w25"

  -
    input:
      bytes: [ 0xfa,0xff,0x1b,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mneg w26, wzr, w27"

  -
    input:
      bytes: [ 0xbc,0xff,0x1f,0x1b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mneg w28, w29, wzr"

  -
    input:
      bytes: [ 0xab,0x7d,0x31,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smull x11, w13, w17"

  -
    input:
      bytes: [ 0xab,0x7d,0xb1,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umull x11, w13, w17"

  -
    input:
      bytes: [ 0xab,0xfd,0x31,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smnegl x11, w13, w17"

  -
    input:
      bytes: [ 0xab,0xfd,0xb1,0x9b ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "umnegl x11, w13, w17"

  -
    input:
      bytes: [ 0x01,0x00,0x00,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "svc #0"

  -
    input:
      bytes: [ 0xe1,0xff,0x1f,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "svc #0xffff"

  -
    input:
      bytes: [ 0x22,0x00,0x00,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "hvc #0x1"

  -
    input:
      bytes: [ 0x03,0xdc,0x05,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "smc #0x2ee0"

  -
    input:
      bytes: [ 0x80,0x01,0x20,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "brk #0xc"

  -
    input:
      bytes: [ 0x60,0x0f,0x40,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "hlt #0x7b"

  -
    input:
      bytes: [ 0x41,0x05,0xa0,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dcps1 #0x2a"

  -
    input:
      bytes: [ 0x22,0x01,0xa0,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dcps2 #0x9"

  -
    input:
      bytes: [ 0x03,0x7d,0xa0,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dcps3 #0x3e8"

  -
    input:
      bytes: [ 0x01,0x00,0xa0,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dcps1"

  -
    input:
      bytes: [ 0x02,0x00,0xa0,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dcps2"

  -
    input:
      bytes: [ 0x03,0x00,0xa0,0xd4 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dcps3"

  -
    input:
      bytes: [ 0xa3,0x00,0x87,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "extr w3, w5, w7, #0"

  -
    input:
      bytes: [ 0xab,0x7d,0x91,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "extr w11, w13, w17, #31"

  -
    input:
      bytes: [ 0xa3,0x3c,0xc7,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "extr x3, x5, x7, #15"

  -
    input:
      bytes: [ 0xab,0xfd,0xd1,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "extr x11, x13, x17, #63"

  -
    input:
      bytes: [ 0xf3,0x62,0xd7,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror x19, x23, #24"

  -
    input:
      bytes: [ 0xfd,0xff,0xdf,0x93 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror x29, xzr, #63"

  -
    input:
      bytes: [ 0xa9,0x7d,0x8d,0x13 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ror w9, w13, #31"

  -
    input:
      bytes: [ 0x60,0x20,0x25,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmp s3, s5"

  -
    input:
      bytes: [ 0xe8,0x23,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmp s31, #0.0"

  -
    input:
      bytes: [ 0xb0,0x23,0x3e,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmpe s29, s30"

  -
    input:
      bytes: [ 0xf8,0x21,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmpe s15, #0.0"

  -
    input:
      bytes: [ 0x80,0x20,0x6c,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmp d4, d12"

  -
    input:
      bytes: [ 0xe8,0x22,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmp d23, #0.0"

  -
    input:
      bytes: [ 0x50,0x23,0x76,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmpe d26, d22"

  -
    input:
      bytes: [ 0xb8,0x23,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcmpe d29, #0.0"

  -
    input:
      bytes: [ 0x20,0x04,0x3f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmp s1, s31, #0, eq"

  -
    input:
      bytes: [ 0x6f,0x24,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmp s3, s0, #15, hs"

  -
    input:
      bytes: [ 0xed,0x27,0x2f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmp s31, s15, #13, hs"

  -
    input:
      bytes: [ 0x20,0xd5,0x7f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmp d9, d31, #0, le"

  -
    input:
      bytes: [ 0x6f,0xc4,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmp d3, d0, #15, gt"

  -
    input:
      bytes: [ 0xe7,0x17,0x65,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmp d31, d5, #7, ne"

  -
    input:
      bytes: [ 0x30,0x04,0x3f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmpe s1, s31, #0, eq"

  -
    input:
      bytes: [ 0x7f,0x24,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmpe s3, s0, #15, hs"

  -
    input:
      bytes: [ 0xfd,0x27,0x2f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmpe s31, s15, #13, hs"

  -
    input:
      bytes: [ 0x30,0xd5,0x7f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmpe d9, d31, #0, le"

  -
    input:
      bytes: [ 0x7f,0xc4,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmpe d3, d0, #15, gt"

  -
    input:
      bytes: [ 0xf7,0x17,0x65,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fccmpe d31, d5, #7, ne"

  -
    input:
      bytes: [ 0x83,0x5e,0x29,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcsel s3, s20, s9, pl"

  -
    input:
      bytes: [ 0x49,0x4d,0x6b,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcsel d9, d10, d11, mi"

  -
    input:
      bytes: [ 0x20,0x40,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov s0, s1"

  -
    input:
      bytes: [ 0x62,0xc0,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fabs s2, s3"

  -
    input:
      bytes: [ 0xa4,0x40,0x21,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fneg s4, s5"

  -
    input:
      bytes: [ 0xe6,0xc0,0x21,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fsqrt s6, s7"

  -
    input:
      bytes: [ 0x28,0xc1,0x22,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvt d8, s9"

  -
    input:
      bytes: [ 0x6a,0xc1,0x23,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvt h10, s11"

  -
    input:
      bytes: [ 0xac,0x41,0x24,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintn s12, s13"

  -
    input:
      bytes: [ 0xee,0xc1,0x24,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintp s14, s15"

  -
    input:
      bytes: [ 0x30,0x42,0x25,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintm s16, s17"

  -
    input:
      bytes: [ 0x72,0xc2,0x25,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintz s18, s19"

  -
    input:
      bytes: [ 0xb4,0x42,0x26,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frinta s20, s21"

  -
    input:
      bytes: [ 0xf6,0x42,0x27,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintx s22, s23"

  -
    input:
      bytes: [ 0x38,0xc3,0x27,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frinti s24, s25"

  -
    input:
      bytes: [ 0x20,0x40,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov d0, d1"

  -
    input:
      bytes: [ 0x62,0xc0,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fabs d2, d3"

  -
    input:
      bytes: [ 0xa4,0x40,0x61,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fneg d4, d5"

  -
    input:
      bytes: [ 0xe6,0xc0,0x61,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fsqrt d6, d7"

  -
    input:
      bytes: [ 0x28,0x41,0x62,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvt s8, d9"

  -
    input:
      bytes: [ 0x6a,0xc1,0x63,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvt h10, d11"

  -
    input:
      bytes: [ 0xac,0x41,0x64,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintn d12, d13"

  -
    input:
      bytes: [ 0xee,0xc1,0x64,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintp d14, d15"

  -
    input:
      bytes: [ 0x30,0x42,0x65,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintm d16, d17"

  -
    input:
      bytes: [ 0x72,0xc2,0x65,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintz d18, d19"

  -
    input:
      bytes: [ 0xb4,0x42,0x66,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frinta d20, d21"

  -
    input:
      bytes: [ 0xf6,0x42,0x67,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frintx d22, d23"

  -
    input:
      bytes: [ 0x38,0xc3,0x67,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "frinti d24, d25"

  -
    input:
      bytes: [ 0x7a,0x43,0xe2,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvt s26, h27"

  -
    input:
      bytes: [ 0xbc,0xc3,0xe2,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvt d28, h29"

  -
    input:
      bytes: [ 0x74,0x0a,0x31,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmul s20, s19, s17"

  -
    input:
      bytes: [ 0x41,0x18,0x23,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fdiv s1, s2, s3"

  -
    input:
      bytes: [ 0xa4,0x28,0x26,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fadd s4, s5, s6"

  -
    input:
      bytes: [ 0x07,0x39,0x29,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fsub s7, s8, s9"

  -
    input:
      bytes: [ 0x6a,0x49,0x2c,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmax s10, s11, s12"

  -
    input:
      bytes: [ 0xcd,0x59,0x2f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmin s13, s14, s15"

  -
    input:
      bytes: [ 0x30,0x6a,0x32,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmaxnm s16, s17, s18"

  -
    input:
      bytes: [ 0x93,0x7a,0x35,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fminnm s19, s20, s21"

  -
    input:
      bytes: [ 0xf6,0x8a,0x38,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fnmul s22, s23, s24"

  -
    input:
      bytes: [ 0x74,0x0a,0x71,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmul d20, d19, d17"

  -
    input:
      bytes: [ 0x41,0x18,0x63,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fdiv d1, d2, d3"

  -
    input:
      bytes: [ 0xa4,0x28,0x66,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fadd d4, d5, d6"

  -
    input:
      bytes: [ 0x07,0x39,0x69,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fsub d7, d8, d9"

  -
    input:
      bytes: [ 0x6a,0x49,0x6c,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmax d10, d11, d12"

  -
    input:
      bytes: [ 0xcd,0x59,0x6f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmin d13, d14, d15"

  -
    input:
      bytes: [ 0x30,0x6a,0x72,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmaxnm d16, d17, d18"

  -
    input:
      bytes: [ 0x93,0x7a,0x75,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fminnm d19, d20, d21"

  -
    input:
      bytes: [ 0xf6,0x8a,0x78,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fnmul d22, d23, d24"

  -
    input:
      bytes: [ 0xa3,0x7c,0x06,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmadd s3, s5, s6, s31"

  -
    input:
      bytes: [ 0xa3,0x5d,0x40,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmadd d3, d13, d0, d23"

  -
    input:
      bytes: [ 0xa3,0xfc,0x06,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmsub s3, s5, s6, s31"

  -
    input:
      bytes: [ 0xa3,0xdd,0x40,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmsub d3, d13, d0, d23"

  -
    input:
      bytes: [ 0xa3,0x7c,0x26,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fnmadd s3, s5, s6, s31"

  -
    input:
      bytes: [ 0xa3,0x5d,0x60,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fnmadd d3, d13, d0, d23"

  -
    input:
      bytes: [ 0xa3,0xfc,0x26,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fnmsub s3, s5, s6, s31"

  -
    input:
      bytes: [ 0xa3,0xdd,0x60,0x1f ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fnmsub d3, d13, d0, d23"

  -
    input:
      bytes: [ 0xa3,0xfc,0x18,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs w3, s5, #1"

  -
    input:
      bytes: [ 0x9f,0xce,0x18,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs wzr, s20, #13"

  -
    input:
      bytes: [ 0x13,0x80,0x18,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs w19, s0, #32"

  -
    input:
      bytes: [ 0xa3,0xfc,0x18,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x3, s5, #1"

  -
    input:
      bytes: [ 0xcc,0x4f,0x18,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x12, s30, #45"

  -
    input:
      bytes: [ 0x13,0x00,0x18,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x19, s0, #64"

  -
    input:
      bytes: [ 0xa3,0xfc,0x58,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs w3, d5, #1"

  -
    input:
      bytes: [ 0x9f,0xce,0x58,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs wzr, d20, #13"

  -
    input:
      bytes: [ 0x13,0x80,0x58,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs w19, d0, #32"

  -
    input:
      bytes: [ 0xa3,0xfc,0x58,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x3, d5, #1"

  -
    input:
      bytes: [ 0xcc,0x4f,0x58,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x12, d30, #45"

  -
    input:
      bytes: [ 0x13,0x00,0x58,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x19, d0, #64"

  -
    input:
      bytes: [ 0xa3,0xfc,0x19,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu w3, s5, #1"

  -
    input:
      bytes: [ 0x9f,0xce,0x19,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu wzr, s20, #13"

  -
    input:
      bytes: [ 0x13,0x80,0x19,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu w19, s0, #32"

  -
    input:
      bytes: [ 0xa3,0xfc,0x19,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x3, s5, #1"

  -
    input:
      bytes: [ 0xcc,0x4f,0x19,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x12, s30, #45"

  -
    input:
      bytes: [ 0x13,0x00,0x19,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x19, s0, #64"

  -
    input:
      bytes: [ 0xa3,0xfc,0x59,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu w3, d5, #1"

  -
    input:
      bytes: [ 0x9f,0xce,0x59,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu wzr, d20, #13"

  -
    input:
      bytes: [ 0x13,0x80,0x59,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu w19, d0, #32"

  -
    input:
      bytes: [ 0xa3,0xfc,0x59,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x3, d5, #1"

  -
    input:
      bytes: [ 0xcc,0x4f,0x59,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x12, d30, #45"

  -
    input:
      bytes: [ 0x13,0x00,0x59,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x19, d0, #64"

  -
    input:
      bytes: [ 0x77,0xfe,0x02,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s23, w19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x02,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s31, wzr, #20"

  -
    input:
      bytes: [ 0x0e,0x80,0x02,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s14, w0, #32"

  -
    input:
      bytes: [ 0x77,0xfe,0x02,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s23, x19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x02,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s31, xzr, #20"

  -
    input:
      bytes: [ 0x0e,0x00,0x02,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s14, x0, #64"

  -
    input:
      bytes: [ 0x77,0xfe,0x42,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d23, w19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x42,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d31, wzr, #20"

  -
    input:
      bytes: [ 0x0e,0x80,0x42,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d14, w0, #32"

  -
    input:
      bytes: [ 0x77,0xfe,0x42,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d23, x19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x42,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d31, xzr, #20"

  -
    input:
      bytes: [ 0x0e,0x00,0x42,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d14, x0, #64"

  -
    input:
      bytes: [ 0x77,0xfe,0x03,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s23, w19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x03,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s31, wzr, #20"

  -
    input:
      bytes: [ 0x0e,0x80,0x03,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s14, w0, #32"

  -
    input:
      bytes: [ 0x77,0xfe,0x03,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s23, x19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x03,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s31, xzr, #20"

  -
    input:
      bytes: [ 0x0e,0x00,0x03,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s14, x0, #64"

  -
    input:
      bytes: [ 0x77,0xfe,0x43,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d23, w19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x43,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d31, wzr, #20"

  -
    input:
      bytes: [ 0x0e,0x80,0x43,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d14, w0, #32"

  -
    input:
      bytes: [ 0x77,0xfe,0x43,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d23, x19, #1"

  -
    input:
      bytes: [ 0xff,0xb3,0x43,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d31, xzr, #20"

  -
    input:
      bytes: [ 0x0e,0x00,0x43,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d14, x0, #64"

  -
    input:
      bytes: [ 0xe3,0x03,0x20,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtns w3, s31"

  -
    input:
      bytes: [ 0x9f,0x01,0x20,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtns xzr, s12"

  -
    input:
      bytes: [ 0x9f,0x01,0x21,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtnu wzr, s12"

  -
    input:
      bytes: [ 0x00,0x00,0x21,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtnu x0, s0"

  -
    input:
      bytes: [ 0x3f,0x01,0x28,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtps wzr, s9"

  -
    input:
      bytes: [ 0x8c,0x02,0x28,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtps x12, s20"

  -
    input:
      bytes: [ 0xfe,0x02,0x29,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtpu w30, s23"

  -
    input:
      bytes: [ 0x7d,0x00,0x29,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtpu x29, s3"

  -
    input:
      bytes: [ 0x62,0x00,0x30,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtms w2, s3"

  -
    input:
      bytes: [ 0xa4,0x00,0x30,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtms x4, s5"

  -
    input:
      bytes: [ 0xe6,0x00,0x31,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtmu w6, s7"

  -
    input:
      bytes: [ 0x28,0x01,0x31,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtmu x8, s9"

  -
    input:
      bytes: [ 0x6a,0x01,0x38,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs w10, s11"

  -
    input:
      bytes: [ 0xac,0x01,0x38,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x12, s13"

  -
    input:
      bytes: [ 0xee,0x01,0x39,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu w14, s15"

  -
    input:
      bytes: [ 0x0f,0x02,0x39,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x15, s16"

  -
    input:
      bytes: [ 0x51,0x02,0x22,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s17, w18"

  -
    input:
      bytes: [ 0x93,0x02,0x22,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s19, x20"

  -
    input:
      bytes: [ 0xd5,0x02,0x23,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf s21, w22"

  -
    input:
      bytes: [ 0x17,0x03,0x22,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf s23, x24"

  -
    input:
      bytes: [ 0x59,0x03,0x24,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtas w25, s26"

  -
    input:
      bytes: [ 0x9b,0x03,0x24,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtas x27, s28"

  -
    input:
      bytes: [ 0xdd,0x03,0x25,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtau w29, s30"

  -
    input:
      bytes: [ 0x1f,0x00,0x25,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtau xzr, s0"

  -
    input:
      bytes: [ 0xe3,0x03,0x60,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtns w3, d31"

  -
    input:
      bytes: [ 0x9f,0x01,0x60,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtns xzr, d12"

  -
    input:
      bytes: [ 0x9f,0x01,0x61,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtnu wzr, d12"

  -
    input:
      bytes: [ 0x00,0x00,0x61,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtnu x0, d0"

  -
    input:
      bytes: [ 0x3f,0x01,0x68,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtps wzr, d9"

  -
    input:
      bytes: [ 0x8c,0x02,0x68,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtps x12, d20"

  -
    input:
      bytes: [ 0xfe,0x02,0x69,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtpu w30, d23"

  -
    input:
      bytes: [ 0x7d,0x00,0x69,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtpu x29, d3"

  -
    input:
      bytes: [ 0x62,0x00,0x70,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtms w2, d3"

  -
    input:
      bytes: [ 0xa4,0x00,0x70,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtms x4, d5"

  -
    input:
      bytes: [ 0xe6,0x00,0x71,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtmu w6, d7"

  -
    input:
      bytes: [ 0x28,0x01,0x71,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtmu x8, d9"

  -
    input:
      bytes: [ 0x6a,0x01,0x78,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs w10, d11"

  -
    input:
      bytes: [ 0xac,0x01,0x78,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs x12, d13"

  -
    input:
      bytes: [ 0xee,0x01,0x79,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu w14, d15"

  -
    input:
      bytes: [ 0x0f,0x02,0x79,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtzu x15, d16"

  -
    input:
      bytes: [ 0x51,0x02,0x62,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d17, w18"

  -
    input:
      bytes: [ 0x93,0x02,0x62,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "scvtf d19, x20"

  -
    input:
      bytes: [ 0xd5,0x02,0x63,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d21, w22"

  -
    input:
      bytes: [ 0x17,0x03,0x63,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ucvtf d23, x24"

  -
    input:
      bytes: [ 0x59,0x03,0x64,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtas w25, d26"

  -
    input:
      bytes: [ 0x9b,0x03,0x64,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtas x27, d28"

  -
    input:
      bytes: [ 0xdd,0x03,0x65,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtau w29, d30"

  -
    input:
      bytes: [ 0x1f,0x00,0x65,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fcvtau xzr, d0"

  -
    input:
      bytes: [ 0x23,0x01,0x26,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov w3, s9"

  -
    input:
      bytes: [ 0x69,0x00,0x27,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov s9, w3"

  -
    input:
      bytes: [ 0xf4,0x03,0x66,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov x20, d31"

  -
    input:
      bytes: [ 0xe1,0x01,0x67,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov d1, x15"

  -
    input:
      bytes: [ 0x83,0x01,0xae,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov x3, v12.d[1]"

  -
    input:
      bytes: [ 0x61,0x02,0xaf,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov v1.d[1], x19"

  -
    input:
      bytes: [ 0xe3,0x03,0xaf,0x9e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov v3.d[1], xzr"

  -
    input:
      bytes: [ 0x02,0x10,0x28,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov s2, #0.12500000"

  -
    input:
      bytes: [ 0x03,0x10,0x2e,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov s3, #1.00000000"

  -
    input:
      bytes: [ 0x1e,0x10,0x66,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov d30, #16.00000000"

  -
    input:
      bytes: [ 0x04,0x30,0x2e,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov s4, #1.06250000"

  -
    input:
      bytes: [ 0x0a,0xf0,0x6f,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov d10, #1.93750000"

  -
    input:
      bytes: [ 0x0c,0x10,0x3e,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov s12, #-1.00000000"

  -
    input:
      bytes: [ 0x10,0x30,0x64,0x1e ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "fmov d16, #8.50000000"

  -
    input:
      bytes: [ 0xe0,0xff,0x7f,0x18 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w0, #1048572"

  -
    input:
      bytes: [ 0x0a,0x00,0x80,0x58 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x10, #-1048576"

  -
    input:
      bytes: [ 0x62,0x7c,0x01,0x08 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stxrb w1, w2, [x3]"

  -
    input:
      bytes: [ 0x83,0x7c,0x02,0x48 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stxrh w2, w3, [x4]"

  -
    input:
      bytes: [ 0xe4,0x7f,0x1f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stxr wzr, w4, [sp]"

  -
    input:
      bytes: [ 0xe6,0x7c,0x05,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stxr w5, x6, [x7]"

  -
    input:
      bytes: [ 0x27,0x7d,0x5f,0x08 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldxrb w7, [x9]"

  -
    input:
      bytes: [ 0x5f,0x7d,0x5f,0x48 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldxrh wzr, [x10]"

  -
    input:
      bytes: [ 0xe9,0x7f,0x5f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldxr w9, [sp]"

  -
    input:
      bytes: [ 0x6a,0x7d,0x5f,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldxr x10, [x11]"

  -
    input:
      bytes: [ 0xcc,0x35,0x2b,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stxp w11, w12, w13, [x14]"

  -
    input:
      bytes: [ 0xf7,0x39,0x3f,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stxp wzr, x23, x14, [x15]"

  -
    input:
      bytes: [ 0xec,0x7f,0x7f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldxp w12, wzr, [sp]"

  -
    input:
      bytes: [ 0xed,0x39,0x7f,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldxp x13, x14, [x15]"

  -
    input:
      bytes: [ 0x0f,0xfe,0x0e,0x08 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxrb w14, w15, [x16]"

  -
    input:
      bytes: [ 0x30,0xfe,0x0f,0x48 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxrh w15, w16, [x17]"

  -
    input:
      bytes: [ 0xf1,0xff,0x1f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxr wzr, w17, [sp]"

  -
    input:
      bytes: [ 0x93,0xfe,0x12,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxr w18, x19, [x20]"

  -
    input:
      bytes: [ 0xb3,0xfe,0x5f,0x08 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldaxrb w19, [x21]"

  -
    input:
      bytes: [ 0xf4,0xff,0x5f,0x48 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldaxrh w20, [sp]"

  -
    input:
      bytes: [ 0xdf,0xfe,0x5f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldaxr wzr, [x22]"

  -
    input:
      bytes: [ 0xf5,0xfe,0x5f,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldaxr x21, [x23]"

  -
    input:
      bytes: [ 0x16,0xdf,0x3f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxp wzr, w22, w23, [x24]"

  -
    input:
      bytes: [ 0xfa,0xef,0x39,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxp w25, x26, x27, [sp]"

  -
    input:
      bytes: [ 0xfa,0xff,0x7f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldaxp w26, wzr, [sp]"

  -
    input:
      bytes: [ 0xdb,0xf3,0x7f,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldaxp x27, x28, [x30]"

  -
    input:
      bytes: [ 0xfb,0xff,0x9f,0x08 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlrb w27, [sp]"

  -
    input:
      bytes: [ 0x1c,0xfc,0x9f,0x48 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlrh w28, [x0]"

  -
    input:
      bytes: [ 0x3f,0xfc,0x9f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlr wzr, [x1]"

  -
    input:
      bytes: [ 0x5e,0xfc,0x9f,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlr x30, [x2]"

  -
    input:
      bytes: [ 0xfd,0xff,0xdf,0x08 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldarb w29, [sp]"

  -
    input:
      bytes: [ 0x1e,0xfc,0xdf,0x48 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldarh w30, [x0]"

  -
    input:
      bytes: [ 0x3f,0xfc,0xdf,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldar wzr, [x1]"

  -
    input:
      bytes: [ 0x41,0xfc,0xdf,0xc8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldar x1, [x2]"

  -
    input:
      bytes: [ 0x16,0xdf,0x3f,0x88 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stlxp wzr, w22, w23, [x24]"

  -
    input:
      bytes: [ 0xe9,0x03,0x00,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sturb w9, [sp]"

  -
    input:
      bytes: [ 0x9f,0xf1,0x0f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sturh wzr, [x12, #255]"

  -
    input:
      bytes: [ 0x10,0x00,0x10,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur w16, [x0, #-256]"

  -
    input:
      bytes: [ 0xdc,0x11,0x00,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur x28, [x14, #1]"

  -
    input:
      bytes: [ 0x81,0xf2,0x4f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldurb w1, [x20, #255]"

  -
    input:
      bytes: [ 0x34,0xf0,0x4f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldurh w20, [x1, #255]"

  -
    input:
      bytes: [ 0xec,0xf3,0x4f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur w12, [sp, #255]"

  -
    input:
      bytes: [ 0x9f,0xf1,0x4f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur xzr, [x12, #255]"

  -
    input:
      bytes: [ 0xe9,0x00,0x90,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldursb x9, [x7, #-256]"

  -
    input:
      bytes: [ 0x71,0x02,0x90,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldursh x17, [x19, #-256]"

  -
    input:
      bytes: [ 0xf4,0x01,0x90,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldursw x20, [x15, #-256]"

  -
    input:
      bytes: [ 0x4d,0x00,0x80,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldursw x13, [x2]"

  -
    input:
      bytes: [ 0xe2,0x03,0x90,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfum pldl2keep, [sp, #-256]"

  -
    input:
      bytes: [ 0x33,0x00,0xd0,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldursb w19, [x1, #-256]"

  -
    input:
      bytes: [ 0xaf,0x02,0xd0,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldursh w15, [x21, #-256]"

  -
    input:
      bytes: [ 0xe0,0x13,0x00,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur b0, [sp, #1]"

  -
    input:
      bytes: [ 0x8c,0xf1,0x1f,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur h12, [x12, #-1]"

  -
    input:
      bytes: [ 0x0f,0xf0,0x0f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur s15, [x0, #255]"

  -
    input:
      bytes: [ 0xbf,0x90,0x01,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur d31, [x5, #25]"

  -
    input:
      bytes: [ 0xa9,0x00,0x80,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stur q9, [x5]"

  -
    input:
      bytes: [ 0xe3,0x03,0x40,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur b3, [sp]"

  -
    input:
      bytes: [ 0x85,0x00,0x50,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur h5, [x4, #-256]"

  -
    input:
      bytes: [ 0x87,0xf1,0x5f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur s7, [x12, #-1]"

  -
    input:
      bytes: [ 0x6b,0x42,0x40,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur d11, [x19, #4]"

  -
    input:
      bytes: [ 0x2d,0x20,0xc0,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldur q13, [x1, #2]"

  -
    input:
      bytes: [ 0x00,0x00,0x40,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x0, [x0]"

  -
    input:
      bytes: [ 0xa4,0x03,0x40,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x4, [x29]"

  -
    input:
      bytes: [ 0x9e,0xfd,0x7f,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x30, [x12, #32760]"

  -
    input:
      bytes: [ 0xf4,0x07,0x40,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x20, [sp, #8]"

  -
    input:
      bytes: [ 0xff,0x03,0x40,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr xzr, [sp]"

  -
    input:
      bytes: [ 0xe2,0x03,0x40,0xb9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w2, [sp]"

  -
    input:
      bytes: [ 0xf1,0xff,0x7f,0xb9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w17, [sp, #16380]"

  -
    input:
      bytes: [ 0x4d,0x04,0x40,0xb9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w13, [x2, #4]"

  -
    input:
      bytes: [ 0xa2,0x04,0x80,0xb9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x2, [x5, #4]"

  -
    input:
      bytes: [ 0xf7,0xff,0xbf,0xb9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x23, [sp, #16380]"

  -
    input:
      bytes: [ 0x82,0x00,0x40,0x79 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w2, [x4]"

  -
    input:
      bytes: [ 0xd7,0xfc,0xff,0x79 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w23, [x6, #8190]"

  -
    input:
      bytes: [ 0xff,0x07,0xc0,0x79 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh wzr, [sp, #2]"

  -
    input:
      bytes: [ 0x5d,0x04,0x80,0x79 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh x29, [x2, #2]"

  -
    input:
      bytes: [ 0x7a,0xe4,0x41,0x39 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w26, [x3, #121]"

  -
    input:
      bytes: [ 0x4c,0x00,0x40,0x39 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w12, [x2]"

  -
    input:
      bytes: [ 0xfb,0xff,0xff,0x39 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w27, [sp, #4095]"

  -
    input:
      bytes: [ 0xff,0x01,0x80,0x39 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb xzr, [x15]"

  -
    input:
      bytes: [ 0xfe,0x03,0x00,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x30, [sp]"

  -
    input:
      bytes: [ 0x94,0xfc,0x3f,0xb9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w20, [x4, #16380]"

  -
    input:
      bytes: [ 0x54,0x1d,0x00,0x79 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w20, [x10, #14]"

  -
    input:
      bytes: [ 0xf1,0xff,0x3f,0x79 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w17, [sp, #8190]"

  -
    input:
      bytes: [ 0x77,0xfc,0x3f,0x39 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w23, [x3, #4095]"

  -
    input:
      bytes: [ 0x5f,0x00,0x00,0x39 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb wzr, [x2]"

  -
    input:
      bytes: [ 0xe0,0x07,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl1keep, [sp, #8]"

  -
    input:
      bytes: [ 0x61,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl1strm, [x3]"

  -
    input:
      bytes: [ 0xa2,0x08,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl2keep, [x5, #16]"

  -
    input:
      bytes: [ 0x43,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl2strm, [x2]"

  -
    input:
      bytes: [ 0xa4,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl3keep, [x5]"

  -
    input:
      bytes: [ 0xc5,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl3strm, [x6]"

  -
    input:
      bytes: [ 0xe8,0x07,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm plil1keep, [sp, #8]"

  -
    input:
      bytes: [ 0x69,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm plil1strm, [x3]"

  -
    input:
      bytes: [ 0xaa,0x08,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm plil2keep, [x5, #16]"

  -
    input:
      bytes: [ 0x4b,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm plil2strm, [x2]"

  -
    input:
      bytes: [ 0xac,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm plil3keep, [x5]"

  -
    input:
      bytes: [ 0xcd,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm plil3strm, [x6]"

  -
    input:
      bytes: [ 0xf0,0x07,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pstl1keep, [sp, #8]"

  -
    input:
      bytes: [ 0x71,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pstl1strm, [x3]"

  -
    input:
      bytes: [ 0xb2,0x08,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pstl2keep, [x5, #16]"

  -
    input:
      bytes: [ 0x53,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pstl2strm, [x2]"

  -
    input:
      bytes: [ 0xb4,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pstl3keep, [x5]"

  -
    input:
      bytes: [ 0xd5,0x00,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pstl3strm, [x6]"

  -
    input:
      bytes: [ 0xef,0x03,0x80,0xf9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm #15, [sp]"

  -
    input:
      bytes: [ 0xff,0xff,0x7f,0x3d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b31, [sp, #4095]"

  -
    input:
      bytes: [ 0x54,0xfc,0x7f,0x7d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h20, [x2, #8190]"

  -
    input:
      bytes: [ 0x6a,0xfe,0x7f,0xbd ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s10, [x19, #16380]"

  -
    input:
      bytes: [ 0x43,0xfd,0x7f,0xfd ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d3, [x10, #32760]"

  -
    input:
      bytes: [ 0xec,0xff,0xbf,0x3d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q12, [sp, #65520]"

  -
    input:
      bytes: [ 0xe3,0x6b,0x65,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w3, [sp, x5]"

  -
    input:
      bytes: [ 0x69,0x7b,0x66,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w9, [x27, x6, lsl #0]"

  -
    input:
      bytes: [ 0xca,0x6b,0xe7,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w10, [x30, x7]"

  -
    input:
      bytes: [ 0xab,0xeb,0x63,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w11, [x29, x3, sxtx]"

  -
    input:
      bytes: [ 0x8c,0xfb,0x3f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w12, [x28, xzr, sxtx #0]"

  -
    input:
      bytes: [ 0x4e,0x4b,0x66,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w14, [x26, w6, uxtw]"

  -
    input:
      bytes: [ 0x2f,0x5b,0xe7,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w15, [x25, w7, uxtw #0]"

  -
    input:
      bytes: [ 0xf1,0xca,0x69,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w17, [x23, w9, sxtw]"

  -
    input:
      bytes: [ 0xd2,0xda,0xaa,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb x18, [x22, w10, sxtw #0]"

  -
    input:
      bytes: [ 0xe3,0x6b,0xe5,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w3, [sp, x5]"

  -
    input:
      bytes: [ 0x69,0x6b,0xe6,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w9, [x27, x6]"

  -
    input:
      bytes: [ 0xca,0x7b,0x67,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w10, [x30, x7, lsl #1]"

  -
    input:
      bytes: [ 0xab,0xeb,0x23,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w11, [x29, x3, sxtx]"

  -
    input:
      bytes: [ 0x8c,0xeb,0x7f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w12, [x28, xzr, sxtx]"

  -
    input:
      bytes: [ 0x6d,0xfb,0xa5,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh x13, [x27, x5, sxtx #1]"

  -
    input:
      bytes: [ 0x4e,0x4b,0x66,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w14, [x26, w6, uxtw]"

  -
    input:
      bytes: [ 0x2f,0x4b,0x67,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w15, [x25, w7, uxtw]"

  -
    input:
      bytes: [ 0x10,0x5b,0xe8,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w16, [x24, w8, uxtw #1]"

  -
    input:
      bytes: [ 0xf1,0xca,0x69,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w17, [x23, w9, sxtw]"

  -
    input:
      bytes: [ 0xd2,0xca,0x6a,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w18, [x22, w10, sxtw]"

  -
    input:
      bytes: [ 0xb3,0xda,0x3f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w19, [x21, wzr, sxtw #1]"

  -
    input:
      bytes: [ 0xe3,0x6b,0x65,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w3, [sp, x5]"

  -
    input:
      bytes: [ 0x69,0x6b,0x66,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s9, [x27, x6]"

  -
    input:
      bytes: [ 0xca,0x7b,0x67,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w10, [x30, x7, lsl #2]"

  -
    input:
      bytes: [ 0xab,0xeb,0x63,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w11, [x29, x3, sxtx]"

  -
    input:
      bytes: [ 0x8c,0xeb,0x3f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s12, [x28, xzr, sxtx]"

  -
    input:
      bytes: [ 0x6d,0xfb,0x25,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w13, [x27, x5, sxtx #2]"

  -
    input:
      bytes: [ 0x4e,0x4b,0x26,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w14, [x26, w6, uxtw]"

  -
    input:
      bytes: [ 0x2f,0x4b,0x67,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w15, [x25, w7, uxtw]"

  -
    input:
      bytes: [ 0x10,0x5b,0x68,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w16, [x24, w8, uxtw #2]"

  -
    input:
      bytes: [ 0xf1,0xca,0xa9,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x17, [x23, w9, sxtw]"

  -
    input:
      bytes: [ 0xd2,0xca,0x6a,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w18, [x22, w10, sxtw]"

  -
    input:
      bytes: [ 0xb3,0xda,0xbf,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x19, [x21, wzr, sxtw #2]"

  -
    input:
      bytes: [ 0xe3,0x6b,0x65,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x3, [sp, x5]"

  -
    input:
      bytes: [ 0x69,0x6b,0x26,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x9, [x27, x6]"

  -
    input:
      bytes: [ 0xca,0x7b,0x67,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d10, [x30, x7, lsl #3]"

  -
    input:
      bytes: [ 0xab,0xeb,0x23,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x11, [x29, x3, sxtx]"

  -
    input:
      bytes: [ 0x8c,0xeb,0x7f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x12, [x28, xzr, sxtx]"

  -
    input:
      bytes: [ 0x6d,0xfb,0x65,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x13, [x27, x5, sxtx #3]"

  -
    input:
      bytes: [ 0x40,0x4b,0xa6,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm pldl1keep, [x26, w6, uxtw]"

  -
    input:
      bytes: [ 0x2f,0x4b,0x67,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x15, [x25, w7, uxtw]"

  -
    input:
      bytes: [ 0x10,0x5b,0x68,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x16, [x24, w8, uxtw #3]"

  -
    input:
      bytes: [ 0xf1,0xca,0x69,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x17, [x23, w9, sxtw]"

  -
    input:
      bytes: [ 0xd2,0xca,0x6a,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x18, [x22, w10, sxtw]"

  -
    input:
      bytes: [ 0xb3,0xda,0x3f,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d19, [x21, wzr, sxtw #3]"

  -
    input:
      bytes: [ 0x06,0x68,0xa5,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "prfm #6, [x0, x5]"

  -
    input:
      bytes: [ 0xe3,0x6b,0xe5,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q3, [sp, x5]"

  -
    input:
      bytes: [ 0x69,0x6b,0xe6,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q9, [x27, x6]"

  -
    input:
      bytes: [ 0xca,0x7b,0xe7,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q10, [x30, x7, lsl #4]"

  -
    input:
      bytes: [ 0xab,0xeb,0xa3,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q11, [x29, x3, sxtx]"

  -
    input:
      bytes: [ 0x8c,0xeb,0xbf,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q12, [x28, xzr, sxtx]"

  -
    input:
      bytes: [ 0x6d,0xfb,0xa5,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q13, [x27, x5, sxtx #4]"

  -
    input:
      bytes: [ 0x4e,0x4b,0xe6,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q14, [x26, w6, uxtw]"

  -
    input:
      bytes: [ 0x2f,0x4b,0xe7,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q15, [x25, w7, uxtw]"

  -
    input:
      bytes: [ 0x10,0x5b,0xe8,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q16, [x24, w8, uxtw #4]"

  -
    input:
      bytes: [ 0xf1,0xca,0xe9,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q17, [x23, w9, sxtw]"

  -
    input:
      bytes: [ 0xd2,0xca,0xaa,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q18, [x22, w10, sxtw]"

  -
    input:
      bytes: [ 0xb3,0xda,0xff,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q19, [x21, wzr, sxtw #4]"

  -
    input:
      bytes: [ 0x49,0xf4,0x0f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w9, [x2], #255"

  -
    input:
      bytes: [ 0x6a,0x14,0x00,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w10, [x3], #1"

  -
    input:
      bytes: [ 0x6a,0x04,0x10,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w10, [x3], #-256"

  -
    input:
      bytes: [ 0x49,0xf4,0x0f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w9, [x2], #255"

  -
    input:
      bytes: [ 0x49,0x14,0x00,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w9, [x2], #1"

  -
    input:
      bytes: [ 0x6a,0x04,0x10,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w10, [x3], #-256"

  -
    input:
      bytes: [ 0xf3,0xf7,0x0f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w19, [sp], #255"

  -
    input:
      bytes: [ 0xd4,0x17,0x00,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w20, [x30], #1"

  -
    input:
      bytes: [ 0x95,0x05,0x10,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w21, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0x0f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str xzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0x00,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0x10,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x19, [x12], #-256"

  -
    input:
      bytes: [ 0x49,0xf4,0x4f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w9, [x2], #255"

  -
    input:
      bytes: [ 0x6a,0x14,0x40,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w10, [x3], #1"

  -
    input:
      bytes: [ 0x6a,0x04,0x50,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w10, [x3], #-256"

  -
    input:
      bytes: [ 0x49,0xf4,0x4f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w9, [x2], #255"

  -
    input:
      bytes: [ 0x49,0x14,0x40,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w9, [x2], #1"

  -
    input:
      bytes: [ 0x6a,0x04,0x50,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w10, [x3], #-256"

  -
    input:
      bytes: [ 0xf3,0xf7,0x4f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w19, [sp], #255"

  -
    input:
      bytes: [ 0xd4,0x17,0x40,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w20, [x30], #1"

  -
    input:
      bytes: [ 0x95,0x05,0x50,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w21, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0x4f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr xzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0x40,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0x50,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x19, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0x8f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb xzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0x80,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb x2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0x90,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb x19, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0x8f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh xzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0x80,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh x2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0x90,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh x19, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0x8f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw xzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0x80,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0x90,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x19, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0xcf,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb wzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0xc0,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0xd0,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w19, [x12], #-256"

  -
    input:
      bytes: [ 0x3f,0xf5,0xcf,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh wzr, [x9], #255"

  -
    input:
      bytes: [ 0x62,0x14,0xc0,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w2, [x3], #1"

  -
    input:
      bytes: [ 0x93,0x05,0xd0,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w19, [x12], #-256"

  -
    input:
      bytes: [ 0x00,0xf4,0x0f,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str b0, [x0], #255"

  -
    input:
      bytes: [ 0x63,0x14,0x00,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str b3, [x3], #1"

  -
    input:
      bytes: [ 0xe5,0x07,0x10,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str b5, [sp], #-256"

  -
    input:
      bytes: [ 0x4a,0xf5,0x0f,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str h10, [x10], #255"

  -
    input:
      bytes: [ 0xed,0x16,0x00,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str h13, [x23], #1"

  -
    input:
      bytes: [ 0xef,0x07,0x10,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str h15, [sp], #-256"

  -
    input:
      bytes: [ 0x94,0xf6,0x0f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s20, [x20], #255"

  -
    input:
      bytes: [ 0xf7,0x16,0x00,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s23, [x23], #1"

  -
    input:
      bytes: [ 0x19,0x04,0x10,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s25, [x0], #-256"

  -
    input:
      bytes: [ 0x94,0xf6,0x0f,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d20, [x20], #255"

  -
    input:
      bytes: [ 0xf7,0x16,0x00,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d23, [x23], #1"

  -
    input:
      bytes: [ 0x19,0x04,0x10,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d25, [x0], #-256"

  -
    input:
      bytes: [ 0x00,0xf4,0x4f,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b0, [x0], #255"

  -
    input:
      bytes: [ 0x63,0x14,0x40,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b3, [x3], #1"

  -
    input:
      bytes: [ 0xe5,0x07,0x50,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b5, [sp], #-256"

  -
    input:
      bytes: [ 0x4a,0xf5,0x4f,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h10, [x10], #255"

  -
    input:
      bytes: [ 0xed,0x16,0x40,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h13, [x23], #1"

  -
    input:
      bytes: [ 0xef,0x07,0x50,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h15, [sp], #-256"

  -
    input:
      bytes: [ 0x94,0xf6,0x4f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s20, [x20], #255"

  -
    input:
      bytes: [ 0xf7,0x16,0x40,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s23, [x23], #1"

  -
    input:
      bytes: [ 0x19,0x04,0x50,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s25, [x0], #-256"

  -
    input:
      bytes: [ 0x94,0xf6,0x4f,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d20, [x20], #255"

  -
    input:
      bytes: [ 0xf7,0x16,0x40,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d23, [x23], #1"

  -
    input:
      bytes: [ 0x19,0x04,0x50,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d25, [x0], #-256"

  -
    input:
      bytes: [ 0x34,0xf4,0xcf,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q20, [x1], #255"

  -
    input:
      bytes: [ 0x37,0x15,0xc0,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q23, [x9], #1"

  -
    input:
      bytes: [ 0x99,0x06,0xd0,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q25, [x20], #-256"

  -
    input:
      bytes: [ 0x2a,0xf4,0x8f,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q10, [x1], #255"

  -
    input:
      bytes: [ 0xf6,0x17,0x80,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q22, [sp], #1"

  -
    input:
      bytes: [ 0x95,0x06,0x90,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q21, [x20], #-256"

  -
    input:
      bytes: [ 0x83,0x0c,0x40,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x3, [x4, #0]!"

  -
    input:
      bytes: [ 0xff,0x0f,0x40,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr xzr, [sp, #0]!"

  -
    input:
      bytes: [ 0x49,0xfc,0x0f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w9, [x2, #255]!"

  -
    input:
      bytes: [ 0x6a,0x1c,0x00,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w10, [x3, #1]!"

  -
    input:
      bytes: [ 0x6a,0x0c,0x10,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strb w10, [x3, #-256]!"

  -
    input:
      bytes: [ 0x49,0xfc,0x0f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w9, [x2, #255]!"

  -
    input:
      bytes: [ 0x49,0x1c,0x00,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w9, [x2, #1]!"

  -
    input:
      bytes: [ 0x6a,0x0c,0x10,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "strh w10, [x3, #-256]!"

  -
    input:
      bytes: [ 0xf3,0xff,0x0f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w19, [sp, #255]!"

  -
    input:
      bytes: [ 0xd4,0x1f,0x00,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w20, [x30, #1]!"

  -
    input:
      bytes: [ 0x95,0x0d,0x10,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str w21, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0x0f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str xzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0x00,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0x10,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str x19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x49,0xfc,0x4f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w9, [x2, #255]!"

  -
    input:
      bytes: [ 0x6a,0x1c,0x40,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w10, [x3, #1]!"

  -
    input:
      bytes: [ 0x6a,0x0c,0x50,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrb w10, [x3, #-256]!"

  -
    input:
      bytes: [ 0x49,0xfc,0x4f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w9, [x2, #255]!"

  -
    input:
      bytes: [ 0x49,0x1c,0x40,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w9, [x2, #1]!"

  -
    input:
      bytes: [ 0x6a,0x0c,0x50,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrh w10, [x3, #-256]!"

  -
    input:
      bytes: [ 0xf3,0xff,0x4f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w19, [sp, #255]!"

  -
    input:
      bytes: [ 0xd4,0x1f,0x40,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w20, [x30, #1]!"

  -
    input:
      bytes: [ 0x95,0x0d,0x50,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr w21, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0x4f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr xzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0x40,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0x50,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr x19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0x8f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb xzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0x80,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb x2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0x90,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb x19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0x8f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh xzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0x80,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh x2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0x90,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh x19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0x8f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw xzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0x80,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0x90,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsw x19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0xcf,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb wzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0xc0,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0xd0,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsb w19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x3f,0xfd,0xcf,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh wzr, [x9, #255]!"

  -
    input:
      bytes: [ 0x62,0x1c,0xc0,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w2, [x3, #1]!"

  -
    input:
      bytes: [ 0x93,0x0d,0xd0,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldrsh w19, [x12, #-256]!"

  -
    input:
      bytes: [ 0x00,0xfc,0x0f,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str b0, [x0, #255]!"

  -
    input:
      bytes: [ 0x63,0x1c,0x00,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str b3, [x3, #1]!"

  -
    input:
      bytes: [ 0xe5,0x0f,0x10,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str b5, [sp, #-256]!"

  -
    input:
      bytes: [ 0x4a,0xfd,0x0f,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str h10, [x10, #255]!"

  -
    input:
      bytes: [ 0xed,0x1e,0x00,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str h13, [x23, #1]!"

  -
    input:
      bytes: [ 0xef,0x0f,0x10,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str h15, [sp, #-256]!"

  -
    input:
      bytes: [ 0x94,0xfe,0x0f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s20, [x20, #255]!"

  -
    input:
      bytes: [ 0xf7,0x1e,0x00,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s23, [x23, #1]!"

  -
    input:
      bytes: [ 0x19,0x0c,0x10,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str s25, [x0, #-256]!"

  -
    input:
      bytes: [ 0x94,0xfe,0x0f,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d20, [x20, #255]!"

  -
    input:
      bytes: [ 0xf7,0x1e,0x00,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d23, [x23, #1]!"

  -
    input:
      bytes: [ 0x19,0x0c,0x10,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str d25, [x0, #-256]!"

  -
    input:
      bytes: [ 0x00,0xfc,0x4f,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b0, [x0, #255]!"

  -
    input:
      bytes: [ 0x63,0x1c,0x40,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b3, [x3, #1]!"

  -
    input:
      bytes: [ 0xe5,0x0f,0x50,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr b5, [sp, #-256]!"

  -
    input:
      bytes: [ 0x4a,0xfd,0x4f,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h10, [x10, #255]!"

  -
    input:
      bytes: [ 0xed,0x1e,0x40,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h13, [x23, #1]!"

  -
    input:
      bytes: [ 0xef,0x0f,0x50,0x7c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr h15, [sp, #-256]!"

  -
    input:
      bytes: [ 0x94,0xfe,0x4f,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s20, [x20, #255]!"

  -
    input:
      bytes: [ 0xf7,0x1e,0x40,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s23, [x23, #1]!"

  -
    input:
      bytes: [ 0x19,0x0c,0x50,0xbc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr s25, [x0, #-256]!"

  -
    input:
      bytes: [ 0x94,0xfe,0x4f,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d20, [x20, #255]!"

  -
    input:
      bytes: [ 0xf7,0x1e,0x40,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d23, [x23, #1]!"

  -
    input:
      bytes: [ 0x19,0x0c,0x50,0xfc ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr d25, [x0, #-256]!"

  -
    input:
      bytes: [ 0x34,0xfc,0xcf,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q20, [x1, #255]!"

  -
    input:
      bytes: [ 0x37,0x1d,0xc0,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q23, [x9, #1]!"

  -
    input:
      bytes: [ 0x99,0x0e,0xd0,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldr q25, [x20, #-256]!"

  -
    input:
      bytes: [ 0x2a,0xfc,0x8f,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q10, [x1, #255]!"

  -
    input:
      bytes: [ 0xf6,0x1f,0x80,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q22, [sp, #1]!"

  -
    input:
      bytes: [ 0x95,0x0e,0x90,0x3c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "str q21, [x20, #-256]!"

  -
    input:
      bytes: [ 0xe9,0x0b,0x00,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sttrb w9, [sp]"

  -
    input:
      bytes: [ 0x9f,0xf9,0x0f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sttrh wzr, [x12, #255]"

  -
    input:
      bytes: [ 0x10,0x08,0x10,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sttr w16, [x0, #-256]"

  -
    input:
      bytes: [ 0xdc,0x19,0x00,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sttr x28, [x14, #1]"

  -
    input:
      bytes: [ 0x81,0xfa,0x4f,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrb w1, [x20, #255]"

  -
    input:
      bytes: [ 0x34,0xf8,0x4f,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrh w20, [x1, #255]"

  -
    input:
      bytes: [ 0xec,0xfb,0x4f,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtr w12, [sp, #255]"

  -
    input:
      bytes: [ 0x9f,0xf9,0x4f,0xf8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtr xzr, [x12, #255]"

  -
    input:
      bytes: [ 0xe9,0x08,0x90,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrsb x9, [x7, #-256]"

  -
    input:
      bytes: [ 0x71,0x0a,0x90,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrsh x17, [x19, #-256]"

  -
    input:
      bytes: [ 0xf4,0x09,0x90,0xb8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrsw x20, [x15, #-256]"

  -
    input:
      bytes: [ 0x33,0x08,0xd0,0x38 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrsb w19, [x1, #-256]"

  -
    input:
      bytes: [ 0xaf,0x0a,0xd0,0x78 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldtrsh w15, [x21, #-256]"

  -
    input:
      bytes: [ 0xe3,0x17,0x40,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w3, w5, [sp]"

  -
    input:
      bytes: [ 0xff,0xa7,0x1f,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp wzr, w9, [sp, #252]"

  -
    input:
      bytes: [ 0xe2,0x7f,0x60,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w2, wzr, [sp, #-256]"

  -
    input:
      bytes: [ 0xe9,0xab,0x40,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w9, w10, [sp, #4]"

  -
    input:
      bytes: [ 0xe9,0xab,0x40,0x69 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x9, x10, [sp, #4]"

  -
    input:
      bytes: [ 0x49,0x28,0x60,0x69 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x9, x10, [x2, #-256]"

  -
    input:
      bytes: [ 0xf4,0xfb,0x5f,0x69 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x20, x30, [sp, #252]"

  -
    input:
      bytes: [ 0x55,0xf4,0x5f,0xa9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x21, x29, [x2, #504]"

  -
    input:
      bytes: [ 0x76,0x5c,0x60,0xa9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x22, x23, [x3, #-512]"

  -
    input:
      bytes: [ 0x98,0xe4,0x40,0xa9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x24, x25, [x4, #8]"

  -
    input:
      bytes: [ 0xfd,0xf3,0x5f,0x2d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp s29, s28, [sp, #252]"

  -
    input:
      bytes: [ 0xfb,0x6b,0x20,0x2d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp s27, s26, [sp, #-256]"

  -
    input:
      bytes: [ 0x61,0x88,0x45,0x2d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp s1, s2, [x3, #44]"

  -
    input:
      bytes: [ 0x23,0x95,0x1f,0x6d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp d3, d5, [x9, #504]"

  -
    input:
      bytes: [ 0x47,0x2d,0x20,0x6d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp d7, d11, [x10, #-512]"

  -
    input:
      bytes: [ 0xc2,0x8f,0x7f,0x6d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp d2, d3, [x30, #-8]"

  -
    input:
      bytes: [ 0xe3,0x17,0x00,0xad ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp q3, q5, [sp]"

  -
    input:
      bytes: [ 0xf1,0xcf,0x1f,0xad ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp q17, q19, [sp, #1008]"

  -
    input:
      bytes: [ 0x37,0x74,0x60,0xad ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp q23, q29, [x1, #-1024]"

  -
    input:
      bytes: [ 0xe3,0x17,0xc0,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w3, w5, [sp], #0"

  -
    input:
      bytes: [ 0xff,0xa7,0x9f,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp wzr, w9, [sp], #252"

  -
    input:
      bytes: [ 0xe2,0x7f,0xe0,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w2, wzr, [sp], #-256"

  -
    input:
      bytes: [ 0xe9,0xab,0xc0,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w9, w10, [sp], #4"

  -
    input:
      bytes: [ 0xe9,0xab,0xc0,0x68 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x9, x10, [sp], #4"

  -
    input:
      bytes: [ 0x49,0x28,0xe0,0x68 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x9, x10, [x2], #-256"

  -
    input:
      bytes: [ 0xf4,0xfb,0xdf,0x68 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x20, x30, [sp], #252"

  -
    input:
      bytes: [ 0x55,0xf4,0xdf,0xa8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x21, x29, [x2], #504"

  -
    input:
      bytes: [ 0x76,0x5c,0xe0,0xa8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x22, x23, [x3], #-512"

  -
    input:
      bytes: [ 0x98,0xe4,0xc0,0xa8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x24, x25, [x4], #8"

  -
    input:
      bytes: [ 0xfd,0xf3,0xdf,0x2c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp s29, s28, [sp], #252"

  -
    input:
      bytes: [ 0xfb,0x6b,0xa0,0x2c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp s27, s26, [sp], #-256"

  -
    input:
      bytes: [ 0x61,0x88,0xc5,0x2c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp s1, s2, [x3], #44"

  -
    input:
      bytes: [ 0x23,0x95,0x9f,0x6c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp d3, d5, [x9], #504"

  -
    input:
      bytes: [ 0x47,0x2d,0xa0,0x6c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp d7, d11, [x10], #-512"

  -
    input:
      bytes: [ 0xc2,0x8f,0xff,0x6c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp d2, d3, [x30], #-8"

  -
    input:
      bytes: [ 0xe3,0x17,0x80,0xac ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp q3, q5, [sp], #0"

  -
    input:
      bytes: [ 0xf1,0xcf,0x9f,0xac ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp q17, q19, [sp], #1008"

  -
    input:
      bytes: [ 0x37,0x74,0xe0,0xac ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp q23, q29, [x1], #-1024"

  -
    input:
      bytes: [ 0xe3,0x17,0xc0,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w3, w5, [sp, #0]!"

  -
    input:
      bytes: [ 0xff,0xa7,0x9f,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp wzr, w9, [sp, #252]!"

  -
    input:
      bytes: [ 0xe2,0x7f,0xe0,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w2, wzr, [sp, #-256]!"

  -
    input:
      bytes: [ 0xe9,0xab,0xc0,0x29 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp w9, w10, [sp, #4]!"

  -
    input:
      bytes: [ 0xe9,0xab,0xc0,0x69 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x9, x10, [sp, #4]!"

  -
    input:
      bytes: [ 0x49,0x28,0xe0,0x69 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x9, x10, [x2, #-256]!"

  -
    input:
      bytes: [ 0xf4,0xfb,0xdf,0x69 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldpsw x20, x30, [sp, #252]!"

  -
    input:
      bytes: [ 0x55,0xf4,0xdf,0xa9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x21, x29, [x2, #504]!"

  -
    input:
      bytes: [ 0x76,0x5c,0xe0,0xa9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x22, x23, [x3, #-512]!"

  -
    input:
      bytes: [ 0x98,0xe4,0xc0,0xa9 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp x24, x25, [x4, #8]!"

  -
    input:
      bytes: [ 0xfd,0xf3,0xdf,0x2d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp s29, s28, [sp, #252]!"

  -
    input:
      bytes: [ 0xfb,0x6b,0xa0,0x2d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp s27, s26, [sp, #-256]!"

  -
    input:
      bytes: [ 0x61,0x88,0xc5,0x2d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp s1, s2, [x3, #44]!"

  -
    input:
      bytes: [ 0x23,0x95,0x9f,0x6d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp d3, d5, [x9, #504]!"

  -
    input:
      bytes: [ 0x47,0x2d,0xa0,0x6d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp d7, d11, [x10, #-512]!"

  -
    input:
      bytes: [ 0xc2,0x8f,0xff,0x6d ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp d2, d3, [x30, #-8]!"

  -
    input:
      bytes: [ 0xe3,0x17,0x80,0xad ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp q3, q5, [sp, #0]!"

  -
    input:
      bytes: [ 0xf1,0xcf,0x9f,0xad ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stp q17, q19, [sp, #1008]!"

  -
    input:
      bytes: [ 0x37,0x74,0xe0,0xad ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldp q23, q29, [x1, #-1024]!"

  -
    input:
      bytes: [ 0xe3,0x17,0x40,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp w3, w5, [sp]"

  -
    input:
      bytes: [ 0xff,0xa7,0x1f,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stnp wzr, w9, [sp, #252]"

  -
    input:
      bytes: [ 0xe2,0x7f,0x60,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp w2, wzr, [sp, #-256]"

  -
    input:
      bytes: [ 0xe9,0xab,0x40,0x28 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp w9, w10, [sp, #4]"

  -
    input:
      bytes: [ 0x55,0xf4,0x5f,0xa8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp x21, x29, [x2, #504]"

  -
    input:
      bytes: [ 0x76,0x5c,0x60,0xa8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp x22, x23, [x3, #-512]"

  -
    input:
      bytes: [ 0x98,0xe4,0x40,0xa8 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp x24, x25, [x4, #8]"

  -
    input:
      bytes: [ 0xfd,0xf3,0x5f,0x2c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp s29, s28, [sp, #252]"

  -
    input:
      bytes: [ 0xfb,0x6b,0x20,0x2c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stnp s27, s26, [sp, #-256]"

  -
    input:
      bytes: [ 0x61,0x88,0x45,0x2c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp s1, s2, [x3, #44]"

  -
    input:
      bytes: [ 0x23,0x95,0x1f,0x6c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stnp d3, d5, [x9, #504]"

  -
    input:
      bytes: [ 0x47,0x2d,0x20,0x6c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stnp d7, d11, [x10, #-512]"

  -
    input:
      bytes: [ 0xc2,0x8f,0x7f,0x6c ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp d2, d3, [x30, #-8]"

  -
    input:
      bytes: [ 0xe3,0x17,0x00,0xac ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stnp q3, q5, [sp]"

  -
    input:
      bytes: [ 0xf1,0xcf,0x1f,0xac ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "stnp q17, q19, [sp, #1008]"

  -
    input:
      bytes: [ 0x37,0x74,0x60,0xac ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ldnp q23, q29, [x1, #-1024]"

  -
    input:
      bytes: [ 0x23,0x3d,0x10,0x32 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr w3, w9, #0xffff0000"

  -
    input:
      bytes: [ 0x5f,0x29,0x03,0x32 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr wsp, w10, #0xe00000ff"

  -
    input:
      bytes: [ 0x49,0x25,0x00,0x32 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr w9, w10, #0x3ff"

  -
    input:
      bytes: [ 0xee,0x81,0x01,0x12 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w14, w15, #0x80008000"

  -
    input:
      bytes: [ 0xac,0xad,0x0a,0x12 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w12, w13, #0xffc3ffc3"

  -
    input:
      bytes: [ 0xeb,0x87,0x00,0x12 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w11, wzr, #0x30003"

  -
    input:
      bytes: [ 0xc3,0xc8,0x03,0x52 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor w3, w6, #0xe0e0e0e0"

  -
    input:
      bytes: [ 0xff,0xc7,0x00,0x52 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor wsp, wzr, #0x3030303"

  -
    input:
      bytes: [ 0x30,0xc6,0x01,0x52 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor w16, w17, #0x81818181"

  -
    input:
      bytes: [ 0x5f,0xe6,0x02,0x72 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst w18, #0xcccccccc"

  -
    input:
      bytes: [ 0x93,0xe6,0x00,0x72 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands w19, w20, #0x33333333"

  -
    input:
      bytes: [ 0xd5,0xe6,0x01,0x72 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands w21, w22, #0x99999999"

  -
    input:
      bytes: [ 0x7f,0xf0,0x01,0x72 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst w3, #0xaaaaaaaa"

  -
    input:
      bytes: [ 0xff,0xf3,0x00,0x72 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst wzr, #0x55555555"

  -
    input:
      bytes: [ 0xa3,0x84,0x66,0xd2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor x3, x5, #0xffffffffc000000"

  -
    input:
      bytes: [ 0x49,0xb9,0x40,0x92 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x9, x10, #0x7fffffffffff"

  -
    input:
      bytes: [ 0x8b,0x31,0x41,0xb2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr x11, x12, #0x8000000000000fff"

  -
    input:
      bytes: [ 0x23,0x3d,0x10,0xb2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr x3, x9, #0xffff0000ffff0000"

  -
    input:
      bytes: [ 0x5f,0x29,0x03,0xb2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr sp, x10, #0xe00000ffe00000ff"

  -
    input:
      bytes: [ 0x49,0x25,0x00,0xb2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr x9, x10, #0x3ff000003ff"

  -
    input:
      bytes: [ 0xee,0x81,0x01,0x92 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x14, x15, #0x8000800080008000"

  -
    input:
      bytes: [ 0xac,0xad,0x0a,0x92 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x12, x13, #0xffc3ffc3ffc3ffc3"

  -
    input:
      bytes: [ 0xeb,0x87,0x00,0x92 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x11, xzr, #0x3000300030003"

  -
    input:
      bytes: [ 0xc3,0xc8,0x03,0xd2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor x3, x6, #0xe0e0e0e0e0e0e0e0"

  -
    input:
      bytes: [ 0xff,0xc7,0x00,0xd2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor sp, xzr, #0x303030303030303"

  -
    input:
      bytes: [ 0x30,0xc6,0x01,0xd2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor x16, x17, #0x8181818181818181"

  -
    input:
      bytes: [ 0x5f,0xe6,0x02,0xf2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst x18, #0xcccccccccccccccc"

  -
    input:
      bytes: [ 0x93,0xe6,0x00,0xf2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands x19, x20, #0x3333333333333333"

  -
    input:
      bytes: [ 0xd5,0xe6,0x01,0xf2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands x21, x22, #0x9999999999999999"

  -
    input:
      bytes: [ 0x7f,0xf0,0x01,0xf2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst x3, #0xaaaaaaaaaaaaaaaa"

  -
    input:
      bytes: [ 0xff,0xf3,0x00,0xf2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst xzr, #0x5555555555555555"

  -
    input:
      bytes: [ 0xe3,0x8f,0x00,0x32 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov w3, #983055"

  -
    input:
      bytes: [ 0xea,0xf3,0x01,0xb2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov x10, #-6148914691236517206"

  -
    input:
      bytes: [ 0x62,0x78,0x1e,0x12 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w2, w3, #0xfffffffd"

  -
    input:
      bytes: [ 0x20,0x78,0x1e,0x32 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr w0, w1, #0xfffffffd"

  -
    input:
      bytes: [ 0x30,0x76,0x1d,0x52 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eor w16, w17, #0xfffffff9"

  -
    input:
      bytes: [ 0x93,0x6e,0x1c,0x72 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands w19, w20, #0xfffffff0"

  -
    input:
      bytes: [ 0xec,0x02,0x15,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w12, w23, w21"

  -
    input:
      bytes: [ 0xf0,0x05,0x01,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w16, w15, w1, lsl #1"

  -
    input:
      bytes: [ 0x89,0x7c,0x0a,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w9, w4, w10, lsl #31"

  -
    input:
      bytes: [ 0xc3,0x03,0x0b,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w3, w30, w11"

  -
    input:
      bytes: [ 0xa3,0xfc,0x07,0x8a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x3, x5, x7, lsl #63"

  -
    input:
      bytes: [ 0xc5,0x11,0x93,0x8a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x5, x14, x19, asr #4"

  -
    input:
      bytes: [ 0x23,0x7e,0xd3,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w3, w17, w19, ror #31"

  -
    input:
      bytes: [ 0x40,0x44,0x5f,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w0, w2, wzr, lsr #17"

  -
    input:
      bytes: [ 0xc3,0x03,0x8b,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w3, w30, w11, asr #0"

  -
    input:
      bytes: [ 0x9f,0x00,0x1a,0x8a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and xzr, x4, x26"

  -
    input:
      bytes: [ 0xe3,0x03,0xd4,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and w3, wzr, w20, ror #0"

  -
    input:
      bytes: [ 0x87,0xfe,0x9f,0x8a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "and x7, x20, xzr, asr #63"

  -
    input:
      bytes: [ 0x8d,0xbe,0x2e,0x8a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bic x13, x20, x14, lsl #47"

  -
    input:
      bytes: [ 0xe2,0x00,0x29,0x0a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bic w2, w7, w9"

  -
    input:
      bytes: [ 0xe2,0x7c,0x80,0x2a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr w2, w7, w0, asr #31"

  -
    input:
      bytes: [ 0x28,0x31,0x0a,0xaa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orr x8, x9, x10, lsl #12"

  -
    input:
      bytes: [ 0xa3,0x00,0xa7,0xaa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orn x3, x5, x7, asr #0"

  -
    input:
      bytes: [ 0xa2,0x00,0x3d,0x2a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "orn w2, w5, w29"

  -
    input:
      bytes: [ 0xe7,0x07,0x09,0x6a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands w7, wzr, w9, lsl #1"

  -
    input:
      bytes: [ 0xa3,0xfc,0xd4,0xea ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ands x3, x5, x20, ror #63"

  -
    input:
      bytes: [ 0xa3,0x00,0x27,0x6a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bics w3, w5, w7"

  -
    input:
      bytes: [ 0xe3,0x07,0x23,0xea ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bics x3, xzr, x3, lsl #1"

  -
    input:
      bytes: [ 0x7f,0x7c,0x07,0x6a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst w3, w7, lsl #31"

  -
    input:
      bytes: [ 0x5f,0x00,0x94,0xea ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tst x2, x20, asr #0"

  -
    input:
      bytes: [ 0xe3,0x03,0x06,0xaa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov x3, x6"

  -
    input:
      bytes: [ 0xe3,0x03,0x1f,0xaa ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov x3, xzr"

  -
    input:
      bytes: [ 0xff,0x03,0x02,0x2a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov wzr, w2"

  -
    input:
      bytes: [ 0xe3,0x03,0x05,0x2a ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov w3, w5"

  -
    input:
      bytes: [ 0xe1,0xff,0x9f,0x52 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov w1, #65535"

  -
    input:
      bytes: [ 0x02,0x00,0xa0,0x52 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "movz w2, #0, lsl #16"

  -
    input:
      bytes: [ 0x42,0x9a,0x80,0x12 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov w2, #-1235"

  -
    input:
      bytes: [ 0x42,0x9a,0xc0,0xd2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mov x2, #5299989643264"

  -
    input:
      bytes: [ 0x3f,0x1c,0xe2,0xf2 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "movk xzr, #4321, lsl #48"

  -
    input:
      bytes: [ 0x1e,0x00,0x00,0xb0 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adrp x30, #4096"

  -
    input:
      bytes: [ 0x14,0x00,0x00,0x10 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adr x20, #0"

  -
    input:
      bytes: [ 0xe9,0xff,0xff,0x70 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adr x9, #-1"

  -
    input:
      bytes: [ 0xe5,0xff,0x7f,0x70 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adr x5, #1048575"

  -
    input:
      bytes: [ 0xe9,0xff,0x7f,0x70 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adr x9, #1048575"

  -
    input:
      bytes: [ 0x02,0x00,0x80,0x10 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adr x2, #-1048576"

  -
    input:
      bytes: [ 0xe9,0xff,0x7f,0xf0 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adrp x9, #4294963200"

  -
    input:
      bytes: [ 0x14,0x00,0x80,0x90 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "adrp x20, #-4294967296"

  -
    input:
      bytes: [ 0x1f,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "nop"

  -
    input:
      bytes: [ 0xff,0x2f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "hint #127"

  -
    input:
      bytes: [ 0x1f,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "nop"

  -
    input:
      bytes: [ 0x3f,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "yield"

  -
    input:
      bytes: [ 0x5f,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "wfe"

  -
    input:
      bytes: [ 0x7f,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "wfi"

  -
    input:
      bytes: [ 0x9f,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sev"

  -
    input:
      bytes: [ 0xbf,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sevl"

  -
    input:
      bytes: [ 0xdf,0x20,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dgh"

  -
    input:
      bytes: [ 0x5f,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clrex"

  -
    input:
      bytes: [ 0x5f,0x30,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clrex #0"

  -
    input:
      bytes: [ 0x5f,0x37,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clrex #7"

  -
    input:
      bytes: [ 0x5f,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "clrex"

  -
    input:
      bytes: [ 0x9f,0x30,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ssbb"

  -
    input:
      bytes: [ 0x9f,0x34,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "pssbb"

  -
    input:
      bytes: [ 0x9f,0x3c,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb #12"

  -
    input:
      bytes: [ 0x9f,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb sy"

  -
    input:
      bytes: [ 0x9f,0x31,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb oshld"

  -
    input:
      bytes: [ 0x9f,0x32,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb oshst"

  -
    input:
      bytes: [ 0x9f,0x33,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb osh"

  -
    input:
      bytes: [ 0x9f,0x35,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb nshld"

  -
    input:
      bytes: [ 0x9f,0x36,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb nshst"

  -
    input:
      bytes: [ 0x9f,0x37,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb nsh"

  -
    input:
      bytes: [ 0x9f,0x39,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb ishld"

  -
    input:
      bytes: [ 0x9f,0x3a,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb ishst"

  -
    input:
      bytes: [ 0x9f,0x3b,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb ish"

  -
    input:
      bytes: [ 0x9f,0x3d,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb ld"

  -
    input:
      bytes: [ 0x9f,0x3e,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb st"

  -
    input:
      bytes: [ 0x9f,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dsb sy"

  -
    input:
      bytes: [ 0xbf,0x30,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb #0"

  -
    input:
      bytes: [ 0xbf,0x3c,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb #12"

  -
    input:
      bytes: [ 0xbf,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb sy"

  -
    input:
      bytes: [ 0xbf,0x31,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb oshld"

  -
    input:
      bytes: [ 0xbf,0x32,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb oshst"

  -
    input:
      bytes: [ 0xbf,0x33,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb osh"

  -
    input:
      bytes: [ 0xbf,0x35,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb nshld"

  -
    input:
      bytes: [ 0xbf,0x36,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb nshst"

  -
    input:
      bytes: [ 0xbf,0x37,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb nsh"

  -
    input:
      bytes: [ 0xbf,0x39,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb ishld"

  -
    input:
      bytes: [ 0xbf,0x3a,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb ishst"

  -
    input:
      bytes: [ 0xbf,0x3b,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb ish"

  -
    input:
      bytes: [ 0xbf,0x3d,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb ld"

  -
    input:
      bytes: [ 0xbf,0x3e,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb st"

  -
    input:
      bytes: [ 0xbf,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dmb sy"

  -
    input:
      bytes: [ 0xdf,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "isb"

  -
    input:
      bytes: [ 0xdf,0x3f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "isb"

  -
    input:
      bytes: [ 0xdf,0x3c,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "isb #12"

  -
    input:
      bytes: [ 0xbf,0x40,0x00,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSel, #0"

  -
    input:
      bytes: [ 0xdf,0x4f,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DAIFSet, #15"

  -
    input:
      bytes: [ 0xff,0x4c,0x03,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DAIFClr, #12"

  -
    input:
      bytes: [ 0xe5,0x59,0x0f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sys #7, c5, c9, #7, x5"

  -
    input:
      bytes: [ 0x5f,0xff,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sys #0, c15, c15, #2"

  -
    input:
      bytes: [ 0xe9,0x59,0x2f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sysl x9, #7, c5, c9, #7"

  -
    input:
      bytes: [ 0x41,0xff,0x28,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "sysl x1, #0, c15, c15, #2"

  -
    input:
      bytes: [ 0x1f,0x71,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ic ialluis"

  -
    input:
      bytes: [ 0x1f,0x75,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ic iallu"

  -
    input:
      bytes: [ 0x29,0x75,0x0b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ic ivau, x9"

  -
    input:
      bytes: [ 0x2c,0x74,0x0b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc zva, x12"

  -
    input:
      bytes: [ 0x3f,0x76,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc ivac, xzr"

  -
    input:
      bytes: [ 0x42,0x76,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc isw, x2"

  -
    input:
      bytes: [ 0x29,0x7a,0x0b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc cvac, x9"

  -
    input:
      bytes: [ 0x4a,0x7a,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc csw, x10"

  -
    input:
      bytes: [ 0x20,0x7b,0x0b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc cvau, x0"

  -
    input:
      bytes: [ 0x23,0x7e,0x0b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc civac, x3"

  -
    input:
      bytes: [ 0x5e,0x7e,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "dc cisw, x30"

  -
    input:
      bytes: [ 0x13,0x78,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e1r, x19"

  -
    input:
      bytes: [ 0x13,0x78,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e2r, x19"

  -
    input:
      bytes: [ 0x13,0x78,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e3r, x19"

  -
    input:
      bytes: [ 0x33,0x78,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e1w, x19"

  -
    input:
      bytes: [ 0x33,0x78,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e2w, x19"

  -
    input:
      bytes: [ 0x33,0x78,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e3w, x19"

  -
    input:
      bytes: [ 0x53,0x78,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e0r, x19"

  -
    input:
      bytes: [ 0x73,0x78,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s1e0w, x19"

  -
    input:
      bytes: [ 0x94,0x78,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s12e1r, x20"

  -
    input:
      bytes: [ 0xb4,0x78,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s12e1w, x20"

  -
    input:
      bytes: [ 0xd4,0x78,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s12e0r, x20"

  -
    input:
      bytes: [ 0xf4,0x78,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "at s12e0w, x20"

  -
    input:
      bytes: [ 0x24,0x80,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi ipas2e1is, x4"

  -
    input:
      bytes: [ 0xa9,0x80,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi ipas2le1is, x9"

  -
    input:
      bytes: [ 0x1f,0x83,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vmalle1is"

  -
    input:
      bytes: [ 0x1f,0x83,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi alle2is"

  -
    input:
      bytes: [ 0x1f,0x83,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi alle3is"

  -
    input:
      bytes: [ 0x21,0x83,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vae1is, x1"

  -
    input:
      bytes: [ 0x22,0x83,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vae2is, x2"

  -
    input:
      bytes: [ 0x23,0x83,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vae3is, x3"

  -
    input:
      bytes: [ 0x45,0x83,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi aside1is, x5"

  -
    input:
      bytes: [ 0x69,0x83,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vaae1is, x9"

  -
    input:
      bytes: [ 0x9f,0x83,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi alle1is"

  -
    input:
      bytes: [ 0xaa,0x83,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vale1is, x10"

  -
    input:
      bytes: [ 0xab,0x83,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vale2is, x11"

  -
    input:
      bytes: [ 0xad,0x83,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vale3is, x13"

  -
    input:
      bytes: [ 0xdf,0x83,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vmalls12e1is"

  -
    input:
      bytes: [ 0xee,0x83,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vaale1is, x14"

  -
    input:
      bytes: [ 0x2f,0x84,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi ipas2e1, x15"

  -
    input:
      bytes: [ 0xb0,0x84,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi ipas2le1, x16"

  -
    input:
      bytes: [ 0x1f,0x87,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vmalle1"

  -
    input:
      bytes: [ 0x1f,0x87,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi alle2"

  -
    input:
      bytes: [ 0x1f,0x87,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi alle3"

  -
    input:
      bytes: [ 0x31,0x87,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vae1, x17"

  -
    input:
      bytes: [ 0x32,0x87,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vae2, x18"

  -
    input:
      bytes: [ 0x33,0x87,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vae3, x19"

  -
    input:
      bytes: [ 0x54,0x87,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi aside1, x20"

  -
    input:
      bytes: [ 0x75,0x87,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vaae1, x21"

  -
    input:
      bytes: [ 0x9f,0x87,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi alle1"

  -
    input:
      bytes: [ 0xb6,0x87,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vale1, x22"

  -
    input:
      bytes: [ 0xb7,0x87,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vale2, x23"

  -
    input:
      bytes: [ 0xb8,0x87,0x0e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vale3, x24"

  -
    input:
      bytes: [ 0xdf,0x87,0x0c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vmalls12e1"

  -
    input:
      bytes: [ 0xf9,0x87,0x08,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "tlbi vaale1, x25"

  -
    input:
      bytes: [ 0x0c,0x00,0x12,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TEECR32_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0x00,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr OSDTRRX_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x02,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MDCCINT_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0x02,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MDSCR_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0x03,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr OSDTRTX_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x04,0x13,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGDTR_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0x05,0x13,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGDTRTX_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0x06,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr OSECCR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x07,0x14,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGVCR32_EL2, x12"

  -
    input:
      bytes: [ 0x8c,0x00,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR0_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x01,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR1_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x02,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR2_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x03,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR3_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x04,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR4_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x05,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR5_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x06,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR6_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x07,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR7_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x08,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR8_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x09,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR9_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x0a,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR10_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x0b,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR11_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x0c,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR12_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x0d,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR13_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x0e,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR14_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x0f,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBVR15_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x00,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR0_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x01,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR1_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x02,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR2_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x03,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR3_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x04,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR4_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x05,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR5_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x06,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR6_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x07,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR7_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x08,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR8_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x09,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR9_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x0a,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR10_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x0b,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR11_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x0c,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR12_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x0d,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR13_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x0e,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR14_EL1, x12"

  -
    input:
      bytes: [ 0xac,0x0f,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGBCR15_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x00,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR0_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x01,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR1_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x02,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR2_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x03,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR3_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x04,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR4_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x05,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR5_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x06,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR6_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x07,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR7_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x08,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR8_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x09,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR9_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x0a,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR10_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x0b,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR11_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x0c,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR12_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x0d,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR13_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x0e,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR14_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x0f,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWVR15_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x00,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR0_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x01,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR1_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x02,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR2_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x03,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR3_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x04,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR4_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x05,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR5_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x06,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR6_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x07,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR7_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x08,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR8_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x09,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR9_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x0a,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR10_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x0b,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR11_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x0c,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR12_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x0d,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR13_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x0e,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR14_EL1, x12"

  -
    input:
      bytes: [ 0xec,0x0f,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGWCR15_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x10,0x12,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TEEHBR32_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x10,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr OSLAR_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x13,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr OSDLR_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0x14,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGPRCR_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x78,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGCLAIMSET_EL1, x12"

  -
    input:
      bytes: [ 0xcc,0x79,0x10,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DBGCLAIMCLR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x00,0x1a,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CSSELR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x00,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VPIDR_EL2, x12"

  -
    input:
      bytes: [ 0xac,0x00,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VMPIDR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x10,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x10,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x10,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0x10,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ACTLR_EL1, x12"

  -
    input:
      bytes: [ 0x2c,0x10,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ACTLR_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0x10,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ACTLR_EL3, x12"

  -
    input:
      bytes: [ 0x4c,0x10,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CPACR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x11,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr HCR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x11,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCR_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0x11,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MDCR_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0x11,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SDER32_EL3, x12"

  -
    input:
      bytes: [ 0x4c,0x11,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CPTR_EL2, x12"

  -
    input:
      bytes: [ 0x4c,0x11,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CPTR_EL3, x12"

  -
    input:
      bytes: [ 0x6c,0x11,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr HSTR_EL2, x12"

  -
    input:
      bytes: [ 0xec,0x11,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr HACR_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0x13,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MDCR_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0x20,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TTBR0_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x20,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TTBR0_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x20,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TTBR0_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0x20,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TTBR1_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0x20,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TCR_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0x20,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TCR_EL2, x12"

  -
    input:
      bytes: [ 0x4c,0x20,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TCR_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0x21,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VTTBR_EL2, x12"

  -
    input:
      bytes: [ 0x4c,0x21,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VTCR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x30,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DACR32_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x40,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x40,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x40,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0x40,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ELR_EL1, x12"

  -
    input:
      bytes: [ 0x2c,0x40,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ELR_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0x40,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ELR_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0x41,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SP_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0x41,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SP_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x41,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SP_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x42,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSel, x12"

  -
    input:
      bytes: [ 0x0c,0x42,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr NZCV, x12"

  -
    input:
      bytes: [ 0x2c,0x42,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DAIF, x12"

  -
    input:
      bytes: [ 0x0c,0x43,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_irq, x12"

  -
    input:
      bytes: [ 0x2c,0x43,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_abt, x12"

  -
    input:
      bytes: [ 0x4c,0x43,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_und, x12"

  -
    input:
      bytes: [ 0x6c,0x43,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SPSR_fiq, x12"

  -
    input:
      bytes: [ 0x0c,0x44,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr FPCR, x12"

  -
    input:
      bytes: [ 0x2c,0x44,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr FPSR, x12"

  -
    input:
      bytes: [ 0x0c,0x45,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DSPSR_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0x45,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr DLR_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0x50,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr IFSR32_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x51,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AFSR0_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x51,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AFSR0_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x51,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AFSR0_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0x51,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AFSR1_EL1, x12"

  -
    input:
      bytes: [ 0x2c,0x51,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AFSR1_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0x51,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AFSR1_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0x52,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ESR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x52,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ESR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x52,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr ESR_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0x53,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr FPEXC32_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x60,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr FAR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x60,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr FAR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x60,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr FAR_EL3, x12"

  -
    input:
      bytes: [ 0x8c,0x60,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr HPFAR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0x74,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PAR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0x9c,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMCR_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0x9c,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMCNTENSET_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0x9c,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMCNTENCLR_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0x9c,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMOVSCLR_EL0, x12"

  -
    input:
      bytes: [ 0xac,0x9c,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMSELR_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0x9d,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMCCNTR_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0x9d,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMXEVTYPER_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0x9d,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMXEVCNTR_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0x9e,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMUSERENR_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0x9e,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMINTENSET_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0x9e,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMINTENCLR_EL1, x12"

  -
    input:
      bytes: [ 0x6c,0x9e,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMOVSSET_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xa2,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0xa2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0xa2,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0xa3,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0xa3,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0xa3,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR_EL3, x12"

  -
    input:
      bytes: [ 0x0c,0xc0,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VBAR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0xc0,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VBAR_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0xc0,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr VBAR_EL3, x12"

  -
    input:
      bytes: [ 0x4c,0xc0,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr RMR_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0xc0,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr RMR_EL2, x12"

  -
    input:
      bytes: [ 0x4c,0xc0,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr RMR_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0xd0,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CONTEXTIDR_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0xd0,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TPIDR_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xd0,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TPIDR_EL2, x12"

  -
    input:
      bytes: [ 0x4c,0xd0,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TPIDR_EL3, x12"

  -
    input:
      bytes: [ 0x6c,0xd0,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TPIDRRO_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xd0,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TPIDR_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0xe0,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTFRQ_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xe0,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTVOFF_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0xe1,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTKCTL_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0xe1,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTHCTL_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0xe2,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTP_TVAL_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xe2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTHP_TVAL_EL2, x12"

  -
    input:
      bytes: [ 0x0c,0xe2,0x1f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTPS_TVAL_EL1, x12"

  -
    input:
      bytes: [ 0x2c,0xe2,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTP_CTL_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xe2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTHP_CTL_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0xe2,0x1f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTPS_CTL_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0xe2,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTP_CVAL_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xe2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTHP_CVAL_EL2, x12"

  -
    input:
      bytes: [ 0x4c,0xe2,0x1f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTPS_CVAL_EL1, x12"

  -
    input:
      bytes: [ 0x0c,0xe3,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTV_TVAL_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xe3,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTV_CTL_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xe3,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr CNTV_CVAL_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR0_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR1_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR2_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR3_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR4_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR5_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR6_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xe8,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR7_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR8_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR9_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR10_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR11_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR12_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR13_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR14_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xe9,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR15_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR16_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR17_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR18_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR19_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR20_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR21_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR22_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xea,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR23_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR24_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR25_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR26_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR27_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR28_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR29_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xeb,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVCNTR30_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMCCFILTR_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER0_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER1_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER2_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER3_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER4_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER5_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER6_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xec,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER7_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER8_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER9_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER10_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER11_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER12_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER13_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER14_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xed,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER15_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER16_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER17_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER18_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER19_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER20_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER21_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER22_EL0, x12"

  -
    input:
      bytes: [ 0xec,0xee,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER23_EL0, x12"

  -
    input:
      bytes: [ 0x0c,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER24_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER25_EL0, x12"

  -
    input:
      bytes: [ 0x4c,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER26_EL0, x12"

  -
    input:
      bytes: [ 0x6c,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER27_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER28_EL0, x12"

  -
    input:
      bytes: [ 0xac,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER29_EL0, x12"

  -
    input:
      bytes: [ 0xcc,0xef,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PMEVTYPER30_EL0, x12"

  -
    input:
      bytes: [ 0x2c,0xa3,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR2_EL1, x12"

  -
    input:
      bytes: [ 0x2c,0xa3,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR2_EL12, x12"

  -
    input:
      bytes: [ 0x2c,0xa3,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR2_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0xa3,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr AMAIR2_EL3, x12"

  -
    input:
      bytes: [ 0x2c,0xa2,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR2_EL1, x12"

  -
    input:
      bytes: [ 0x2c,0xa2,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR2_EL12, x12"

  -
    input:
      bytes: [ 0x2c,0xa1,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR2_EL2, x12"

  -
    input:
      bytes: [ 0x2c,0xa1,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr MAIR2_EL3, x12"

  -
    input:
      bytes: [ 0x4c,0xa2,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIRE0_EL1, x12"

  -
    input:
      bytes: [ 0x4c,0xa2,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIRE0_EL12, x12"

  -
    input:
      bytes: [ 0x4c,0xa2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIRE0_EL2, x12"

  -
    input:
      bytes: [ 0x6c,0xa2,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIR_EL1, x12"

  -
    input:
      bytes: [ 0x6c,0xa2,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIR_EL12, x12"

  -
    input:
      bytes: [ 0x6c,0xa2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIR_EL2, x12"

  -
    input:
      bytes: [ 0x6c,0xa2,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr PIR_EL3, x12"

  -
    input:
      bytes: [ 0xac,0xa2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr S2PIR_EL2, x12"

  -
    input:
      bytes: [ 0x8c,0xa2,0x1b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr POR_EL0, x12"

  -
    input:
      bytes: [ 0x8c,0xa2,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr POR_EL1, x12"

  -
    input:
      bytes: [ 0x8c,0xa2,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr POR_EL12, x12"

  -
    input:
      bytes: [ 0x8c,0xa2,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr POR_EL2, x12"

  -
    input:
      bytes: [ 0x8c,0xa2,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr POR_EL3, x12"

  -
    input:
      bytes: [ 0xac,0xa2,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr S2POR_EL1, x12"

  -
    input:
      bytes: [ 0x6c,0x10,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR2_EL1, x12"

  -
    input:
      bytes: [ 0x6c,0x10,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR2_EL12, x12"

  -
    input:
      bytes: [ 0x6c,0x10,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR2_EL2, x12"

  -
    input:
      bytes: [ 0x6c,0x10,0x1e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr SCTLR2_EL3, x12"

  -
    input:
      bytes: [ 0x6c,0x20,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TCR2_EL1, x12"

  -
    input:
      bytes: [ 0x6c,0x20,0x1d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TCR2_EL12, x12"

  -
    input:
      bytes: [ 0x6c,0x20,0x1c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr TCR2_EL2, x12"

  -
    input:
      bytes: [ 0x09,0x00,0x32,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TEECR32_EL1"

  -
    input:
      bytes: [ 0x49,0x00,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, OSDTRRX_EL1"

  -
    input:
      bytes: [ 0x09,0x01,0x33,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MDCCSR_EL0"

  -
    input:
      bytes: [ 0x09,0x02,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MDCCINT_EL1"

  -
    input:
      bytes: [ 0x49,0x02,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MDSCR_EL1"

  -
    input:
      bytes: [ 0x49,0x03,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, OSDTRTX_EL1"

  -
    input:
      bytes: [ 0x09,0x04,0x33,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGDTR_EL0"

  -
    input:
      bytes: [ 0x09,0x05,0x33,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGDTRRX_EL0"

  -
    input:
      bytes: [ 0x49,0x06,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, OSECCR_EL1"

  -
    input:
      bytes: [ 0x09,0x07,0x34,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGVCR32_EL2"

  -
    input:
      bytes: [ 0x89,0x00,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR0_EL1"

  -
    input:
      bytes: [ 0x89,0x01,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR1_EL1"

  -
    input:
      bytes: [ 0x89,0x02,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR2_EL1"

  -
    input:
      bytes: [ 0x89,0x03,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR3_EL1"

  -
    input:
      bytes: [ 0x89,0x04,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR4_EL1"

  -
    input:
      bytes: [ 0x89,0x05,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR5_EL1"

  -
    input:
      bytes: [ 0x89,0x06,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR6_EL1"

  -
    input:
      bytes: [ 0x89,0x07,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR7_EL1"

  -
    input:
      bytes: [ 0x89,0x08,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR8_EL1"

  -
    input:
      bytes: [ 0x89,0x09,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR9_EL1"

  -
    input:
      bytes: [ 0x89,0x0a,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR10_EL1"

  -
    input:
      bytes: [ 0x89,0x0b,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR11_EL1"

  -
    input:
      bytes: [ 0x89,0x0c,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR12_EL1"

  -
    input:
      bytes: [ 0x89,0x0d,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR13_EL1"

  -
    input:
      bytes: [ 0x89,0x0e,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR14_EL1"

  -
    input:
      bytes: [ 0x89,0x0f,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBVR15_EL1"

  -
    input:
      bytes: [ 0xa9,0x00,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR0_EL1"

  -
    input:
      bytes: [ 0xa9,0x01,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR1_EL1"

  -
    input:
      bytes: [ 0xa9,0x02,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR2_EL1"

  -
    input:
      bytes: [ 0xa9,0x03,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR3_EL1"

  -
    input:
      bytes: [ 0xa9,0x04,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR4_EL1"

  -
    input:
      bytes: [ 0xa9,0x05,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR5_EL1"

  -
    input:
      bytes: [ 0xa9,0x06,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR6_EL1"

  -
    input:
      bytes: [ 0xa9,0x07,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR7_EL1"

  -
    input:
      bytes: [ 0xa9,0x08,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR8_EL1"

  -
    input:
      bytes: [ 0xa9,0x09,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR9_EL1"

  -
    input:
      bytes: [ 0xa9,0x0a,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR10_EL1"

  -
    input:
      bytes: [ 0xa9,0x0b,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR11_EL1"

  -
    input:
      bytes: [ 0xa9,0x0c,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR12_EL1"

  -
    input:
      bytes: [ 0xa9,0x0d,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR13_EL1"

  -
    input:
      bytes: [ 0xa9,0x0e,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR14_EL1"

  -
    input:
      bytes: [ 0xa9,0x0f,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGBCR15_EL1"

  -
    input:
      bytes: [ 0xc9,0x00,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR0_EL1"

  -
    input:
      bytes: [ 0xc9,0x01,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR1_EL1"

  -
    input:
      bytes: [ 0xc9,0x02,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR2_EL1"

  -
    input:
      bytes: [ 0xc9,0x03,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR3_EL1"

  -
    input:
      bytes: [ 0xc9,0x04,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR4_EL1"

  -
    input:
      bytes: [ 0xc9,0x05,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR5_EL1"

  -
    input:
      bytes: [ 0xc9,0x06,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR6_EL1"

  -
    input:
      bytes: [ 0xc9,0x07,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR7_EL1"

  -
    input:
      bytes: [ 0xc9,0x08,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR8_EL1"

  -
    input:
      bytes: [ 0xc9,0x09,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR9_EL1"

  -
    input:
      bytes: [ 0xc9,0x0a,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR10_EL1"

  -
    input:
      bytes: [ 0xc9,0x0b,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR11_EL1"

  -
    input:
      bytes: [ 0xc9,0x0c,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR12_EL1"

  -
    input:
      bytes: [ 0xc9,0x0d,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR13_EL1"

  -
    input:
      bytes: [ 0xc9,0x0e,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR14_EL1"

  -
    input:
      bytes: [ 0xc9,0x0f,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWVR15_EL1"

  -
    input:
      bytes: [ 0xe9,0x00,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR0_EL1"

  -
    input:
      bytes: [ 0xe9,0x01,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR1_EL1"

  -
    input:
      bytes: [ 0xe9,0x02,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR2_EL1"

  -
    input:
      bytes: [ 0xe9,0x03,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR3_EL1"

  -
    input:
      bytes: [ 0xe9,0x04,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR4_EL1"

  -
    input:
      bytes: [ 0xe9,0x05,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR5_EL1"

  -
    input:
      bytes: [ 0xe9,0x06,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR6_EL1"

  -
    input:
      bytes: [ 0xe9,0x07,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR7_EL1"

  -
    input:
      bytes: [ 0xe9,0x08,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR8_EL1"

  -
    input:
      bytes: [ 0xe9,0x09,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR9_EL1"

  -
    input:
      bytes: [ 0xe9,0x0a,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR10_EL1"

  -
    input:
      bytes: [ 0xe9,0x0b,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR11_EL1"

  -
    input:
      bytes: [ 0xe9,0x0c,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR12_EL1"

  -
    input:
      bytes: [ 0xe9,0x0d,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR13_EL1"

  -
    input:
      bytes: [ 0xe9,0x0e,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR14_EL1"

  -
    input:
      bytes: [ 0xe9,0x0f,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGWCR15_EL1"

  -
    input:
      bytes: [ 0x09,0x10,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MDRAR_EL1"

  -
    input:
      bytes: [ 0x09,0x10,0x32,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TEEHBR32_EL1"

  -
    input:
      bytes: [ 0x89,0x11,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, OSLSR_EL1"

  -
    input:
      bytes: [ 0x89,0x13,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, OSDLR_EL1"

  -
    input:
      bytes: [ 0x89,0x14,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGPRCR_EL1"

  -
    input:
      bytes: [ 0xc9,0x78,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGCLAIMSET_EL1"

  -
    input:
      bytes: [ 0xc9,0x79,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGCLAIMCLR_EL1"

  -
    input:
      bytes: [ 0xc9,0x7e,0x30,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DBGAUTHSTATUS_EL1"

  -
    input:
      bytes: [ 0x09,0x00,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MIDR_EL1"

  -
    input:
      bytes: [ 0x09,0x00,0x39,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CCSIDR_EL1"

  -
    input:
      bytes: [ 0x09,0x00,0x3a,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CSSELR_EL1"

  -
    input:
      bytes: [ 0x09,0x00,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VPIDR_EL2"

  -
    input:
      bytes: [ 0x29,0x00,0x39,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CLIDR_EL1"

  -
    input:
      bytes: [ 0x29,0x00,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CTR_EL0"

  -
    input:
      bytes: [ 0xa9,0x00,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MPIDR_EL1"

  -
    input:
      bytes: [ 0xa9,0x00,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VMPIDR_EL2"

  -
    input:
      bytes: [ 0xc9,0x00,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, REVIDR_EL1"

  -
    input:
      bytes: [ 0xe9,0x00,0x39,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AIDR_EL1"

  -
    input:
      bytes: [ 0xe9,0x00,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DCZID_EL0"

  -
    input:
      bytes: [ 0x09,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_PFR0_EL1"

  -
    input:
      bytes: [ 0x29,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_PFR1_EL1"

  -
    input:
      bytes: [ 0x49,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_DFR0_EL1"

  -
    input:
      bytes: [ 0xa9,0x03,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_DFR1_EL1"

  -
    input:
      bytes: [ 0x69,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AFR0_EL1"

  -
    input:
      bytes: [ 0x89,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_MMFR0_EL1"

  -
    input:
      bytes: [ 0xa9,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_MMFR1_EL1"

  -
    input:
      bytes: [ 0xc9,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_MMFR2_EL1"

  -
    input:
      bytes: [ 0xe9,0x01,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_MMFR3_EL1"

  -
    input:
      bytes: [ 0xc9,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_MMFR4_EL1"

  -
    input:
      bytes: [ 0xc9,0x03,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_MMFR5_EL1"

  -
    input:
      bytes: [ 0x09,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_ISAR0_EL1"

  -
    input:
      bytes: [ 0x29,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_ISAR1_EL1"

  -
    input:
      bytes: [ 0x49,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_ISAR2_EL1"

  -
    input:
      bytes: [ 0x69,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_ISAR3_EL1"

  -
    input:
      bytes: [ 0x89,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_ISAR4_EL1"

  -
    input:
      bytes: [ 0xa9,0x02,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_ISAR5_EL1"

  -
    input:
      bytes: [ 0x09,0x03,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MVFR0_EL1"

  -
    input:
      bytes: [ 0x29,0x03,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MVFR1_EL1"

  -
    input:
      bytes: [ 0x49,0x03,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MVFR2_EL1"

  -
    input:
      bytes: [ 0x09,0x04,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64PFR0_EL1"

  -
    input:
      bytes: [ 0x29,0x04,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64PFR1_EL1"

  -
    input:
      bytes: [ 0x49,0x04,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64PFR2_EL1"

  -
    input:
      bytes: [ 0x09,0x05,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64DFR0_EL1"

  -
    input:
      bytes: [ 0x29,0x05,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64DFR1_EL1"

  -
    input:
      bytes: [ 0x49,0x05,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64DFR2_EL1"

  -
    input:
      bytes: [ 0x89,0x05,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64AFR0_EL1"

  -
    input:
      bytes: [ 0xa9,0x05,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64AFR1_EL1"

  -
    input:
      bytes: [ 0x09,0x06,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64ISAR0_EL1"

  -
    input:
      bytes: [ 0x29,0x06,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64ISAR1_EL1"

  -
    input:
      bytes: [ 0x49,0x06,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64ISAR2_EL1"

  -
    input:
      bytes: [ 0x69,0x06,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64ISAR3_EL1"

  -
    input:
      bytes: [ 0x09,0x07,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64MMFR0_EL1"

  -
    input:
      bytes: [ 0x29,0x07,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64MMFR1_EL1"

  -
    input:
      bytes: [ 0x49,0x07,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64MMFR2_EL1"

  -
    input:
      bytes: [ 0x69,0x07,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64MMFR3_EL1"

  -
    input:
      bytes: [ 0x89,0x07,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ID_AA64MMFR4_EL1"

  -
    input:
      bytes: [ 0x09,0x10,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR_EL1"

  -
    input:
      bytes: [ 0x09,0x10,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR_EL2"

  -
    input:
      bytes: [ 0x09,0x10,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR_EL3"

  -
    input:
      bytes: [ 0x29,0x10,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ACTLR_EL1"

  -
    input:
      bytes: [ 0x29,0x10,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ACTLR_EL2"

  -
    input:
      bytes: [ 0x29,0x10,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ACTLR_EL3"

  -
    input:
      bytes: [ 0x49,0x10,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CPACR_EL1"

  -
    input:
      bytes: [ 0x09,0x11,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, HCR_EL2"

  -
    input:
      bytes: [ 0x09,0x11,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCR_EL3"

  -
    input:
      bytes: [ 0x29,0x11,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MDCR_EL2"

  -
    input:
      bytes: [ 0x29,0x11,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SDER32_EL3"

  -
    input:
      bytes: [ 0x49,0x11,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CPTR_EL2"

  -
    input:
      bytes: [ 0x49,0x11,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CPTR_EL3"

  -
    input:
      bytes: [ 0x69,0x11,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, HSTR_EL2"

  -
    input:
      bytes: [ 0xe9,0x11,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, HACR_EL2"

  -
    input:
      bytes: [ 0x29,0x13,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MDCR_EL3"

  -
    input:
      bytes: [ 0x09,0x20,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TTBR0_EL1"

  -
    input:
      bytes: [ 0x09,0x20,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TTBR0_EL2"

  -
    input:
      bytes: [ 0x09,0x20,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TTBR0_EL3"

  -
    input:
      bytes: [ 0x29,0x20,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TTBR1_EL1"

  -
    input:
      bytes: [ 0x49,0x20,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TCR_EL1"

  -
    input:
      bytes: [ 0x49,0x20,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TCR_EL2"

  -
    input:
      bytes: [ 0x49,0x20,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TCR_EL3"

  -
    input:
      bytes: [ 0x09,0x21,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VTTBR_EL2"

  -
    input:
      bytes: [ 0x49,0x21,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VTCR_EL2"

  -
    input:
      bytes: [ 0x09,0x30,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DACR32_EL2"

  -
    input:
      bytes: [ 0x09,0x40,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_EL1"

  -
    input:
      bytes: [ 0x09,0x40,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_EL2"

  -
    input:
      bytes: [ 0x09,0x40,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_EL3"

  -
    input:
      bytes: [ 0x29,0x40,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ELR_EL1"

  -
    input:
      bytes: [ 0x29,0x40,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ELR_EL2"

  -
    input:
      bytes: [ 0x29,0x40,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ELR_EL3"

  -
    input:
      bytes: [ 0x09,0x41,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SP_EL0"

  -
    input:
      bytes: [ 0x09,0x41,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SP_EL1"

  -
    input:
      bytes: [ 0x09,0x41,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SP_EL2"

  -
    input:
      bytes: [ 0x09,0x42,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSel"

  -
    input:
      bytes: [ 0x09,0x42,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, NZCV"

  -
    input:
      bytes: [ 0x29,0x42,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DAIF"

  -
    input:
      bytes: [ 0x49,0x42,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CurrentEL"

  -
    input:
      bytes: [ 0x09,0x43,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_irq"

  -
    input:
      bytes: [ 0x29,0x43,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_abt"

  -
    input:
      bytes: [ 0x49,0x43,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_und"

  -
    input:
      bytes: [ 0x69,0x43,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SPSR_fiq"

  -
    input:
      bytes: [ 0x09,0x44,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, FPCR"

  -
    input:
      bytes: [ 0x29,0x44,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, FPSR"

  -
    input:
      bytes: [ 0x09,0x45,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DSPSR_EL0"

  -
    input:
      bytes: [ 0x29,0x45,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, DLR_EL0"

  -
    input:
      bytes: [ 0x29,0x50,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, IFSR32_EL2"

  -
    input:
      bytes: [ 0x09,0x51,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AFSR0_EL1"

  -
    input:
      bytes: [ 0x09,0x51,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AFSR0_EL2"

  -
    input:
      bytes: [ 0x09,0x51,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AFSR0_EL3"

  -
    input:
      bytes: [ 0x29,0x51,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AFSR1_EL1"

  -
    input:
      bytes: [ 0x29,0x51,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AFSR1_EL2"

  -
    input:
      bytes: [ 0x29,0x51,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AFSR1_EL3"

  -
    input:
      bytes: [ 0x09,0x52,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ESR_EL1"

  -
    input:
      bytes: [ 0x09,0x52,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ESR_EL2"

  -
    input:
      bytes: [ 0x09,0x52,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ESR_EL3"

  -
    input:
      bytes: [ 0x09,0x53,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, FPEXC32_EL2"

  -
    input:
      bytes: [ 0x09,0x60,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, FAR_EL1"

  -
    input:
      bytes: [ 0x09,0x60,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, FAR_EL2"

  -
    input:
      bytes: [ 0x09,0x60,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, FAR_EL3"

  -
    input:
      bytes: [ 0x89,0x60,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, HPFAR_EL2"

  -
    input:
      bytes: [ 0x09,0x74,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PAR_EL1"

  -
    input:
      bytes: [ 0x09,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCR_EL0"

  -
    input:
      bytes: [ 0x29,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCNTENSET_EL0"

  -
    input:
      bytes: [ 0x49,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCNTENCLR_EL0"

  -
    input:
      bytes: [ 0x69,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMOVSCLR_EL0"

  -
    input:
      bytes: [ 0xa9,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMSELR_EL0"

  -
    input:
      bytes: [ 0xc9,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCEID0_EL0"

  -
    input:
      bytes: [ 0xe9,0x9c,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCEID1_EL0"

  -
    input:
      bytes: [ 0x09,0x9d,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCCNTR_EL0"

  -
    input:
      bytes: [ 0x29,0x9d,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMXEVTYPER_EL0"

  -
    input:
      bytes: [ 0x49,0x9d,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMXEVCNTR_EL0"

  -
    input:
      bytes: [ 0x09,0x9e,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMUSERENR_EL0"

  -
    input:
      bytes: [ 0x29,0x9e,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMINTENSET_EL1"

  -
    input:
      bytes: [ 0x49,0x9e,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMINTENCLR_EL1"

  -
    input:
      bytes: [ 0x69,0x9e,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMOVSSET_EL0"

  -
    input:
      bytes: [ 0xc9,0x9e,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMMIR_EL1"

  -
    input:
      bytes: [ 0x09,0xa2,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR_EL1"

  -
    input:
      bytes: [ 0x09,0xa2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR_EL2"

  -
    input:
      bytes: [ 0x09,0xa2,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR_EL3"

  -
    input:
      bytes: [ 0x09,0xa3,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR_EL1"

  -
    input:
      bytes: [ 0x09,0xa3,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR_EL2"

  -
    input:
      bytes: [ 0x09,0xa3,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR_EL3"

  -
    input:
      bytes: [ 0x09,0xc0,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VBAR_EL1"

  -
    input:
      bytes: [ 0x09,0xc0,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VBAR_EL2"

  -
    input:
      bytes: [ 0x09,0xc0,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, VBAR_EL3"

  -
    input:
      bytes: [ 0x29,0xc0,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, RVBAR_EL1"

  -
    input:
      bytes: [ 0x29,0xc0,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, RVBAR_EL2"

  -
    input:
      bytes: [ 0x29,0xc0,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, RVBAR_EL3"

  -
    input:
      bytes: [ 0x49,0xc0,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, RMR_EL1"

  -
    input:
      bytes: [ 0x49,0xc0,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, RMR_EL2"

  -
    input:
      bytes: [ 0x49,0xc0,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, RMR_EL3"

  -
    input:
      bytes: [ 0x09,0xc1,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, ISR_EL1"

  -
    input:
      bytes: [ 0x29,0xd0,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CONTEXTIDR_EL1"

  -
    input:
      bytes: [ 0x49,0xd0,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TPIDR_EL0"

  -
    input:
      bytes: [ 0x49,0xd0,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TPIDR_EL2"

  -
    input:
      bytes: [ 0x49,0xd0,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TPIDR_EL3"

  -
    input:
      bytes: [ 0x69,0xd0,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TPIDRRO_EL0"

  -
    input:
      bytes: [ 0x89,0xd0,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TPIDR_EL1"

  -
    input:
      bytes: [ 0x09,0xe0,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTFRQ_EL0"

  -
    input:
      bytes: [ 0x29,0xe0,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTPCT_EL0"

  -
    input:
      bytes: [ 0x49,0xe0,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTVCT_EL0"

  -
    input:
      bytes: [ 0x69,0xe0,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTVOFF_EL2"

  -
    input:
      bytes: [ 0x09,0xe1,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTKCTL_EL1"

  -
    input:
      bytes: [ 0x09,0xe1,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTHCTL_EL2"

  -
    input:
      bytes: [ 0x09,0xe2,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTP_TVAL_EL0"

  -
    input:
      bytes: [ 0x09,0xe2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTHP_TVAL_EL2"

  -
    input:
      bytes: [ 0x09,0xe2,0x3f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTPS_TVAL_EL1"

  -
    input:
      bytes: [ 0x29,0xe2,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTP_CTL_EL0"

  -
    input:
      bytes: [ 0x29,0xe2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTHP_CTL_EL2"

  -
    input:
      bytes: [ 0x29,0xe2,0x3f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTPS_CTL_EL1"

  -
    input:
      bytes: [ 0x49,0xe2,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTP_CVAL_EL0"

  -
    input:
      bytes: [ 0x49,0xe2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTHP_CVAL_EL2"

  -
    input:
      bytes: [ 0x49,0xe2,0x3f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTPS_CVAL_EL1"

  -
    input:
      bytes: [ 0x09,0xe3,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTV_TVAL_EL0"

  -
    input:
      bytes: [ 0x29,0xe3,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTV_CTL_EL0"

  -
    input:
      bytes: [ 0x49,0xe3,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, CNTV_CVAL_EL0"

  -
    input:
      bytes: [ 0x09,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR0_EL0"

  -
    input:
      bytes: [ 0x29,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR1_EL0"

  -
    input:
      bytes: [ 0x49,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR2_EL0"

  -
    input:
      bytes: [ 0x69,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR3_EL0"

  -
    input:
      bytes: [ 0x89,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR4_EL0"

  -
    input:
      bytes: [ 0xa9,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR5_EL0"

  -
    input:
      bytes: [ 0xc9,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR6_EL0"

  -
    input:
      bytes: [ 0xe9,0xe8,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR7_EL0"

  -
    input:
      bytes: [ 0x09,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR8_EL0"

  -
    input:
      bytes: [ 0x29,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR9_EL0"

  -
    input:
      bytes: [ 0x49,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR10_EL0"

  -
    input:
      bytes: [ 0x69,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR11_EL0"

  -
    input:
      bytes: [ 0x89,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR12_EL0"

  -
    input:
      bytes: [ 0xa9,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR13_EL0"

  -
    input:
      bytes: [ 0xc9,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR14_EL0"

  -
    input:
      bytes: [ 0xe9,0xe9,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR15_EL0"

  -
    input:
      bytes: [ 0x09,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR16_EL0"

  -
    input:
      bytes: [ 0x29,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR17_EL0"

  -
    input:
      bytes: [ 0x49,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR18_EL0"

  -
    input:
      bytes: [ 0x69,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR19_EL0"

  -
    input:
      bytes: [ 0x89,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR20_EL0"

  -
    input:
      bytes: [ 0xa9,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR21_EL0"

  -
    input:
      bytes: [ 0xc9,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR22_EL0"

  -
    input:
      bytes: [ 0xe9,0xea,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR23_EL0"

  -
    input:
      bytes: [ 0x09,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR24_EL0"

  -
    input:
      bytes: [ 0x29,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR25_EL0"

  -
    input:
      bytes: [ 0x49,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR26_EL0"

  -
    input:
      bytes: [ 0x69,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR27_EL0"

  -
    input:
      bytes: [ 0x89,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR28_EL0"

  -
    input:
      bytes: [ 0xa9,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR29_EL0"

  -
    input:
      bytes: [ 0xc9,0xeb,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVCNTR30_EL0"

  -
    input:
      bytes: [ 0xe9,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMCCFILTR_EL0"

  -
    input:
      bytes: [ 0x09,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER0_EL0"

  -
    input:
      bytes: [ 0x29,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER1_EL0"

  -
    input:
      bytes: [ 0x49,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER2_EL0"

  -
    input:
      bytes: [ 0x69,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER3_EL0"

  -
    input:
      bytes: [ 0x89,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER4_EL0"

  -
    input:
      bytes: [ 0xa9,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER5_EL0"

  -
    input:
      bytes: [ 0xc9,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER6_EL0"

  -
    input:
      bytes: [ 0xe9,0xec,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER7_EL0"

  -
    input:
      bytes: [ 0x09,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER8_EL0"

  -
    input:
      bytes: [ 0x29,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER9_EL0"

  -
    input:
      bytes: [ 0x49,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER10_EL0"

  -
    input:
      bytes: [ 0x69,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER11_EL0"

  -
    input:
      bytes: [ 0x89,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER12_EL0"

  -
    input:
      bytes: [ 0xa9,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER13_EL0"

  -
    input:
      bytes: [ 0xc9,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER14_EL0"

  -
    input:
      bytes: [ 0xe9,0xed,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER15_EL0"

  -
    input:
      bytes: [ 0x09,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER16_EL0"

  -
    input:
      bytes: [ 0x29,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER17_EL0"

  -
    input:
      bytes: [ 0x49,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER18_EL0"

  -
    input:
      bytes: [ 0x69,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER19_EL0"

  -
    input:
      bytes: [ 0x89,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER20_EL0"

  -
    input:
      bytes: [ 0xa9,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER21_EL0"

  -
    input:
      bytes: [ 0xc9,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER22_EL0"

  -
    input:
      bytes: [ 0xe9,0xee,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER23_EL0"

  -
    input:
      bytes: [ 0x09,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER24_EL0"

  -
    input:
      bytes: [ 0x29,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER25_EL0"

  -
    input:
      bytes: [ 0x49,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER26_EL0"

  -
    input:
      bytes: [ 0x69,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER27_EL0"

  -
    input:
      bytes: [ 0x89,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER28_EL0"

  -
    input:
      bytes: [ 0xa9,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER29_EL0"

  -
    input:
      bytes: [ 0xc9,0xef,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PMEVTYPER30_EL0"

  -
    input:
      bytes: [ 0x29,0xa3,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR2_EL1"

  -
    input:
      bytes: [ 0x29,0xa3,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR2_EL12"

  -
    input:
      bytes: [ 0x29,0xa3,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR2_EL2"

  -
    input:
      bytes: [ 0x29,0xa3,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, AMAIR2_EL3"

  -
    input:
      bytes: [ 0x29,0xa2,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR2_EL1"

  -
    input:
      bytes: [ 0x29,0xa2,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR2_EL12"

  -
    input:
      bytes: [ 0x29,0xa1,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR2_EL2"

  -
    input:
      bytes: [ 0x29,0xa1,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, MAIR2_EL3"

  -
    input:
      bytes: [ 0x49,0xa2,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIRE0_EL1"

  -
    input:
      bytes: [ 0x49,0xa2,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIRE0_EL12"

  -
    input:
      bytes: [ 0x49,0xa2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIRE0_EL2"

  -
    input:
      bytes: [ 0x69,0xa2,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIR_EL1"

  -
    input:
      bytes: [ 0x69,0xa2,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIR_EL12"

  -
    input:
      bytes: [ 0x69,0xa2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIR_EL2"

  -
    input:
      bytes: [ 0x69,0xa2,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, PIR_EL3"

  -
    input:
      bytes: [ 0xa9,0xa2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, S2PIR_EL2"

  -
    input:
      bytes: [ 0x89,0xa2,0x3b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, POR_EL0"

  -
    input:
      bytes: [ 0x89,0xa2,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, POR_EL1"

  -
    input:
      bytes: [ 0x89,0xa2,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, POR_EL12"

  -
    input:
      bytes: [ 0x89,0xa2,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, POR_EL2"

  -
    input:
      bytes: [ 0x89,0xa2,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, POR_EL3"

  -
    input:
      bytes: [ 0xa9,0xa2,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, S2POR_EL1"

  -
    input:
      bytes: [ 0x69,0x10,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR2_EL1"

  -
    input:
      bytes: [ 0x69,0x10,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR2_EL12"

  -
    input:
      bytes: [ 0x69,0x10,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR2_EL2"

  -
    input:
      bytes: [ 0x69,0x10,0x3e,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, SCTLR2_EL3"

  -
    input:
      bytes: [ 0x69,0x20,0x38,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TCR2_EL1"

  -
    input:
      bytes: [ 0x69,0x20,0x3d,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TCR2_EL12"

  -
    input:
      bytes: [ 0x69,0x20,0x3c,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x9, TCR2_EL2"

  -
    input:
      bytes: [ 0xac,0xf1,0x3f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x12, S3_7_C15_C1_5"

  -
    input:
      bytes: [ 0xed,0xbf,0x3a,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x13, S3_2_C11_C15_7"

  -
    input:
      bytes: [ 0x2e,0x92,0x2b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "mrs x14, S1_3_C9_C2_1"

  -
    input:
      bytes: [ 0x0c,0xf0,0x18,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr S3_0_C15_C0_0, x12"

  -
    input:
      bytes: [ 0xe5,0xbd,0x1f,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr S3_7_C11_C13_7, x5"

  -
    input:
      bytes: [ 0x24,0x92,0x0b,0xd5 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "msr S1_3_C9_C2_1, x4"

  -
    input:
      bytes: [ 0x01,0x00,0x00,0x14 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "b #4"

  -
    input:
      bytes: [ 0x00,0x00,0x00,0x94 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bl #0"

  -
    input:
      bytes: [ 0xff,0xff,0xff,0x15 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "b #134217724"

  -
    input:
      bytes: [ 0x00,0x00,0x00,0x96 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "bl #-134217728"

  -
    input:
      bytes: [ 0x80,0x02,0x1f,0xd6 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "br x20"

  -
    input:
      bytes: [ 0xe0,0x03,0x3f,0xd6 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "blr xzr"

  -
    input:
      bytes: [ 0x40,0x01,0x5f,0xd6 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ret x10"

  -
    input:
      bytes: [ 0xc0,0x03,0x5f,0xd6 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "ret"

  -
    input:
      bytes: [ 0xe0,0x03,0x9f,0xd6 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "eret"

  -
    input:
      bytes: [ 0xe0,0x03,0xbf,0xd6 ]
      arch: "AArch64"
      options: [ "aarch64-none-linux-gnu", "v8a", "+fp-armv8" ]
    expected:
      insns:
        -
          asm_text: "drps"
