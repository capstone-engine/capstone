test_cases:
  -
    input:
      bytes: [ 0x00, 0x00, 0xc0, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za0.d, p0/m, p0/m, z0.d, z0.d"

  -
    input:
      bytes: [ 0x45, 0x55, 0xd5, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za5.d, p5/m, p2/m, z10.d, z21.d"

  -
    input:
      bytes: [ 0xa7, 0xed, 0xc8, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za7.d, p3/m, p7/m, z13.d, z8.d"

  -
    input:
      bytes: [ 0xe7, 0xff, 0xdf, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za7.d, p7/m, p7/m, z31.d, z31.d"

  -
    input:
      bytes: [ 0x25, 0x0e, 0xd0, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za5.d, p3/m, p0/m, z17.d, z16.d"

  -
    input:
      bytes: [ 0x21, 0x84, 0xde, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za1.d, p1/m, p4/m, z1.d, z30.d"

  -
    input:
      bytes: [ 0x60, 0x56, 0xd4, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za0.d, p5/m, p2/m, z19.d, z20.d"

  -
    input:
      bytes: [ 0x80, 0x19, 0xc2, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za0.d, p6/m, p0/m, z12.d, z2.d"

  -
    input:
      bytes: [ 0x21, 0xc8, 0xda, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za1.d, p2/m, p6/m, z1.d, z26.d"

  -
    input:
      bytes: [ 0xc5, 0x0a, 0xde, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za5.d, p2/m, p0/m, z22.d, z30.d"

  -
    input:
      bytes: [ 0x22, 0xf5, 0xc1, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za2.d, p5/m, p7/m, z9.d, z1.d"

  -
    input:
      bytes: [ 0x87, 0xa9, 0xcb, 0x80 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-f64f64" ]
    expected:
      insns:
        -
          asm_text: "fmopa za7.d, p2/m, p5/m, z12.d, z11.d"
