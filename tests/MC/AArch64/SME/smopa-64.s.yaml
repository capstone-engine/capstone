test_cases:
  -
    input:
      bytes: [ 0x00, 0x00, 0xc0, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za0.d, p0/m, p0/m, z0.h, z0.h"

  -
    input:
      bytes: [ 0x45, 0x55, 0xd5, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za5.d, p5/m, p2/m, z10.h, z21.h"

  -
    input:
      bytes: [ 0xa7, 0xed, 0xc8, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za7.d, p3/m, p7/m, z13.h, z8.h"

  -
    input:
      bytes: [ 0xe7, 0xff, 0xdf, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za7.d, p7/m, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0x25, 0x0e, 0xd0, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za5.d, p3/m, p0/m, z17.h, z16.h"

  -
    input:
      bytes: [ 0x21, 0x84, 0xde, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za1.d, p1/m, p4/m, z1.h, z30.h"

  -
    input:
      bytes: [ 0x60, 0x56, 0xd4, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za0.d, p5/m, p2/m, z19.h, z20.h"

  -
    input:
      bytes: [ 0x80, 0x19, 0xc2, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za0.d, p6/m, p0/m, z12.h, z2.h"

  -
    input:
      bytes: [ 0x21, 0xc8, 0xda, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za1.d, p2/m, p6/m, z1.h, z26.h"

  -
    input:
      bytes: [ 0xc5, 0x0a, 0xde, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za5.d, p2/m, p0/m, z22.h, z30.h"

  -
    input:
      bytes: [ 0x22, 0xf5, 0xc1, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za2.d, p5/m, p7/m, z9.h, z1.h"

  -
    input:
      bytes: [ 0x87, 0xa9, 0xcb, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smopa za7.d, p2/m, p5/m, z12.h, z11.h"
