test_cases:
  -
    input:
      bytes: [ 0x10, 0x00, 0xc0, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za0.d, p0/m, p0/m, z0.h, z0.h"

  -
    input:
      bytes: [ 0x55, 0x55, 0xd5, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za5.d, p5/m, p2/m, z10.h, z21.h"

  -
    input:
      bytes: [ 0xb7, 0xed, 0xc8, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za7.d, p3/m, p7/m, z13.h, z8.h"

  -
    input:
      bytes: [ 0xf7, 0xff, 0xdf, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za7.d, p7/m, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0x35, 0x0e, 0xd0, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za5.d, p3/m, p0/m, z17.h, z16.h"

  -
    input:
      bytes: [ 0x31, 0x84, 0xde, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za1.d, p1/m, p4/m, z1.h, z30.h"

  -
    input:
      bytes: [ 0x70, 0x56, 0xd4, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za0.d, p5/m, p2/m, z19.h, z20.h"

  -
    input:
      bytes: [ 0x90, 0x19, 0xc2, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za0.d, p6/m, p0/m, z12.h, z2.h"

  -
    input:
      bytes: [ 0x31, 0xc8, 0xda, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za1.d, p2/m, p6/m, z1.h, z26.h"

  -
    input:
      bytes: [ 0xd5, 0x0a, 0xde, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za5.d, p2/m, p0/m, z22.h, z30.h"

  -
    input:
      bytes: [ 0x32, 0xf5, 0xc1, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za2.d, p5/m, p7/m, z9.h, z1.h"

  -
    input:
      bytes: [ 0x97, 0xa9, 0xcb, 0xa0 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme-i16i64" ]
    expected:
      insns:
        -
          asm_text: "smops za7.d, p2/m, p5/m, z12.h, z11.h"
