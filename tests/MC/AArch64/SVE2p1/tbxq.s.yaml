test_cases:
  -
    input:
      bytes: [ 0x00, 0x34, 0x60, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.h, z0.h, z0.h"

  -
    input:
      bytes: [ 0x55, 0x35, 0x75, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.h, z10.h, z21.h"

  -
    input:
      bytes: [ 0xb7, 0x35, 0x68, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.h, z13.h, z8.h"

  -
    input:
      bytes: [ 0xff, 0x37, 0x7f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.h, z31.h, z31.h"

  -
    input:
      bytes: [ 0x00, 0x34, 0xa0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.s, z0.s, z0.s"

  -
    input:
      bytes: [ 0x55, 0x35, 0xb5, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.s, z10.s, z21.s"

  -
    input:
      bytes: [ 0xb7, 0x35, 0xa8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.s, z13.s, z8.s"

  -
    input:
      bytes: [ 0xff, 0x37, 0xbf, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.s, z31.s, z31.s"

  -
    input:
      bytes: [ 0x00, 0x34, 0xe0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0x55, 0x35, 0xf5, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.d, z10.d, z21.d"

  -
    input:
      bytes: [ 0xb7, 0x35, 0xe8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.d, z13.d, z8.d"

  -
    input:
      bytes: [ 0xff, 0x37, 0xff, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.d, z31.d, z31.d"

  -
    input:
      bytes: [ 0x00, 0x34, 0x20, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.b, z0.b, z0.b"

  -
    input:
      bytes: [ 0x55, 0x35, 0x35, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.b, z10.b, z21.b"

  -
    input:
      bytes: [ 0xb7, 0x35, 0x28, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.b, z13.b, z8.b"

  -
    input:
      bytes: [ 0xff, 0x37, 0x3f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.b, z31.b, z31.b"

  -
    input:
      bytes: [ 0x00, 0x34, 0x60, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.h, z0.h, z0.h"

  -
    input:
      bytes: [ 0x55, 0x35, 0x75, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.h, z10.h, z21.h"

  -
    input:
      bytes: [ 0xb7, 0x35, 0x68, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.h, z13.h, z8.h"

  -
    input:
      bytes: [ 0xff, 0x37, 0x7f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.h, z31.h, z31.h"

  -
    input:
      bytes: [ 0x00, 0x34, 0xa0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.s, z0.s, z0.s"

  -
    input:
      bytes: [ 0x55, 0x35, 0xb5, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.s, z10.s, z21.s"

  -
    input:
      bytes: [ 0xb7, 0x35, 0xa8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.s, z13.s, z8.s"

  -
    input:
      bytes: [ 0xff, 0x37, 0xbf, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.s, z31.s, z31.s"

  -
    input:
      bytes: [ 0x00, 0x34, 0xe0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0x55, 0x35, 0xf5, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.d, z10.d, z21.d"

  -
    input:
      bytes: [ 0xb7, 0x35, 0xe8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.d, z13.d, z8.d"

  -
    input:
      bytes: [ 0xff, 0x37, 0xff, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.d, z31.d, z31.d"

  -
    input:
      bytes: [ 0x00, 0x34, 0x20, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z0.b, z0.b, z0.b"

  -
    input:
      bytes: [ 0x55, 0x35, 0x35, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z21.b, z10.b, z21.b"

  -
    input:
      bytes: [ 0xb7, 0x35, 0x28, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z23.b, z13.b, z8.b"

  -
    input:
      bytes: [ 0xff, 0x37, 0x3f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "tbxq z31.b, z31.b, z31.b"
