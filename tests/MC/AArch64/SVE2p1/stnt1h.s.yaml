test_cases:
  -
    input:
      bytes: [ 0x01,0x20,0x20,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h, z1.h }, pn8, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x55,0x35,0x35,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z20.h, z21.h }, pn13, [x10, x21, lsl #1]"

  -
    input:
      bytes: [ 0xb7,0x2d,0x28,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z22.h, z23.h }, pn11, [x13, x8, lsl #1]"

  -
    input:
      bytes: [ 0xff,0x3f,0x3f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z30.h, z31.h }, pn15, [sp, xzr, lsl #1]"

  -
    input:
      bytes: [ 0x01,0x20,0x60,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h, z1.h }, pn8, [x0]"

  -
    input:
      bytes: [ 0x55,0x35,0x65,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z20.h, z21.h }, pn13, [x10, #10, mul vl]"

  -
    input:
      bytes: [ 0xb7,0x2d,0x68,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z22.h, z23.h }, pn11, [x13, #-16, mul vl]"

  -
    input:
      bytes: [ 0xff,0x3f,0x6f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z30.h, z31.h }, pn15, [sp, #-2, mul vl]"

  -
    input:
      bytes: [ 0x01,0xa0,0x20,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h - z3.h }, pn8, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x55,0xb5,0x35,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z20.h - z23.h }, pn13, [x10, x21, lsl #1]"

  -
    input:
      bytes: [ 0xb5,0xad,0x28,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z20.h - z23.h }, pn11, [x13, x8, lsl #1]"

  -
    input:
      bytes: [ 0xfd,0xbf,0x3f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z28.h - z31.h }, pn15, [sp, xzr, lsl #1]"

  -
    input:
      bytes: [ 0x01,0xa0,0x60,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h - z3.h }, pn8, [x0]"

  -
    input:
      bytes: [ 0x55,0xb5,0x65,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z20.h - z23.h }, pn13, [x10, #20, mul vl]"

  -
    input:
      bytes: [ 0xb5,0xad,0x68,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z20.h - z23.h }, pn11, [x13, #-32, mul vl]"

  -
    input:
      bytes: [ 0xfd,0xbf,0x6f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z28.h - z31.h }, pn15, [sp, #-4, mul vl]"
