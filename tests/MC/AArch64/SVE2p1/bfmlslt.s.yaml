test_cases:
  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0xa5, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z8.h"

  -
    input:
      bytes: [ 0x00, 0xa4, 0xe0, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z0.s, z0.h, z0.h"

  -
    input:
      bytes: [ 0x55, 0xa5, 0xf5, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z21.s, z10.h, z21.h"

  -
    input:
      bytes: [ 0xb7, 0xa5, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z8.h"

  -
    input:
      bytes: [ 0xff, 0xa7, 0xff, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z31.s, z31.h, z31.h"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0x6d, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z0.h[3]"

  -
    input:
      bytes: [ 0x00, 0x64, 0xe0, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z0.s, z0.h, z0.h[0]"

  -
    input:
      bytes: [ 0x55, 0x65, 0xf5, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z21.s, z10.h, z5.h[4]"

  -
    input:
      bytes: [ 0xb7, 0x6d, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z0.h[3]"

  -
    input:
      bytes: [ 0xff, 0x6f, 0xff, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z31.s, z31.h, z7.h[7]"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0xa5, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z8.h"

  -
    input:
      bytes: [ 0x00, 0xa4, 0xe0, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z0.s, z0.h, z0.h"

  -
    input:
      bytes: [ 0x55, 0xa5, 0xf5, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z21.s, z10.h, z21.h"

  -
    input:
      bytes: [ 0xb7, 0xa5, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z8.h"

  -
    input:
      bytes: [ 0xff, 0xa7, 0xff, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z31.s, z31.h, z31.h"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0x6d, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z0.h[3]"

  -
    input:
      bytes: [ 0x00, 0x64, 0xe0, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z0.s, z0.h, z0.h[0]"

  -
    input:
      bytes: [ 0x55, 0x65, 0xf5, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z21.s, z10.h, z5.h[4]"

  -
    input:
      bytes: [ 0xb7, 0x6d, 0xe8, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z23.s, z13.h, z0.h[3]"

  -
    input:
      bytes: [ 0xff, 0x6f, 0xff, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "bfmlslt z31.s, z31.h, z7.h[7]"
