test_cases:
  -
    input:
      bytes: [ 0x00,0x80,0xa0,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z0.q, z1.q }, p0/z, [x0, x0, lsl #4]"

  -
    input:
      bytes: [ 0x55,0x95,0xb5,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z21.q, z22.q }, p5/z, [x10, x21, lsl #4]"

  -
    input:
      bytes: [ 0xb7,0x8d,0xa8,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z23.q, z24.q }, p3/z, [x13, x8, lsl #4]"

  -
    input:
      bytes: [ 0x00,0xe0,0x90,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z0.q, z1.q }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x55,0xf5,0x95,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z21.q, z22.q }, p5/z, [x10, #10, mul vl]"

  -
    input:
      bytes: [ 0xb7,0xed,0x98,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z23.q, z24.q }, p3/z, [x13, #-16, mul vl]"

  -
    input:
      bytes: [ 0xff,0xff,0x9f,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "ld2q { z31.q, z0.q }, p7/z, [sp, #-2, mul vl]"
