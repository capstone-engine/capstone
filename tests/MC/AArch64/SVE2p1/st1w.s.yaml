test_cases:
  -
    input:
      bytes: [ 0x00,0x40,0x20,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z0.s, z1.s }, pn8, [x0, x0, lsl #2]"

  -
    input:
      bytes: [ 0x54,0x55,0x35,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z20.s, z21.s }, pn13, [x10, x21, lsl #2]"

  -
    input:
      bytes: [ 0xb6,0x4d,0x28,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z22.s, z23.s }, pn11, [x13, x8, lsl #2]"

  -
    input:
      bytes: [ 0xfe,0x5f,0x3f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z30.s, z31.s }, pn15, [sp, xzr, lsl #2]"

  -
    input:
      bytes: [ 0x00,0x40,0x60,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z0.s, z1.s }, pn8, [x0]"

  -
    input:
      bytes: [ 0x54,0x55,0x65,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z20.s, z21.s }, pn13, [x10, #10, mul vl]"

  -
    input:
      bytes: [ 0xb6,0x4d,0x68,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z22.s, z23.s }, pn11, [x13, #-16, mul vl]"

  -
    input:
      bytes: [ 0xfe,0x5f,0x6f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z30.s, z31.s }, pn15, [sp, #-2, mul vl]"

  -
    input:
      bytes: [ 0x00,0xc0,0x20,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z0.s - z3.s }, pn8, [x0, x0, lsl #2]"

  -
    input:
      bytes: [ 0x54,0xd5,0x35,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z20.s - z23.s }, pn13, [x10, x21, lsl #2]"

  -
    input:
      bytes: [ 0xb4,0xcd,0x28,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z20.s - z23.s }, pn11, [x13, x8, lsl #2]"

  -
    input:
      bytes: [ 0xfc,0xdf,0x3f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z28.s - z31.s }, pn15, [sp, xzr, lsl #2]"

  -
    input:
      bytes: [ 0x00,0xc0,0x60,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z0.s - z3.s }, pn8, [x0]"

  -
    input:
      bytes: [ 0x54,0xd5,0x65,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z20.s - z23.s }, pn13, [x10, #20, mul vl]"

  -
    input:
      bytes: [ 0xb4,0xcd,0x68,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z20.s - z23.s }, pn11, [x13, #-32, mul vl]"

  -
    input:
      bytes: [ 0xfc,0xdf,0x6f,0xa0 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2p1" ]
    expected:
      insns:
        -
          asm_text: "st1w { z28.s - z31.s }, pn15, [sp, #-4, mul vl]"
