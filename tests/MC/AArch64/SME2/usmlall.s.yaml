test_cases:
  -
    input:
      bytes: [ 0x04,0x04,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3], z0.b, z0.b"

  -
    input:
      bytes: [ 0x45,0x45,0x25,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7], z10.b, z5.b"

  -
    input:
      bytes: [ 0xa7,0x65,0x28,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 12:15], z13.b, z8.b"

  -
    input:
      bytes: [ 0xe7,0x67,0x2f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 12:15], z31.b, z15.b"

  -
    input:
      bytes: [ 0x25,0x06,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7], z17.b, z0.b"

  -
    input:
      bytes: [ 0x25,0x04,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7], z1.b, z14.b"

  -
    input:
      bytes: [ 0x64,0x46,0x24,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3], z19.b, z4.b"

  -
    input:
      bytes: [ 0x84,0x05,0x22,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3], z12.b, z2.b"

  -
    input:
      bytes: [ 0x25,0x44,0x2a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7], z1.b, z10.b"

  -
    input:
      bytes: [ 0xc5,0x06,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7], z22.b, z14.b"

  -
    input:
      bytes: [ 0x26,0x65,0x21,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 8:11], z9.b, z1.b"

  -
    input:
      bytes: [ 0x87,0x25,0x2b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 12:15], z12.b, z11.b"

  -
    input:
      bytes: [ 0x04,0x00,0x00,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3], z0.b, z0.b[0]"

  -
    input:
      bytes: [ 0x45,0x55,0x05,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7], z10.b, z5.b[5]"

  -
    input:
      bytes: [ 0xa7,0xed,0x08,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 12:15], z13.b, z8.b[11]"

  -
    input:
      bytes: [ 0xe7,0xff,0x0f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 12:15], z31.b, z15.b[15]"

  -
    input:
      bytes: [ 0x25,0x0e,0x00,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7], z17.b, z0.b[3]"

  -
    input:
      bytes: [ 0x25,0x84,0x0e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7], z1.b, z14.b[9]"

  -
    input:
      bytes: [ 0x64,0x56,0x04,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3], z19.b, z4.b[5]"

  -
    input:
      bytes: [ 0x84,0x19,0x02,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3], z12.b, z2.b[6]"

  -
    input:
      bytes: [ 0x25,0xc8,0x0a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7], z1.b, z10.b[10]"

  -
    input:
      bytes: [ 0xc5,0x0a,0x0e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7], z22.b, z14.b[2]"

  -
    input:
      bytes: [ 0x26,0xf5,0x01,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 8:11], z9.b, z1.b[13]"

  -
    input:
      bytes: [ 0x87,0xa9,0x0b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 12:15], z12.b, z11.b[10]"

  -
    input:
      bytes: [ 0x04,0x00,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z0.b, z1.b }, z0.b"

  -
    input:
      bytes: [ 0x04,0x00,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z0.b, z1.b }, z0.b"

  -
    input:
      bytes: [ 0x45,0x41,0x25,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z10.b, z11.b }, z5.b"

  -
    input:
      bytes: [ 0x45,0x41,0x25,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z10.b, z11.b }, z5.b"

  -
    input:
      bytes: [ 0xa5,0x61,0x28,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z13.b, z14.b }, z8.b"

  -
    input:
      bytes: [ 0xa5,0x61,0x28,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z13.b, z14.b }, z8.b"

  -
    input:
      bytes: [ 0xe5,0x63,0x2f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z31.b, z0.b }, z15.b"

  -
    input:
      bytes: [ 0xe5,0x63,0x2f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z31.b, z0.b }, z15.b"

  -
    input:
      bytes: [ 0x25,0x02,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z17.b, z18.b }, z0.b"

  -
    input:
      bytes: [ 0x25,0x02,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z17.b, z18.b }, z0.b"

  -
    input:
      bytes: [ 0x25,0x00,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z1.b, z2.b }, z14.b"

  -
    input:
      bytes: [ 0x25,0x00,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z1.b, z2.b }, z14.b"

  -
    input:
      bytes: [ 0x64,0x42,0x24,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx2], { z19.b, z20.b }, z4.b"

  -
    input:
      bytes: [ 0x64,0x42,0x24,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx2], { z19.b, z20.b }, z4.b"

  -
    input:
      bytes: [ 0x84,0x01,0x22,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z12.b, z13.b }, z2.b"

  -
    input:
      bytes: [ 0x84,0x01,0x22,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z12.b, z13.b }, z2.b"

  -
    input:
      bytes: [ 0x25,0x40,0x2a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z1.b, z2.b }, z10.b"

  -
    input:
      bytes: [ 0x25,0x40,0x2a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z1.b, z2.b }, z10.b"

  -
    input:
      bytes: [ 0xc5,0x02,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z22.b, z23.b }, z14.b"

  -
    input:
      bytes: [ 0xc5,0x02,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z22.b, z23.b }, z14.b"

  -
    input:
      bytes: [ 0x24,0x61,0x21,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx2], { z9.b, z10.b }, z1.b"

  -
    input:
      bytes: [ 0x24,0x61,0x21,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx2], { z9.b, z10.b }, z1.b"

  -
    input:
      bytes: [ 0x85,0x21,0x2b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx2], { z12.b, z13.b }, z11.b"

  -
    input:
      bytes: [ 0x85,0x21,0x2b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx2], { z12.b, z13.b }, z11.b"

  -
    input:
      bytes: [ 0x20,0x00,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z0.b, z1.b }, z0.b[0]"

  -
    input:
      bytes: [ 0x20,0x00,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z0.b, z1.b }, z0.b[0]"

  -
    input:
      bytes: [ 0x65,0x45,0x15,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z10.b, z11.b }, z5.b[6]"

  -
    input:
      bytes: [ 0x65,0x45,0x15,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z10.b, z11.b }, z5.b[6]"

  -
    input:
      bytes: [ 0xa7,0x6d,0x18,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z12.b, z13.b }, z8.b[15]"

  -
    input:
      bytes: [ 0xa7,0x6d,0x18,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z12.b, z13.b }, z8.b[15]"

  -
    input:
      bytes: [ 0xe7,0x6f,0x1f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z30.b, z31.b }, z15.b[15]"

  -
    input:
      bytes: [ 0xe7,0x6f,0x1f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z30.b, z31.b }, z15.b[15]"

  -
    input:
      bytes: [ 0x25,0x0e,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z16.b, z17.b }, z0.b[14]"

  -
    input:
      bytes: [ 0x25,0x0e,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z16.b, z17.b }, z0.b[14]"

  -
    input:
      bytes: [ 0x21,0x04,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z0.b, z1.b }, z14.b[4]"

  -
    input:
      bytes: [ 0x21,0x04,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z0.b, z1.b }, z14.b[4]"

  -
    input:
      bytes: [ 0x60,0x46,0x14,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx2], { z18.b, z19.b }, z4.b[4]"

  -
    input:
      bytes: [ 0x60,0x46,0x14,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx2], { z18.b, z19.b }, z4.b[4]"

  -
    input:
      bytes: [ 0xa0,0x09,0x12,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z12.b, z13.b }, z2.b[8]"

  -
    input:
      bytes: [ 0xa0,0x09,0x12,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z12.b, z13.b }, z2.b[8]"

  -
    input:
      bytes: [ 0x21,0x48,0x1a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z0.b, z1.b }, z10.b[8]"

  -
    input:
      bytes: [ 0x21,0x48,0x1a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z0.b, z1.b }, z10.b[8]"

  -
    input:
      bytes: [ 0xe5,0x0a,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z22.b, z23.b }, z14.b[10]"

  -
    input:
      bytes: [ 0xe5,0x0a,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z22.b, z23.b }, z14.b[10]"

  -
    input:
      bytes: [ 0x22,0x65,0x11,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx2], { z8.b, z9.b }, z1.b[5]"

  -
    input:
      bytes: [ 0x22,0x65,0x11,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx2], { z8.b, z9.b }, z1.b[5]"

  -
    input:
      bytes: [ 0xa7,0x29,0x1b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx2], { z12.b, z13.b }, z11.b[11]"

  -
    input:
      bytes: [ 0xa7,0x29,0x1b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx2], { z12.b, z13.b }, z11.b[11]"

  -
    input:
      bytes: [ 0x04,0x00,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z0.b, z1.b }, { z0.b, z1.b }"

  -
    input:
      bytes: [ 0x04,0x00,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z0.b, z1.b }, { z0.b, z1.b }"

  -
    input:
      bytes: [ 0x45,0x41,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z10.b, z11.b }, { z20.b, z21.b }"

  -
    input:
      bytes: [ 0x45,0x41,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z10.b, z11.b }, { z20.b, z21.b }"

  -
    input:
      bytes: [ 0x85,0x61,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z12.b, z13.b }, { z8.b, z9.b }"

  -
    input:
      bytes: [ 0x85,0x61,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z12.b, z13.b }, { z8.b, z9.b }"

  -
    input:
      bytes: [ 0xc5,0x63,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z30.b, z31.b }, { z30.b, z31.b }"

  -
    input:
      bytes: [ 0xc5,0x63,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx2], { z30.b, z31.b }, { z30.b, z31.b }"

  -
    input:
      bytes: [ 0x05,0x02,0xb0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z16.b, z17.b }, { z16.b, z17.b }"

  -
    input:
      bytes: [ 0x05,0x02,0xb0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z16.b, z17.b }, { z16.b, z17.b }"

  -
    input:
      bytes: [ 0x05,0x00,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z0.b, z1.b }, { z30.b, z31.b }"

  -
    input:
      bytes: [ 0x05,0x00,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z0.b, z1.b }, { z30.b, z31.b }"

  -
    input:
      bytes: [ 0x44,0x42,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx2], { z18.b, z19.b }, { z20.b, z21.b }"

  -
    input:
      bytes: [ 0x44,0x42,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx2], { z18.b, z19.b }, { z20.b, z21.b }"

  -
    input:
      bytes: [ 0x84,0x01,0xa2,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z12.b, z13.b }, { z2.b, z3.b }"

  -
    input:
      bytes: [ 0x84,0x01,0xa2,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx2], { z12.b, z13.b }, { z2.b, z3.b }"

  -
    input:
      bytes: [ 0x05,0x40,0xba,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z0.b, z1.b }, { z26.b, z27.b }"

  -
    input:
      bytes: [ 0x05,0x40,0xba,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx2], { z0.b, z1.b }, { z26.b, z27.b }"

  -
    input:
      bytes: [ 0xc5,0x02,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z22.b, z23.b }, { z30.b, z31.b }"

  -
    input:
      bytes: [ 0xc5,0x02,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx2], { z22.b, z23.b }, { z30.b, z31.b }"

  -
    input:
      bytes: [ 0x04,0x61,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx2], { z8.b, z9.b }, { z0.b, z1.b }"

  -
    input:
      bytes: [ 0x04,0x61,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx2], { z8.b, z9.b }, { z0.b, z1.b }"

  -
    input:
      bytes: [ 0x85,0x21,0xaa,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx2], { z12.b, z13.b }, { z10.b, z11.b }"

  -
    input:
      bytes: [ 0x85,0x21,0xaa,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx2], { z12.b, z13.b }, { z10.b, z11.b }"

  -
    input:
      bytes: [ 0x04,0x00,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z0.b - z3.b }, z0.b"

  -
    input:
      bytes: [ 0x04,0x00,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z0.b - z3.b }, z0.b"

  -
    input:
      bytes: [ 0x45,0x41,0x35,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z10.b - z13.b }, z5.b"

  -
    input:
      bytes: [ 0x45,0x41,0x35,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z10.b - z13.b }, z5.b"

  -
    input:
      bytes: [ 0xa5,0x61,0x38,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z13.b - z16.b }, z8.b"

  -
    input:
      bytes: [ 0xa5,0x61,0x38,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z13.b - z16.b }, z8.b"

  -
    input:
      bytes: [ 0xe5,0x63,0x3f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z31.b, z0.b, z1.b, z2.b }, z15.b"

  -
    input:
      bytes: [ 0xe5,0x63,0x3f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z31.b, z0.b, z1.b, z2.b }, z15.b"

  -
    input:
      bytes: [ 0x25,0x02,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z17.b - z20.b }, z0.b"

  -
    input:
      bytes: [ 0x25,0x02,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z17.b - z20.b }, z0.b"

  -
    input:
      bytes: [ 0x25,0x00,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z1.b - z4.b }, z14.b"

  -
    input:
      bytes: [ 0x25,0x00,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z1.b - z4.b }, z14.b"

  -
    input:
      bytes: [ 0x64,0x42,0x34,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx4], { z19.b - z22.b }, z4.b"

  -
    input:
      bytes: [ 0x64,0x42,0x34,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx4], { z19.b - z22.b }, z4.b"

  -
    input:
      bytes: [ 0x84,0x01,0x32,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z12.b - z15.b }, z2.b"

  -
    input:
      bytes: [ 0x84,0x01,0x32,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z12.b - z15.b }, z2.b"

  -
    input:
      bytes: [ 0x25,0x40,0x3a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z1.b - z4.b }, z10.b"

  -
    input:
      bytes: [ 0x25,0x40,0x3a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z1.b - z4.b }, z10.b"

  -
    input:
      bytes: [ 0xc5,0x02,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z22.b - z25.b }, z14.b"

  -
    input:
      bytes: [ 0xc5,0x02,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z22.b - z25.b }, z14.b"

  -
    input:
      bytes: [ 0x24,0x61,0x31,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx4], { z9.b - z12.b }, z1.b"

  -
    input:
      bytes: [ 0x24,0x61,0x31,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx4], { z9.b - z12.b }, z1.b"

  -
    input:
      bytes: [ 0x85,0x21,0x3b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx4], { z12.b - z15.b }, z11.b"

  -
    input:
      bytes: [ 0x85,0x21,0x3b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx4], { z12.b - z15.b }, z11.b"

  -
    input:
      bytes: [ 0x20,0x80,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z0.b - z3.b }, z0.b[0]"

  -
    input:
      bytes: [ 0x20,0x80,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z0.b - z3.b }, z0.b[0]"

  -
    input:
      bytes: [ 0x25,0xc5,0x15,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z8.b - z11.b }, z5.b[6]"

  -
    input:
      bytes: [ 0x25,0xc5,0x15,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z8.b - z11.b }, z5.b[6]"

  -
    input:
      bytes: [ 0xa7,0xed,0x18,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z12.b - z15.b }, z8.b[15]"

  -
    input:
      bytes: [ 0xa7,0xed,0x18,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z12.b - z15.b }, z8.b[15]"

  -
    input:
      bytes: [ 0xa7,0xef,0x1f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z28.b - z31.b }, z15.b[15]"

  -
    input:
      bytes: [ 0xa7,0xef,0x1f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z28.b - z31.b }, z15.b[15]"

  -
    input:
      bytes: [ 0x25,0x8e,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z16.b - z19.b }, z0.b[14]"

  -
    input:
      bytes: [ 0x25,0x8e,0x10,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z16.b - z19.b }, z0.b[14]"

  -
    input:
      bytes: [ 0x21,0x84,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z0.b - z3.b }, z14.b[4]"

  -
    input:
      bytes: [ 0x21,0x84,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z0.b - z3.b }, z14.b[4]"

  -
    input:
      bytes: [ 0x20,0xc6,0x14,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx4], { z16.b - z19.b }, z4.b[4]"

  -
    input:
      bytes: [ 0x20,0xc6,0x14,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx4], { z16.b - z19.b }, z4.b[4]"

  -
    input:
      bytes: [ 0xa0,0x89,0x12,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z12.b - z15.b }, z2.b[8]"

  -
    input:
      bytes: [ 0xa0,0x89,0x12,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z12.b - z15.b }, z2.b[8]"

  -
    input:
      bytes: [ 0x21,0xc8,0x1a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z0.b - z3.b }, z10.b[8]"

  -
    input:
      bytes: [ 0x21,0xc8,0x1a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z0.b - z3.b }, z10.b[8]"

  -
    input:
      bytes: [ 0xa5,0x8a,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z20.b - z23.b }, z14.b[10]"

  -
    input:
      bytes: [ 0xa5,0x8a,0x1e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z20.b - z23.b }, z14.b[10]"

  -
    input:
      bytes: [ 0x22,0xe5,0x11,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx4], { z8.b - z11.b }, z1.b[5]"

  -
    input:
      bytes: [ 0x22,0xe5,0x11,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx4], { z8.b - z11.b }, z1.b[5]"

  -
    input:
      bytes: [ 0xa7,0xa9,0x1b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx4], { z12.b - z15.b }, z11.b[11]"

  -
    input:
      bytes: [ 0xa7,0xa9,0x1b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx4], { z12.b - z15.b }, z11.b[11]"

  -
    input:
      bytes: [ 0x04,0x00,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z0.b - z3.b }, { z0.b - z3.b }"

  -
    input:
      bytes: [ 0x04,0x00,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z0.b - z3.b }, { z0.b - z3.b }"

  -
    input:
      bytes: [ 0x05,0x41,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z8.b - z11.b }, { z20.b - z23.b }"

  -
    input:
      bytes: [ 0x05,0x41,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z8.b - z11.b }, { z20.b - z23.b }"

  -
    input:
      bytes: [ 0x85,0x61,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z12.b - z15.b }, { z8.b - z11.b }"

  -
    input:
      bytes: [ 0x85,0x61,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z12.b - z15.b }, { z8.b - z11.b }"

  -
    input:
      bytes: [ 0x85,0x63,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z28.b - z31.b }, { z28.b - z31.b }"

  -
    input:
      bytes: [ 0x85,0x63,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 4:7, vgx4], { z28.b - z31.b }, { z28.b - z31.b }"

  -
    input:
      bytes: [ 0x05,0x02,0xb1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z16.b - z19.b }, { z16.b - z19.b }"

  -
    input:
      bytes: [ 0x05,0x02,0xb1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z16.b - z19.b }, { z16.b - z19.b }"

  -
    input:
      bytes: [ 0x05,0x00,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z0.b - z3.b }, { z28.b - z31.b }"

  -
    input:
      bytes: [ 0x05,0x00,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z0.b - z3.b }, { z28.b - z31.b }"

  -
    input:
      bytes: [ 0x04,0x42,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx4], { z16.b - z19.b }, { z20.b - z23.b }"

  -
    input:
      bytes: [ 0x04,0x42,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 0:3, vgx4], { z16.b - z19.b }, { z20.b - z23.b }"

  -
    input:
      bytes: [ 0x84,0x01,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z12.b - z15.b }, { z0.b - z3.b }"

  -
    input:
      bytes: [ 0x84,0x01,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 0:3, vgx4], { z12.b - z15.b }, { z0.b - z3.b }"

  -
    input:
      bytes: [ 0x05,0x40,0xb9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z0.b - z3.b }, { z24.b - z27.b }"

  -
    input:
      bytes: [ 0x05,0x40,0xb9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w10, 4:7, vgx4], { z0.b - z3.b }, { z24.b - z27.b }"

  -
    input:
      bytes: [ 0x85,0x02,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z20.b - z23.b }, { z28.b - z31.b }"

  -
    input:
      bytes: [ 0x85,0x02,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w8, 4:7, vgx4], { z20.b - z23.b }, { z28.b - z31.b }"

  -
    input:
      bytes: [ 0x04,0x61,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx4], { z8.b - z11.b }, { z0.b - z3.b }"

  -
    input:
      bytes: [ 0x04,0x61,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w11, 0:3, vgx4], { z8.b - z11.b }, { z0.b - z3.b }"

  -
    input:
      bytes: [ 0x85,0x21,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx4], { z12.b - z15.b }, { z8.b - z11.b }"

  -
    input:
      bytes: [ 0x85,0x21,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "usmlall za.s[w9, 4:7, vgx4], { z12.b - z15.b }, { z8.b - z11.b }"
