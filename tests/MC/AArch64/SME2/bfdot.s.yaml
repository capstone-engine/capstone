test_cases:
  -
    input:
      bytes: [ 0x10, 0x10, 0x20, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z0.h, z1.h }, z0.h"

  -
    input:
      bytes: [ 0x10, 0x10, 0x20, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z0.h, z1.h }, z0.h"

  -
    input:
      bytes: [ 0x55, 0x51, 0x25, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx2], { z10.h, z11.h }, z5.h"

  -
    input:
      bytes: [ 0x55, 0x51, 0x25, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx2], { z10.h, z11.h }, z5.h"

  -
    input:
      bytes: [ 0xb7, 0x71, 0x28, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z13.h, z14.h }, z8.h"

  -
    input:
      bytes: [ 0xb7, 0x71, 0x28, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z13.h, z14.h }, z8.h"

  -
    input:
      bytes: [ 0xf7, 0x73, 0x2f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z31.h, z0.h }, z15.h"

  -
    input:
      bytes: [ 0xf7, 0x73, 0x2f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z31.h, z0.h }, z15.h"

  -
    input:
      bytes: [ 0x35, 0x12, 0x20, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z17.h, z18.h }, z0.h"

  -
    input:
      bytes: [ 0x35, 0x12, 0x20, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z17.h, z18.h }, z0.h"

  -
    input:
      bytes: [ 0x31, 0x10, 0x2e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx2], { z1.h, z2.h }, z14.h"

  -
    input:
      bytes: [ 0x31, 0x10, 0x2e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx2], { z1.h, z2.h }, z14.h"

  -
    input:
      bytes: [ 0x70, 0x52, 0x24, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx2], { z19.h, z20.h }, z4.h"

  -
    input:
      bytes: [ 0x70, 0x52, 0x24, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx2], { z19.h, z20.h }, z4.h"

  -
    input:
      bytes: [ 0x90, 0x11, 0x22, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z12.h, z13.h }, z2.h"

  -
    input:
      bytes: [ 0x90, 0x11, 0x22, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z12.h, z13.h }, z2.h"

  -
    input:
      bytes: [ 0x31, 0x50, 0x2a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx2], { z1.h, z2.h }, z10.h"

  -
    input:
      bytes: [ 0x31, 0x50, 0x2a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx2], { z1.h, z2.h }, z10.h"

  -
    input:
      bytes: [ 0xd5, 0x12, 0x2e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z22.h, z23.h }, z14.h"

  -
    input:
      bytes: [ 0xd5, 0x12, 0x2e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z22.h, z23.h }, z14.h"

  -
    input:
      bytes: [ 0x32, 0x71, 0x21, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx2], { z9.h, z10.h }, z1.h"

  -
    input:
      bytes: [ 0x32, 0x71, 0x21, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx2], { z9.h, z10.h }, z1.h"

  -
    input:
      bytes: [ 0x97, 0x31, 0x2b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx2], { z12.h, z13.h }, z11.h"

  -
    input:
      bytes: [ 0x97, 0x31, 0x2b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx2], { z12.h, z13.h }, z11.h"

  -
    input:
      bytes: [ 0x18, 0x10, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z0.h, z1.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x18, 0x10, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z0.h, z1.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x5d, 0x55, 0x55, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx2], { z10.h, z11.h }, z5.h[1]"

  -
    input:
      bytes: [ 0x5d, 0x55, 0x55, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx2], { z10.h, z11.h }, z5.h[1]"

  -
    input:
      bytes: [ 0x9f, 0x7d, 0x58, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z12.h, z13.h }, z8.h[3]"

  -
    input:
      bytes: [ 0x9f, 0x7d, 0x58, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z12.h, z13.h }, z8.h[3]"

  -
    input:
      bytes: [ 0xdf, 0x7f, 0x5f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z30.h, z31.h }, z15.h[3]"

  -
    input:
      bytes: [ 0xdf, 0x7f, 0x5f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z30.h, z31.h }, z15.h[3]"

  -
    input:
      bytes: [ 0x1d, 0x1e, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z16.h, z17.h }, z0.h[3]"

  -
    input:
      bytes: [ 0x1d, 0x1e, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z16.h, z17.h }, z0.h[3]"

  -
    input:
      bytes: [ 0x19, 0x14, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx2], { z0.h, z1.h }, z14.h[1]"

  -
    input:
      bytes: [ 0x19, 0x14, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx2], { z0.h, z1.h }, z14.h[1]"

  -
    input:
      bytes: [ 0x58, 0x56, 0x54, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx2], { z18.h, z19.h }, z4.h[1]"

  -
    input:
      bytes: [ 0x58, 0x56, 0x54, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx2], { z18.h, z19.h }, z4.h[1]"

  -
    input:
      bytes: [ 0x98, 0x19, 0x52, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z12.h, z13.h }, z2.h[2]"

  -
    input:
      bytes: [ 0x98, 0x19, 0x52, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z12.h, z13.h }, z2.h[2]"

  -
    input:
      bytes: [ 0x19, 0x58, 0x5a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx2], { z0.h, z1.h }, z10.h[2]"

  -
    input:
      bytes: [ 0x19, 0x58, 0x5a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx2], { z0.h, z1.h }, z10.h[2]"

  -
    input:
      bytes: [ 0xdd, 0x1a, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z22.h, z23.h }, z14.h[2]"

  -
    input:
      bytes: [ 0xdd, 0x1a, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z22.h, z23.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x1a, 0x75, 0x51, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx2], { z8.h, z9.h }, z1.h[1]"

  -
    input:
      bytes: [ 0x1a, 0x75, 0x51, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx2], { z8.h, z9.h }, z1.h[1]"

  -
    input:
      bytes: [ 0x9f, 0x39, 0x5b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx2], { z12.h, z13.h }, z11.h[2]"

  -
    input:
      bytes: [ 0x9f, 0x39, 0x5b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx2], { z12.h, z13.h }, z11.h[2]"

  -
    input:
      bytes: [ 0x10, 0x10, 0xa0, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z0.h, z1.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x10, 0x10, 0xa0, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z0.h, z1.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x55, 0x51, 0xb4, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx2], { z10.h, z11.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x55, 0x51, 0xb4, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx2], { z10.h, z11.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x97, 0x71, 0xa8, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z12.h, z13.h }, { z8.h, z9.h }"

  -
    input:
      bytes: [ 0x97, 0x71, 0xa8, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z12.h, z13.h }, { z8.h, z9.h }"

  -
    input:
      bytes: [ 0xd7, 0x73, 0xbe, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z30.h, z31.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0xd7, 0x73, 0xbe, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx2], { z30.h, z31.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x15, 0x12, 0xb0, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z16.h, z17.h }, { z16.h, z17.h }"

  -
    input:
      bytes: [ 0x15, 0x12, 0xb0, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z16.h, z17.h }, { z16.h, z17.h }"

  -
    input:
      bytes: [ 0x11, 0x10, 0xbe, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx2], { z0.h, z1.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x11, 0x10, 0xbe, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx2], { z0.h, z1.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x50, 0x52, 0xb4, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx2], { z18.h, z19.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x50, 0x52, 0xb4, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx2], { z18.h, z19.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x90, 0x11, 0xa2, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z12.h, z13.h }, { z2.h, z3.h }"

  -
    input:
      bytes: [ 0x90, 0x11, 0xa2, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx2], { z12.h, z13.h }, { z2.h, z3.h }"

  -
    input:
      bytes: [ 0x11, 0x50, 0xba, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx2], { z0.h, z1.h }, { z26.h, z27.h }"

  -
    input:
      bytes: [ 0x11, 0x50, 0xba, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx2], { z0.h, z1.h }, { z26.h, z27.h }"

  -
    input:
      bytes: [ 0xd5, 0x12, 0xbe, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z22.h, z23.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0xd5, 0x12, 0xbe, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx2], { z22.h, z23.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x12, 0x71, 0xa0, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx2], { z8.h, z9.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x12, 0x71, 0xa0, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx2], { z8.h, z9.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x97, 0x31, 0xaa, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx2], { z12.h, z13.h }, { z10.h, z11.h }"

  -
    input:
      bytes: [ 0x97, 0x31, 0xaa, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx2], { z12.h, z13.h }, { z10.h, z11.h }"

  -
    input:
      bytes: [ 0x10, 0x10, 0x30, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z0.h - z3.h }, z0.h"

  -
    input:
      bytes: [ 0x10, 0x10, 0x30, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z0.h - z3.h }, z0.h"

  -
    input:
      bytes: [ 0x55, 0x51, 0x35, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx4], { z10.h - z13.h }, z5.h"

  -
    input:
      bytes: [ 0x55, 0x51, 0x35, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx4], { z10.h - z13.h }, z5.h"

  -
    input:
      bytes: [ 0xb7, 0x71, 0x38, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z13.h - z16.h }, z8.h"

  -
    input:
      bytes: [ 0xb7, 0x71, 0x38, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z13.h - z16.h }, z8.h"

  -
    input:
      bytes: [ 0xf7, 0x73, 0x3f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z31.h, z0.h, z1.h, z2.h }, z15.h"

  -
    input:
      bytes: [ 0xf7, 0x73, 0x3f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z31.h, z0.h, z1.h, z2.h }, z15.h"

  -
    input:
      bytes: [ 0x35, 0x12, 0x30, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z17.h - z20.h }, z0.h"

  -
    input:
      bytes: [ 0x35, 0x12, 0x30, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z17.h - z20.h }, z0.h"

  -
    input:
      bytes: [ 0x31, 0x10, 0x3e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx4], { z1.h - z4.h }, z14.h"

  -
    input:
      bytes: [ 0x31, 0x10, 0x3e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx4], { z1.h - z4.h }, z14.h"

  -
    input:
      bytes: [ 0x70, 0x52, 0x34, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx4], { z19.h - z22.h }, z4.h"

  -
    input:
      bytes: [ 0x70, 0x52, 0x34, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx4], { z19.h - z22.h }, z4.h"

  -
    input:
      bytes: [ 0x90, 0x11, 0x32, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z12.h - z15.h }, z2.h"

  -
    input:
      bytes: [ 0x90, 0x11, 0x32, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z12.h - z15.h }, z2.h"

  -
    input:
      bytes: [ 0x31, 0x50, 0x3a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx4], { z1.h - z4.h }, z10.h"

  -
    input:
      bytes: [ 0x31, 0x50, 0x3a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx4], { z1.h - z4.h }, z10.h"

  -
    input:
      bytes: [ 0xd5, 0x12, 0x3e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z22.h - z25.h }, z14.h"

  -
    input:
      bytes: [ 0xd5, 0x12, 0x3e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z22.h - z25.h }, z14.h"

  -
    input:
      bytes: [ 0x32, 0x71, 0x31, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx4], { z9.h - z12.h }, z1.h"

  -
    input:
      bytes: [ 0x32, 0x71, 0x31, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx4], { z9.h - z12.h }, z1.h"

  -
    input:
      bytes: [ 0x97, 0x31, 0x3b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx4], { z12.h - z15.h }, z11.h"

  -
    input:
      bytes: [ 0x97, 0x31, 0x3b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx4], { z12.h - z15.h }, z11.h"

  -
    input:
      bytes: [ 0x18, 0x90, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z0.h - z3.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x18, 0x90, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z0.h - z3.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x1d, 0xd5, 0x55, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx4], { z8.h - z11.h }, z5.h[1]"

  -
    input:
      bytes: [ 0x1d, 0xd5, 0x55, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx4], { z8.h - z11.h }, z5.h[1]"

  -
    input:
      bytes: [ 0x9f, 0xfd, 0x58, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z12.h - z15.h }, z8.h[3]"

  -
    input:
      bytes: [ 0x9f, 0xfd, 0x58, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z12.h - z15.h }, z8.h[3]"

  -
    input:
      bytes: [ 0x9f, 0xff, 0x5f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z28.h - z31.h }, z15.h[3]"

  -
    input:
      bytes: [ 0x9f, 0xff, 0x5f, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z28.h - z31.h }, z15.h[3]"

  -
    input:
      bytes: [ 0x1d, 0x9e, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z16.h - z19.h }, z0.h[3]"

  -
    input:
      bytes: [ 0x1d, 0x9e, 0x50, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z16.h - z19.h }, z0.h[3]"

  -
    input:
      bytes: [ 0x19, 0x94, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx4], { z0.h - z3.h }, z14.h[1]"

  -
    input:
      bytes: [ 0x19, 0x94, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx4], { z0.h - z3.h }, z14.h[1]"

  -
    input:
      bytes: [ 0x18, 0xd6, 0x54, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx4], { z16.h - z19.h }, z4.h[1]"

  -
    input:
      bytes: [ 0x18, 0xd6, 0x54, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx4], { z16.h - z19.h }, z4.h[1]"

  -
    input:
      bytes: [ 0x98, 0x99, 0x52, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z12.h - z15.h }, z2.h[2]"

  -
    input:
      bytes: [ 0x98, 0x99, 0x52, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z12.h - z15.h }, z2.h[2]"

  -
    input:
      bytes: [ 0x19, 0xd8, 0x5a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx4], { z0.h - z3.h }, z10.h[2]"

  -
    input:
      bytes: [ 0x19, 0xd8, 0x5a, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx4], { z0.h - z3.h }, z10.h[2]"

  -
    input:
      bytes: [ 0x9d, 0x9a, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z20.h - z23.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x9d, 0x9a, 0x5e, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z20.h - z23.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x1a, 0xf5, 0x51, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx4], { z8.h - z11.h }, z1.h[1]"

  -
    input:
      bytes: [ 0x1a, 0xf5, 0x51, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx4], { z8.h - z11.h }, z1.h[1]"

  -
    input:
      bytes: [ 0x9f, 0xb9, 0x5b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx4], { z12.h - z15.h }, z11.h[2]"

  -
    input:
      bytes: [ 0x9f, 0xb9, 0x5b, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx4], { z12.h - z15.h }, z11.h[2]"

  -
    input:
      bytes: [ 0x10, 0x10, 0xa1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z0.h - z3.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x10, 0x10, 0xa1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z0.h - z3.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x15, 0x51, 0xb5, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx4], { z8.h - z11.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x15, 0x51, 0xb5, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 5, vgx4], { z8.h - z11.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x97, 0x71, 0xa9, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"

  -
    input:
      bytes: [ 0x97, 0x71, 0xa9, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"

  -
    input:
      bytes: [ 0x97, 0x73, 0xbd, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z28.h - z31.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x97, 0x73, 0xbd, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 7, vgx4], { z28.h - z31.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x15, 0x12, 0xb1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z16.h - z19.h }, { z16.h - z19.h }"

  -
    input:
      bytes: [ 0x15, 0x12, 0xb1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z16.h - z19.h }, { z16.h - z19.h }"

  -
    input:
      bytes: [ 0x11, 0x10, 0xbd, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx4], { z0.h - z3.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x11, 0x10, 0xbd, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 1, vgx4], { z0.h - z3.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x10, 0x52, 0xb5, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx4], { z16.h - z19.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x10, 0x52, 0xb5, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 0, vgx4], { z16.h - z19.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x90, 0x11, 0xa1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z12.h - z15.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x90, 0x11, 0xa1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 0, vgx4], { z12.h - z15.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x11, 0x50, 0xb9, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx4], { z0.h - z3.h }, { z24.h - z27.h }"

  -
    input:
      bytes: [ 0x11, 0x50, 0xb9, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w10, 1, vgx4], { z0.h - z3.h }, { z24.h - z27.h }"

  -
    input:
      bytes: [ 0x95, 0x12, 0xbd, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z20.h - z23.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x95, 0x12, 0xbd, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w8, 5, vgx4], { z20.h - z23.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x12, 0x71, 0xa1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx4], { z8.h - z11.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x12, 0x71, 0xa1, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w11, 2, vgx4], { z8.h - z11.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x97, 0x31, 0xa9, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"

  -
    input:
      bytes: [ 0x97, 0x31, 0xa9, 0xc1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfdot za.s[w9, 7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"
