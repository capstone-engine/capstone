test_cases:
  -
    input:
      bytes: [ 0x10,0x0c,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1], z0.h, z0.h"

  -
    input:
      bytes: [ 0x55,0x4d,0x25,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 10:11], z10.h, z5.h"

  -
    input:
      bytes: [ 0xb7,0x6d,0x28,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 14:15], z13.h, z8.h"

  -
    input:
      bytes: [ 0xf7,0x6f,0x2f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 14:15], z31.h, z15.h"

  -
    input:
      bytes: [ 0x35,0x0e,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 10:11], z17.h, z0.h"

  -
    input:
      bytes: [ 0x31,0x0c,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3], z1.h, z14.h"

  -
    input:
      bytes: [ 0x70,0x4e,0x24,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1], z19.h, z4.h"

  -
    input:
      bytes: [ 0x90,0x0d,0x22,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1], z12.h, z2.h"

  -
    input:
      bytes: [ 0x31,0x4c,0x2a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3], z1.h, z10.h"

  -
    input:
      bytes: [ 0xd5,0x0e,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 10:11], z22.h, z14.h"

  -
    input:
      bytes: [ 0x32,0x6d,0x21,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5], z9.h, z1.h"

  -
    input:
      bytes: [ 0x97,0x2d,0x2b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 14:15], z12.h, z11.h"

  -
    input:
      bytes: [ 0x10,0x10,0x80,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1], z0.h, z0.h[0]"

  -
    input:
      bytes: [ 0x55,0x55,0x85,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 10:11], z10.h, z5.h[1]"

  -
    input:
      bytes: [ 0xb7,0xfd,0x88,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 14:15], z13.h, z8.h[7]"

  -
    input:
      bytes: [ 0xf7,0xff,0x8f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 14:15], z31.h, z15.h[7]"

  -
    input:
      bytes: [ 0x35,0x1e,0x80,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 10:11], z17.h, z0.h[3]"

  -
    input:
      bytes: [ 0x31,0x94,0x8e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3], z1.h, z14.h[5]"

  -
    input:
      bytes: [ 0x70,0x56,0x84,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1], z19.h, z4.h[1]"

  -
    input:
      bytes: [ 0x90,0x19,0x82,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1], z12.h, z2.h[2]"

  -
    input:
      bytes: [ 0x31,0xd8,0x8a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3], z1.h, z10.h[6]"

  -
    input:
      bytes: [ 0xd5,0x1a,0x8e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 10:11], z22.h, z14.h[2]"

  -
    input:
      bytes: [ 0x32,0xf5,0x81,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5], z9.h, z1.h[5]"

  -
    input:
      bytes: [ 0x97,0xb9,0x8b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 14:15], z12.h, z11.h[6]"

  -
    input:
      bytes: [ 0x10,0x08,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z0.h, z1.h }, z0.h"

  -
    input:
      bytes: [ 0x10,0x08,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z0.h, z1.h }, z0.h"

  -
    input:
      bytes: [ 0x51,0x49,0x25,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z10.h, z11.h }, z5.h"

  -
    input:
      bytes: [ 0x51,0x49,0x25,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z10.h, z11.h }, z5.h"

  -
    input:
      bytes: [ 0xb3,0x69,0x28,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z13.h, z14.h }, z8.h"

  -
    input:
      bytes: [ 0xb3,0x69,0x28,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z13.h, z14.h }, z8.h"

  -
    input:
      bytes: [ 0xf3,0x6b,0x2f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z31.h, z0.h }, z15.h"

  -
    input:
      bytes: [ 0xf3,0x6b,0x2f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z31.h, z0.h }, z15.h"

  -
    input:
      bytes: [ 0x31,0x0a,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z17.h, z18.h }, z0.h"

  -
    input:
      bytes: [ 0x31,0x0a,0x20,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z17.h, z18.h }, z0.h"

  -
    input:
      bytes: [ 0x31,0x08,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z1.h, z2.h }, z14.h"

  -
    input:
      bytes: [ 0x31,0x08,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z1.h, z2.h }, z14.h"

  -
    input:
      bytes: [ 0x70,0x4a,0x24,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx2], { z19.h, z20.h }, z4.h"

  -
    input:
      bytes: [ 0x70,0x4a,0x24,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx2], { z19.h, z20.h }, z4.h"

  -
    input:
      bytes: [ 0x90,0x09,0x22,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z12.h, z13.h }, z2.h"

  -
    input:
      bytes: [ 0x90,0x09,0x22,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z12.h, z13.h }, z2.h"

  -
    input:
      bytes: [ 0x31,0x48,0x2a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z1.h, z2.h }, z10.h"

  -
    input:
      bytes: [ 0x31,0x48,0x2a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z1.h, z2.h }, z10.h"

  -
    input:
      bytes: [ 0xd1,0x0a,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z22.h, z23.h }, z14.h"

  -
    input:
      bytes: [ 0xd1,0x0a,0x2e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z22.h, z23.h }, z14.h"

  -
    input:
      bytes: [ 0x32,0x69,0x21,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx2], { z9.h, z10.h }, z1.h"

  -
    input:
      bytes: [ 0x32,0x69,0x21,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx2], { z9.h, z10.h }, z1.h"

  -
    input:
      bytes: [ 0x93,0x29,0x2b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx2], { z12.h, z13.h }, z11.h"

  -
    input:
      bytes: [ 0x93,0x29,0x2b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx2], { z12.h, z13.h }, z11.h"

  -
    input:
      bytes: [ 0x10,0x10,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z0.h, z1.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x10,0x10,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z0.h, z1.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x55,0x55,0x95,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z10.h, z11.h }, z5.h[3]"

  -
    input:
      bytes: [ 0x55,0x55,0x95,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z10.h, z11.h }, z5.h[3]"

  -
    input:
      bytes: [ 0x97,0x7d,0x98,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z12.h, z13.h }, z8.h[7]"

  -
    input:
      bytes: [ 0x97,0x7d,0x98,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z12.h, z13.h }, z8.h[7]"

  -
    input:
      bytes: [ 0xd7,0x7f,0x9f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z30.h, z31.h }, z15.h[7]"

  -
    input:
      bytes: [ 0xd7,0x7f,0x9f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z30.h, z31.h }, z15.h[7]"

  -
    input:
      bytes: [ 0x15,0x1e,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z16.h, z17.h }, z0.h[7]"

  -
    input:
      bytes: [ 0x15,0x1e,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z16.h, z17.h }, z0.h[7]"

  -
    input:
      bytes: [ 0x11,0x14,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z0.h, z1.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x11,0x14,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z0.h, z1.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x50,0x56,0x94,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx2], { z18.h, z19.h }, z4.h[2]"

  -
    input:
      bytes: [ 0x50,0x56,0x94,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx2], { z18.h, z19.h }, z4.h[2]"

  -
    input:
      bytes: [ 0x90,0x19,0x92,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z12.h, z13.h }, z2.h[4]"

  -
    input:
      bytes: [ 0x90,0x19,0x92,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z12.h, z13.h }, z2.h[4]"

  -
    input:
      bytes: [ 0x11,0x58,0x9a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z0.h, z1.h }, z10.h[4]"

  -
    input:
      bytes: [ 0x11,0x58,0x9a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z0.h, z1.h }, z10.h[4]"

  -
    input:
      bytes: [ 0xd5,0x1a,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z22.h, z23.h }, z14.h[5]"

  -
    input:
      bytes: [ 0xd5,0x1a,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z22.h, z23.h }, z14.h[5]"

  -
    input:
      bytes: [ 0x12,0x75,0x91,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx2], { z8.h, z9.h }, z1.h[2]"

  -
    input:
      bytes: [ 0x12,0x75,0x91,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx2], { z8.h, z9.h }, z1.h[2]"

  -
    input:
      bytes: [ 0x97,0x39,0x9b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx2], { z12.h, z13.h }, z11.h[5]"

  -
    input:
      bytes: [ 0x97,0x39,0x9b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx2], { z12.h, z13.h }, z11.h[5]"

  -
    input:
      bytes: [ 0x10,0x08,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z0.h, z1.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x10,0x08,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z0.h, z1.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x51,0x49,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z10.h, z11.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x51,0x49,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z10.h, z11.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x93,0x69,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z12.h, z13.h }, { z8.h, z9.h }"

  -
    input:
      bytes: [ 0x93,0x69,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z12.h, z13.h }, { z8.h, z9.h }"

  -
    input:
      bytes: [ 0xd3,0x6b,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z30.h, z31.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0xd3,0x6b,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx2], { z30.h, z31.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x11,0x0a,0xb0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z16.h, z17.h }, { z16.h, z17.h }"

  -
    input:
      bytes: [ 0x11,0x0a,0xb0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z16.h, z17.h }, { z16.h, z17.h }"

  -
    input:
      bytes: [ 0x11,0x08,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z0.h, z1.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x11,0x08,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z0.h, z1.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x50,0x4a,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx2], { z18.h, z19.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x50,0x4a,0xb4,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx2], { z18.h, z19.h }, { z20.h, z21.h }"

  -
    input:
      bytes: [ 0x90,0x09,0xa2,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z12.h, z13.h }, { z2.h, z3.h }"

  -
    input:
      bytes: [ 0x90,0x09,0xa2,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx2], { z12.h, z13.h }, { z2.h, z3.h }"

  -
    input:
      bytes: [ 0x11,0x48,0xba,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z0.h, z1.h }, { z26.h, z27.h }"

  -
    input:
      bytes: [ 0x11,0x48,0xba,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx2], { z0.h, z1.h }, { z26.h, z27.h }"

  -
    input:
      bytes: [ 0xd1,0x0a,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z22.h, z23.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0xd1,0x0a,0xbe,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx2], { z22.h, z23.h }, { z30.h, z31.h }"

  -
    input:
      bytes: [ 0x12,0x69,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx2], { z8.h, z9.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x12,0x69,0xa0,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx2], { z8.h, z9.h }, { z0.h, z1.h }"

  -
    input:
      bytes: [ 0x93,0x29,0xaa,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx2], { z12.h, z13.h }, { z10.h, z11.h }"

  -
    input:
      bytes: [ 0x93,0x29,0xaa,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx2], { z12.h, z13.h }, { z10.h, z11.h }"

  -
    input:
      bytes: [ 0x10,0x08,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z0.h - z3.h }, z0.h"

  -
    input:
      bytes: [ 0x10,0x08,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z0.h - z3.h }, z0.h"

  -
    input:
      bytes: [ 0x51,0x49,0x35,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z10.h - z13.h }, z5.h"

  -
    input:
      bytes: [ 0x51,0x49,0x35,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z10.h - z13.h }, z5.h"

  -
    input:
      bytes: [ 0xb3,0x69,0x38,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z13.h - z16.h }, z8.h"

  -
    input:
      bytes: [ 0xb3,0x69,0x38,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z13.h - z16.h }, z8.h"

  -
    input:
      bytes: [ 0xf3,0x6b,0x3f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z31.h, z0.h, z1.h, z2.h }, z15.h"

  -
    input:
      bytes: [ 0xf3,0x6b,0x3f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z31.h, z0.h, z1.h, z2.h }, z15.h"

  -
    input:
      bytes: [ 0x31,0x0a,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z17.h - z20.h }, z0.h"

  -
    input:
      bytes: [ 0x31,0x0a,0x30,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z17.h - z20.h }, z0.h"

  -
    input:
      bytes: [ 0x31,0x08,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z1.h - z4.h }, z14.h"

  -
    input:
      bytes: [ 0x31,0x08,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z1.h - z4.h }, z14.h"

  -
    input:
      bytes: [ 0x70,0x4a,0x34,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx4], { z19.h - z22.h }, z4.h"

  -
    input:
      bytes: [ 0x70,0x4a,0x34,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx4], { z19.h - z22.h }, z4.h"

  -
    input:
      bytes: [ 0x90,0x09,0x32,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z12.h - z15.h }, z2.h"

  -
    input:
      bytes: [ 0x90,0x09,0x32,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z12.h - z15.h }, z2.h"

  -
    input:
      bytes: [ 0x31,0x48,0x3a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z1.h - z4.h }, z10.h"

  -
    input:
      bytes: [ 0x31,0x48,0x3a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z1.h - z4.h }, z10.h"

  -
    input:
      bytes: [ 0xd1,0x0a,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z22.h - z25.h }, z14.h"

  -
    input:
      bytes: [ 0xd1,0x0a,0x3e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z22.h - z25.h }, z14.h"

  -
    input:
      bytes: [ 0x32,0x69,0x31,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx4], { z9.h - z12.h }, z1.h"

  -
    input:
      bytes: [ 0x32,0x69,0x31,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx4], { z9.h - z12.h }, z1.h"

  -
    input:
      bytes: [ 0x93,0x29,0x3b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx4], { z12.h - z15.h }, z11.h"

  -
    input:
      bytes: [ 0x93,0x29,0x3b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx4], { z12.h - z15.h }, z11.h"

  -
    input:
      bytes: [ 0x10,0x90,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z0.h - z3.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x10,0x90,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z0.h - z3.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x15,0xd5,0x95,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z8.h - z11.h }, z5.h[3]"

  -
    input:
      bytes: [ 0x15,0xd5,0x95,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z8.h - z11.h }, z5.h[3]"

  -
    input:
      bytes: [ 0x97,0xfd,0x98,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z12.h - z15.h }, z8.h[7]"

  -
    input:
      bytes: [ 0x97,0xfd,0x98,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z12.h - z15.h }, z8.h[7]"

  -
    input:
      bytes: [ 0x97,0xff,0x9f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z28.h - z31.h }, z15.h[7]"

  -
    input:
      bytes: [ 0x97,0xff,0x9f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z28.h - z31.h }, z15.h[7]"

  -
    input:
      bytes: [ 0x15,0x9e,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z16.h - z19.h }, z0.h[7]"

  -
    input:
      bytes: [ 0x15,0x9e,0x90,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z16.h - z19.h }, z0.h[7]"

  -
    input:
      bytes: [ 0x11,0x94,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z0.h - z3.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x11,0x94,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z0.h - z3.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x10,0xd6,0x94,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx4], { z16.h - z19.h }, z4.h[2]"

  -
    input:
      bytes: [ 0x10,0xd6,0x94,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx4], { z16.h - z19.h }, z4.h[2]"

  -
    input:
      bytes: [ 0x90,0x99,0x92,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z12.h - z15.h }, z2.h[4]"

  -
    input:
      bytes: [ 0x90,0x99,0x92,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z12.h - z15.h }, z2.h[4]"

  -
    input:
      bytes: [ 0x11,0xd8,0x9a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z0.h - z3.h }, z10.h[4]"

  -
    input:
      bytes: [ 0x11,0xd8,0x9a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z0.h - z3.h }, z10.h[4]"

  -
    input:
      bytes: [ 0x95,0x9a,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z20.h - z23.h }, z14.h[5]"

  -
    input:
      bytes: [ 0x95,0x9a,0x9e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z20.h - z23.h }, z14.h[5]"

  -
    input:
      bytes: [ 0x12,0xf5,0x91,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx4], { z8.h - z11.h }, z1.h[2]"

  -
    input:
      bytes: [ 0x12,0xf5,0x91,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx4], { z8.h - z11.h }, z1.h[2]"

  -
    input:
      bytes: [ 0x97,0xb9,0x9b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx4], { z12.h - z15.h }, z11.h[5]"

  -
    input:
      bytes: [ 0x97,0xb9,0x9b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx4], { z12.h - z15.h }, z11.h[5]"

  -
    input:
      bytes: [ 0x10,0x08,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z0.h - z3.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x10,0x08,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z0.h - z3.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x11,0x49,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z8.h - z11.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x11,0x49,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z8.h - z11.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x93,0x69,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"

  -
    input:
      bytes: [ 0x93,0x69,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"

  -
    input:
      bytes: [ 0x93,0x6b,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z28.h - z31.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x93,0x6b,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 6:7, vgx4], { z28.h - z31.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x11,0x0a,0xb1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z16.h - z19.h }, { z16.h - z19.h }"

  -
    input:
      bytes: [ 0x11,0x0a,0xb1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z16.h - z19.h }, { z16.h - z19.h }"

  -
    input:
      bytes: [ 0x11,0x08,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z0.h - z3.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x11,0x08,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z0.h - z3.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x10,0x4a,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx4], { z16.h - z19.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x10,0x4a,0xb5,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 0:1, vgx4], { z16.h - z19.h }, { z20.h - z23.h }"

  -
    input:
      bytes: [ 0x90,0x09,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z12.h - z15.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x90,0x09,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 0:1, vgx4], { z12.h - z15.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x11,0x48,0xb9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z0.h - z3.h }, { z24.h - z27.h }"

  -
    input:
      bytes: [ 0x11,0x48,0xb9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w10, 2:3, vgx4], { z0.h - z3.h }, { z24.h - z27.h }"

  -
    input:
      bytes: [ 0x91,0x0a,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z20.h - z23.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x91,0x0a,0xbd,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w8, 2:3, vgx4], { z20.h - z23.h }, { z28.h - z31.h }"

  -
    input:
      bytes: [ 0x12,0x69,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx4], { z8.h - z11.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x12,0x69,0xa1,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w11, 4:5, vgx4], { z8.h - z11.h }, { z0.h - z3.h }"

  -
    input:
      bytes: [ 0x93,0x29,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"

  -
    input:
      bytes: [ 0x93,0x29,0xa9,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfmlal za.s[w9, 6:7, vgx4], { z12.h - z15.h }, { z8.h - z11.h }"
