test_cases:
  -
    input:
      bytes: [ 0x08, 0x20, 0x20, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h, z8.h }, pn8, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x5d, 0x35, 0x35, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z21.h, z29.h }, pn13, [x10, x21, lsl #1]"

  -
    input:
      bytes: [ 0xbf, 0x2d, 0x28, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z23.h, z31.h }, pn11, [x13, x8, lsl #1]"

  -
    input:
      bytes: [ 0xff, 0x3f, 0x3f, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z23.h, z31.h }, pn15, [sp, xzr, lsl #1]"

  -
    input:
      bytes: [ 0x08, 0x20, 0x60, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h, z8.h }, pn8, [x0]"

  -
    input:
      bytes: [ 0x5d, 0x35, 0x65, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z21.h, z29.h }, pn13, [x10, #10, mul vl]"

  -
    input:
      bytes: [ 0xbf, 0x2d, 0x68, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z23.h, z31.h }, pn11, [x13, #-16, mul vl]"

  -
    input:
      bytes: [ 0xff, 0x3f, 0x6f, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z23.h, z31.h }, pn15, [sp, #-2, mul vl]"

  -
    input:
      bytes: [ 0x08, 0xa0, 0x20, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h, z4.h, z8.h, z12.h }, pn8, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x59, 0xb5, 0x35, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z17.h, z21.h, z25.h, z29.h }, pn13, [x10, x21, lsl #1]"

  -
    input:
      bytes: [ 0xbb, 0xad, 0x28, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z19.h, z23.h, z27.h, z31.h }, pn11, [x13, x8, lsl #1]"

  -
    input:
      bytes: [ 0xfb, 0xbf, 0x3f, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z19.h, z23.h, z27.h, z31.h }, pn15, [sp, xzr, lsl #1]"

  -
    input:
      bytes: [ 0x08, 0xa0, 0x60, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z0.h, z4.h, z8.h, z12.h }, pn8, [x0]"

  -
    input:
      bytes: [ 0x59, 0xb5, 0x65, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z17.h, z21.h, z25.h, z29.h }, pn13, [x10, #20, mul vl]"

  -
    input:
      bytes: [ 0xbb, 0xad, 0x68, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z19.h, z23.h, z27.h, z31.h }, pn11, [x13, #-32, mul vl]"

  -
    input:
      bytes: [ 0xfb, 0xbf, 0x6f, 0xa1 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "stnt1h { z19.h, z23.h, z27.h, z31.h }, pn15, [sp, #-4, mul vl]"
