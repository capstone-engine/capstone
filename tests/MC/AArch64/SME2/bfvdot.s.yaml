test_cases:
  -
    input:
      bytes: [ 0x18,0x00,0x50,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 0, vgx2], { z0.h, z1.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x18,0x00,0x50,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 0, vgx2], { z0.h, z1.h }, z0.h[0]"

  -
    input:
      bytes: [ 0x5d,0x45,0x55,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w10, 5, vgx2], { z10.h, z11.h }, z5.h[1]"

  -
    input:
      bytes: [ 0x5d,0x45,0x55,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w10, 5, vgx2], { z10.h, z11.h }, z5.h[1]"

  -
    input:
      bytes: [ 0x9f,0x6d,0x58,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w11, 7, vgx2], { z12.h, z13.h }, z8.h[3]"

  -
    input:
      bytes: [ 0x9f,0x6d,0x58,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w11, 7, vgx2], { z12.h, z13.h }, z8.h[3]"

  -
    input:
      bytes: [ 0xdf,0x6f,0x5f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w11, 7, vgx2], { z30.h, z31.h }, z15.h[3]"

  -
    input:
      bytes: [ 0xdf,0x6f,0x5f,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w11, 7, vgx2], { z30.h, z31.h }, z15.h[3]"

  -
    input:
      bytes: [ 0x1d,0x0e,0x50,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 5, vgx2], { z16.h, z17.h }, z0.h[3]"

  -
    input:
      bytes: [ 0x1d,0x0e,0x50,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 5, vgx2], { z16.h, z17.h }, z0.h[3]"

  -
    input:
      bytes: [ 0x19,0x04,0x5e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 1, vgx2], { z0.h, z1.h }, z14.h[1]"

  -
    input:
      bytes: [ 0x19,0x04,0x5e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 1, vgx2], { z0.h, z1.h }, z14.h[1]"

  -
    input:
      bytes: [ 0x58,0x46,0x54,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w10, 0, vgx2], { z18.h, z19.h }, z4.h[1]"

  -
    input:
      bytes: [ 0x58,0x46,0x54,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w10, 0, vgx2], { z18.h, z19.h }, z4.h[1]"

  -
    input:
      bytes: [ 0x98,0x09,0x52,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 0, vgx2], { z12.h, z13.h }, z2.h[2]"

  -
    input:
      bytes: [ 0x98,0x09,0x52,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 0, vgx2], { z12.h, z13.h }, z2.h[2]"

  -
    input:
      bytes: [ 0x19,0x48,0x5a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w10, 1, vgx2], { z0.h, z1.h }, z10.h[2]"

  -
    input:
      bytes: [ 0x19,0x48,0x5a,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w10, 1, vgx2], { z0.h, z1.h }, z10.h[2]"

  -
    input:
      bytes: [ 0xdd,0x0a,0x5e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 5, vgx2], { z22.h, z23.h }, z14.h[2]"

  -
    input:
      bytes: [ 0xdd,0x0a,0x5e,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w8, 5, vgx2], { z22.h, z23.h }, z14.h[2]"

  -
    input:
      bytes: [ 0x1a,0x65,0x51,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w11, 2, vgx2], { z8.h, z9.h }, z1.h[1]"

  -
    input:
      bytes: [ 0x1a,0x65,0x51,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w11, 2, vgx2], { z8.h, z9.h }, z1.h[1]"

  -
    input:
      bytes: [ 0x9f,0x29,0x5b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w9, 7, vgx2], { z12.h, z13.h }, z11.h[2]"

  -
    input:
      bytes: [ 0x9f,0x29,0x5b,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "bfvdot za.s[w9, 7, vgx2], { z12.h, z13.h }, z11.h[2]"
