test_cases:
  -
    input:
      bytes: [ 0x00,0xe0,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z0.s, z1.s }, { z0.s, z1.s }"

  -
    input:
      bytes: [ 0x54,0xe1,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z20.s, z21.s }, { z10.s, z11.s }"

  -
    input:
      bytes: [ 0x96,0xe1,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z22.s, z23.s }, { z12.s, z13.s }"

  -
    input:
      bytes: [ 0xde,0xe3,0xa8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z30.s, z31.s }, { z30.s, z31.s }"

  -
    input:
      bytes: [ 0x00,0xe0,0xb8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z0.s - z3.s }, { z0.s - z3.s }"

  -
    input:
      bytes: [ 0x14,0xe1,0xb8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z20.s - z23.s }, { z8.s - z11.s }"

  -
    input:
      bytes: [ 0x94,0xe1,0xb8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z20.s - z23.s }, { z12.s - z15.s }"

  -
    input:
      bytes: [ 0x9c,0xe3,0xb8,0xc1 ]
      arch: "AArch64"
      options: [ "aarch64", "sme2" ]
    expected:
      insns:
        -
          asm_text: "frintn { z28.s - z31.s }, { z28.s - z31.s }"
