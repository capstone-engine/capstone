test_cases:
  -
    input:
      bytes: [ 0x00, 0xb0, 0x20, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2", "+lut" ]
    expected:
      insns:
        -
          asm_text: "luti2 z0.b, { z0.b }, z0[0]"

  -
    input:
      bytes: [ 0x55, 0xb1, 0x75, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2", "+lut" ]
    expected:
      insns:
        -
          asm_text: "luti2 z21.b, { z10.b }, z21[1]"

  -
    input:
      bytes: [ 0xff, 0xb3, 0xff, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2", "+lut" ]
    expected:
      insns:
        -
          asm_text: "luti2 z31.b, { z31.b }, z31[3]"

  -
    input:
      bytes: [ 0x00, 0xa8, 0x20, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2", "+lut" ]
    expected:
      insns:
        -
          asm_text: "luti2 z0.h, { z0.h }, z0[0]"

  -
    input:
      bytes: [ 0x55, 0xb9, 0x75, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2", "+lut" ]
    expected:
      insns:
        -
          asm_text: "luti2 z21.h, { z10.h }, z21[3]"

  -
    input:
      bytes: [ 0xff, 0xbb, 0xff, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2", "+lut" ]
    expected:
      insns:
        -
          asm_text: "luti2 z31.h, { z31.h }, z31[7]"
