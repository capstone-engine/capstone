test_cases:
  -
    input:
      bytes: [ 0x00, 0x44, 0x20, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z0.h, z0.b, z0.b[0]"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0x4d, 0x28, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z23.h, z13.b, z0.b[3]"

  -
    input:
      bytes: [ 0xff, 0x4f, 0x3f, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z31.h, z31.b, z7.b[7]"

  -
    input:
      bytes: [ 0x00, 0x84, 0x20, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z0.h, z0.b, z0.b"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0x85, 0x28, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z23.h, z13.b, z8.b"

  -
    input:
      bytes: [ 0xff, 0x87, 0x3f, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z31.h, z31.b, z31.b"

  -
    input:
      bytes: [ 0x00, 0x44, 0x60, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z0.s, z0.b, z0.b[0]"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0x45, 0x68, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z23.s, z13.b, z0.b[1]"

  -
    input:
      bytes: [ 0xff, 0x47, 0x7f, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z31.s, z31.b, z7.b[3]"

  -
    input:
      bytes: [ 0x00, 0x84, 0x60, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z0.s, z0.b, z0.b"

  -
    input:
      bytes: [ 0xf7, 0xbf, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z31"

  -
    input:
      bytes: [ 0xb7, 0x85, 0x68, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z23.s, z13.b, z8.b"

  -
    input:
      bytes: [ 0xff, 0x87, 0x7f, 0x64 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "ssve-fp8dot2", "+ssve-fp8dot4" ]
    expected:
      insns:
        -
          asm_text: "fdot z31.s, z31.b, z31.b"
