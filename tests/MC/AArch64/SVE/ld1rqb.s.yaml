test_cases:
  -
    input:
      bytes: [ 0x00,0x20,0x00,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z0.b }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00,0x00,0x00,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z0.b }, p0/z, [x0, x0]"

  -
    input:
      bytes: [ 0xff,0x3f,0x0f,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z31.b }, p7/z, [sp, #-16]"

  -
    input:
      bytes: [ 0xb7,0x2d,0x08,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z23.b }, p3/z, [x13, #-128]"

  -
    input:
      bytes: [ 0x55,0x35,0x07,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z21.b }, p5/z, [x10, #112]"

  -
    input:
      bytes: [ 0x00,0x20,0x00,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z0.b }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00,0x00,0x00,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z0.b }, p0/z, [x0, x0]"

  -
    input:
      bytes: [ 0xff,0x3f,0x0f,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z31.b }, p7/z, [sp, #-16]"

  -
    input:
      bytes: [ 0xb7,0x2d,0x08,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z23.b }, p3/z, [x13, #-128]"

  -
    input:
      bytes: [ 0x55,0x35,0x07,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1rqb { z21.b }, p5/z, [x10, #112]"
