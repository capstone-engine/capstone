test_cases:
  -
    input:
      bytes: [ 0x00, 0xa0, 0x5a, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.h, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x5c, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.s, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x9c, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.s, p0/m, z0.s"

  -
    input:
      bytes: [ 0x00, 0xa0, 0xd8, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.s, p0/m, z0.d"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x5e, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.d, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00, 0xa0, 0xdc, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.d, p0/m, z0.s"

  -
    input:
      bytes: [ 0x00, 0xa0, 0xde, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.d, p0/m, z0.d"

  -
    input:
      bytes: [ 0xe5, 0x20, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z5.d, p0/z, z7.d"

  -
    input:
      bytes: [ 0x05, 0xa0, 0xde, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z5.d, p0/m, z0.d"

  -
    input:
      bytes: [ 0xe5, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z5, z7"

  -
    input:
      bytes: [ 0x05, 0xa0, 0xde, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z5.d, p0/m, z0.d"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x5a, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.h, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x5c, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.s, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x9c, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.s, p0/m, z0.s"

  -
    input:
      bytes: [ 0x00, 0xa0, 0xd8, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.s, p0/m, z0.d"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x5e, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.d, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00, 0xa0, 0xdc, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.d, p0/m, z0.s"

  -
    input:
      bytes: [ 0x00, 0xa0, 0xde, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z0.d, p0/m, z0.d"

  -
    input:
      bytes: [ 0xe5, 0x20, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z5.d, p0/z, z7.d"

  -
    input:
      bytes: [ 0x05, 0xa0, 0xde, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z5.d, p0/m, z0.d"

  -
    input:
      bytes: [ 0xe5, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z5, z7"

  -
    input:
      bytes: [ 0x05, 0xa0, 0xde, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvtzs z5.d, p0/m, z0.d"
