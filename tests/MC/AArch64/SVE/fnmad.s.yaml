test_cases:
  -
    input:
      bytes: [ 0x20, 0xdc, 0x7f, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.h, p7/m, z1.h, z31.h"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xbf, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.s, p7/m, z1.s, z31.s"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xff, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.d, p7/m, z1.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0x3c, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0.d, p7/z, z7.d"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xff, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.d, p7/m, z1.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xff, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.d, p7/m, z1.d, z31.d"

  -
    input:
      bytes: [ 0x20, 0xdc, 0x7f, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.h, p7/m, z1.h, z31.h"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xbf, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.s, p7/m, z1.s, z31.s"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xff, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.d, p7/m, z1.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0x3c, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0.d, p7/z, z7.d"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xff, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.d, p7/m, z1.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0xdc, 0xff, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fnmad z0.d, p7/m, z1.d, z31.d"
