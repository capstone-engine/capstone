test_cases:
  -
    input:
      bytes: [ 0xe0, 0xbf, 0x30, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta w0, p7, w0, z31.b"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0x70, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta w0, p7, w0, z31.h"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0xb0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta w0, p7, w0, z31.s"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0xf0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta x0, p7, x0, z31.d"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x2a, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta b0, p7, b0, z31.b"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x6a, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta h0, p7, h0, z31.h"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xaa, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta s0, p7, s0, z31.s"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xea, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta d0, p7, d0, z31.d"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x28, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.b, p7, z0.b, z31.b"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x68, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.h, p7, z0.h, z31.h"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xa8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.s, p7, z0.s, z31.s"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xe8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.d, p7, z0.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xe8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.d, p7, z0.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0x30, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta w0, p7, w0, z31.b"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0x70, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta w0, p7, w0, z31.h"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0xb0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta w0, p7, w0, z31.s"

  -
    input:
      bytes: [ 0xe0, 0xbf, 0xf0, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta x0, p7, x0, z31.d"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x2a, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta b0, p7, b0, z31.b"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x6a, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta h0, p7, h0, z31.h"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xaa, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta s0, p7, s0, z31.s"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xea, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta d0, p7, d0, z31.d"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x28, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.b, p7, z0.b, z31.b"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x68, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.h, p7, z0.h, z31.h"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xa8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.s, p7, z0.s, z31.s"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xe8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.d, p7, z0.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xe8, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "clasta z0.d, p7, z0.d, z31.d"
