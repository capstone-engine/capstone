test_cases:
  -
    input:
      bytes: [ 0xff, 0x7f, 0xbf, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.h }, p7/z, [sp]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xdf, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.s }, p7/z, [sp]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xff, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.d }, p7/z, [sp]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xbf, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.h }, p7/z, [sp]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xdf, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.s }, p7/z, [sp]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xff, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.d }, p7/z, [sp]"

  -
    input:
      bytes: [ 0x00, 0x60, 0xa0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.h }, p0/z, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x00, 0x60, 0xc0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.s }, p0/z, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x00, 0x60, 0xe0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.d }, p0/z, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x00, 0x60, 0x80, 0x84 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.s }, p0/z, [x0, z0.s, uxtw]"

  -
    input:
      bytes: [ 0x00, 0x60, 0xc0, 0x84 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.s }, p0/z, [x0, z0.s, sxtw]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xbf, 0x84 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.s }, p7/z, [sp, z31.s, uxtw #1]"

  -
    input:
      bytes: [ 0xff, 0x7f, 0xff, 0x84 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.s }, p7/z, [sp, z31.s, sxtw #1]"

  -
    input:
      bytes: [ 0xff, 0xff, 0xdf, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.d }, p7/z, [sp, z31.d]"

  -
    input:
      bytes: [ 0xb7, 0xed, 0xe8, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z23.d }, p3/z, [x13, z8.d, lsl #1]"

  -
    input:
      bytes: [ 0x55, 0x75, 0x95, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z21.d }, p5/z, [x10, z21.d, uxtw]"

  -
    input:
      bytes: [ 0x55, 0x75, 0xd5, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z21.d }, p5/z, [x10, z21.d, sxtw]"

  -
    input:
      bytes: [ 0x00, 0x60, 0xa0, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.d }, p0/z, [x0, z0.d, uxtw #1]"

  -
    input:
      bytes: [ 0x00, 0x60, 0xe0, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.d }, p0/z, [x0, z0.d, sxtw #1]"

  -
    input:
      bytes: [ 0xff, 0xff, 0xbf, 0x84 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.s }, p7/z, [z31.s, #62]"

  -
    input:
      bytes: [ 0x00, 0xe0, 0xa0, 0x84 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.s }, p0/z, [z0.s]"

  -
    input:
      bytes: [ 0xff, 0xff, 0xbf, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z31.d }, p7/z, [z31.d, #62]"

  -
    input:
      bytes: [ 0x00, 0xe0, 0xa0, 0xc4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldff1h { z0.d }, p0/z, [z0.d]"
