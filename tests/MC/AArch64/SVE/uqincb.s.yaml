test_cases:
  -
    input:
      bytes: [ 0xe0, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x3f, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, all, mul #16"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x2f, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0, all, mul #16"

  -
    input:
      bytes: [ 0x00, 0xf4, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0, pow2"

  -
    input:
      bytes: [ 0x00, 0xf4, 0x2f, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0, pow2, mul #16"

  -
    input:
      bytes: [ 0x00, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, pow2"

  -
    input:
      bytes: [ 0x20, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl1"

  -
    input:
      bytes: [ 0x40, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl2"

  -
    input:
      bytes: [ 0x60, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl3"

  -
    input:
      bytes: [ 0x80, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl4"

  -
    input:
      bytes: [ 0xa0, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl5"

  -
    input:
      bytes: [ 0xc0, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl6"

  -
    input:
      bytes: [ 0xe0, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl7"

  -
    input:
      bytes: [ 0x00, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl8"

  -
    input:
      bytes: [ 0x20, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl16"

  -
    input:
      bytes: [ 0x40, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl32"

  -
    input:
      bytes: [ 0x60, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl64"

  -
    input:
      bytes: [ 0x80, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl128"

  -
    input:
      bytes: [ 0xa0, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl256"

  -
    input:
      bytes: [ 0xc0, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #14"

  -
    input:
      bytes: [ 0xe0, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #15"

  -
    input:
      bytes: [ 0x00, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #16"

  -
    input:
      bytes: [ 0x20, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #17"

  -
    input:
      bytes: [ 0x40, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #18"

  -
    input:
      bytes: [ 0x60, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #19"

  -
    input:
      bytes: [ 0x80, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #20"

  -
    input:
      bytes: [ 0xa0, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #21"

  -
    input:
      bytes: [ 0xc0, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #22"

  -
    input:
      bytes: [ 0xe0, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #23"

  -
    input:
      bytes: [ 0x00, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #24"

  -
    input:
      bytes: [ 0x20, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #25"

  -
    input:
      bytes: [ 0x40, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #26"

  -
    input:
      bytes: [ 0x60, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #27"

  -
    input:
      bytes: [ 0x80, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #28"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x3f, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, all, mul #16"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0"

  -
    input:
      bytes: [ 0xe0, 0xf7, 0x2f, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0, all, mul #16"

  -
    input:
      bytes: [ 0x00, 0xf4, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0, pow2"

  -
    input:
      bytes: [ 0x00, 0xf4, 0x2f, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb w0, pow2, mul #16"

  -
    input:
      bytes: [ 0x00, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, pow2"

  -
    input:
      bytes: [ 0x20, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl1"

  -
    input:
      bytes: [ 0x40, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl2"

  -
    input:
      bytes: [ 0x60, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl3"

  -
    input:
      bytes: [ 0x80, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl4"

  -
    input:
      bytes: [ 0xa0, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl5"

  -
    input:
      bytes: [ 0xc0, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl6"

  -
    input:
      bytes: [ 0xe0, 0xf4, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl7"

  -
    input:
      bytes: [ 0x00, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl8"

  -
    input:
      bytes: [ 0x20, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl16"

  -
    input:
      bytes: [ 0x40, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl32"

  -
    input:
      bytes: [ 0x60, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl64"

  -
    input:
      bytes: [ 0x80, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl128"

  -
    input:
      bytes: [ 0xa0, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, vl256"

  -
    input:
      bytes: [ 0xc0, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #14"

  -
    input:
      bytes: [ 0xe0, 0xf5, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #15"

  -
    input:
      bytes: [ 0x00, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #16"

  -
    input:
      bytes: [ 0x20, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #17"

  -
    input:
      bytes: [ 0x40, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #18"

  -
    input:
      bytes: [ 0x60, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #19"

  -
    input:
      bytes: [ 0x80, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #20"

  -
    input:
      bytes: [ 0xa0, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #21"

  -
    input:
      bytes: [ 0xc0, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #22"

  -
    input:
      bytes: [ 0xe0, 0xf6, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #23"

  -
    input:
      bytes: [ 0x00, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #24"

  -
    input:
      bytes: [ 0x20, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #25"

  -
    input:
      bytes: [ 0x40, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #26"

  -
    input:
      bytes: [ 0x60, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #27"

  -
    input:
      bytes: [ 0x80, 0xf7, 0x30, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqincb x0, #28"
