test_cases:
  -
    input:
      bytes: [ 0x00, 0x80, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, p0/m, z0.h, #0.5"

  -
    input:
      bytes: [ 0x00, 0x80, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, p0/m, z0.h, #0.5"

  -
    input:
      bytes: [ 0x00, 0x80, 0x99, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.s, p0/m, z0.s, #0.5"

  -
    input:
      bytes: [ 0x00, 0x80, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p0/m, z0.d, #0.5"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.h, p7/m, z31.h, #1.0"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.h, p7/m, z31.h, #1.0"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0x99, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.s, p7/m, z31.s, #1.0"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.d, p7/m, z31.d, #1.0"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x41, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, p7/m, z0.h, z31.h"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x81, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.s, p7/m, z0.s, z31.s"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xc1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p7/m, z0.d, z31.d"

  -
    input:
      bytes: [ 0x20, 0x04, 0x5f, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, z1.h, z31.h"

  -
    input:
      bytes: [ 0x20, 0x04, 0x9f, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.s, z1.s, z31.s"

  -
    input:
      bytes: [ 0x20, 0x04, 0xdf, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, z1.d, z31.d"

  -
    input:
      bytes: [ 0xdf, 0x3c, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.d, p7/m, z31.d, #1.0"

  -
    input:
      bytes: [ 0xdf, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.d, p7/m, z31.d, #1.0"

  -
    input:
      bytes: [ 0xe0, 0x3c, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0.d, p7/z, z7.d"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xc1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p7/m, z0.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xc1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p7/m, z0.d, z31.d"

  -
    input:
      bytes: [ 0x00, 0x80, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, p0/m, z0.h, #0.5"

  -
    input:
      bytes: [ 0x00, 0x80, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, p0/m, z0.h, #0.5"

  -
    input:
      bytes: [ 0x00, 0x80, 0x99, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.s, p0/m, z0.s, #0.5"

  -
    input:
      bytes: [ 0x00, 0x80, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p0/m, z0.d, #0.5"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.h, p7/m, z31.h, #1.0"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0x59, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.h, p7/m, z31.h, #1.0"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0x99, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.s, p7/m, z31.s, #1.0"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.d, p7/m, z31.d, #1.0"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x41, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, p7/m, z0.h, z31.h"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0x81, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.s, p7/m, z0.s, z31.s"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xc1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p7/m, z0.d, z31.d"

  -
    input:
      bytes: [ 0x20, 0x04, 0x5f, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.h, z1.h, z31.h"

  -
    input:
      bytes: [ 0x20, 0x04, 0x9f, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.s, z1.s, z31.s"

  -
    input:
      bytes: [ 0x20, 0x04, 0xdf, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, z1.d, z31.d"

  -
    input:
      bytes: [ 0xdf, 0x3c, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.d, p7/m, z31.d, #1.0"

  -
    input:
      bytes: [ 0xdf, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0x3f, 0x9c, 0xd9, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z31.d, p7/m, z31.d, #1.0"

  -
    input:
      bytes: [ 0xe0, 0x3c, 0xd0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0.d, p7/z, z7.d"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xc1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p7/m, z0.d, z31.d"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0xe0, 0x9f, 0xc1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fsub z0.d, p7/m, z0.d, z31.d"
