test_cases:
  -
    input:
      bytes: [ 0x10, 0x00, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, z0.b"

  -
    input:
      bytes: [ 0x10, 0x00, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, z0.h"

  -
    input:
      bytes: [ 0x10, 0x00, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, z0.s"

  -
    input:
      bytes: [ 0x10, 0x00, 0xc0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.d, p0/z, z0.d, z0.d"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, z0.d"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, z0.d"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, z0.d"

  -
    input:
      bytes: [ 0x10, 0x00, 0x20, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, #0"

  -
    input:
      bytes: [ 0x10, 0x00, 0x60, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, #0"

  -
    input:
      bytes: [ 0x10, 0x00, 0xa0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, #0"

  -
    input:
      bytes: [ 0x10, 0x00, 0xe0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.d, p0/z, z0.d, #0"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x3f, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, #127"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x7f, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, #127"

  -
    input:
      bytes: [ 0x10, 0xc0, 0xbf, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, #127"

  -
    input:
      bytes: [ 0x10, 0xc0, 0xff, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.d, p0/z, z0.d, #127"

  -
    input:
      bytes: [ 0x10, 0x00, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, z0.b"

  -
    input:
      bytes: [ 0x10, 0x00, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, z0.h"

  -
    input:
      bytes: [ 0x10, 0x00, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, z0.s"

  -
    input:
      bytes: [ 0x10, 0x00, 0xc0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.d, p0/z, z0.d, z0.d"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, z0.d"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, z0.d"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, z0.d"

  -
    input:
      bytes: [ 0x10, 0x00, 0x20, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, #0"

  -
    input:
      bytes: [ 0x10, 0x00, 0x60, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, #0"

  -
    input:
      bytes: [ 0x10, 0x00, 0xa0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, #0"

  -
    input:
      bytes: [ 0x10, 0x00, 0xe0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.d, p0/z, z0.d, #0"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x3f, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.b, p0/z, z0.b, #127"

  -
    input:
      bytes: [ 0x10, 0xc0, 0x7f, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.h, p0/z, z0.h, #127"

  -
    input:
      bytes: [ 0x10, 0xc0, 0xbf, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.s, p0/z, z0.s, #127"

  -
    input:
      bytes: [ 0x10, 0xc0, 0xff, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmphi p0.d, p0/z, z0.d, #127"
