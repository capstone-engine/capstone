test_cases:
  -
    input:
      bytes: [ 0x00,0xe0,0x00,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z0.s }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00,0xe0,0x00,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z0.s }, p0/z, [x0]"

  -
    input:
      bytes: [ 0xb7,0xed,0x08,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z23.s }, p3/z, [x13, #-8, mul vl]"

  -
    input:
      bytes: [ 0x55,0xf5,0x07,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z21.s }, p5/z, [x10, #7, mul vl]"

  -
    input:
      bytes: [ 0x00,0xc0,0x00,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z0.s }, p0/z, [x0, x0, lsl #2]"

  -
    input:
      bytes: [ 0x00,0xe0,0x00,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z0.s }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00,0xe0,0x00,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z0.s }, p0/z, [x0]"

  -
    input:
      bytes: [ 0xb7,0xed,0x08,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z23.s }, p3/z, [x13, #-8, mul vl]"

  -
    input:
      bytes: [ 0x55,0xf5,0x07,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z21.s }, p5/z, [x10, #7, mul vl]"

  -
    input:
      bytes: [ 0x00,0xc0,0x00,0xa5 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ldnt1w { z0.s }, p0/z, [x0, x0, lsl #2]"
