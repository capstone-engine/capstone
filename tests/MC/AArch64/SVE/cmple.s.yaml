test_cases:
  -
    input:
      bytes: [ 0x20, 0x80, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.b, p0/z, z1.b, z0.b"

  -
    input:
      bytes: [ 0x20, 0x80, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.h, p0/z, z1.h, z0.h"

  -
    input:
      bytes: [ 0x20, 0x80, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.s, p0/z, z1.s, z0.s"

  -
    input:
      bytes: [ 0x20, 0x80, 0xc0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.d, p0/z, z1.d, z0.d"

  -
    input:
      bytes: [ 0x10, 0x60, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.b, p0/z, z0.b, z0.d"

  -
    input:
      bytes: [ 0x10, 0x60, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.h, p0/z, z0.h, z0.d"

  -
    input:
      bytes: [ 0x10, 0x60, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.s, p0/z, z0.s, z0.d"

  -
    input:
      bytes: [ 0x10, 0x20, 0x10, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.b, p0/z, z0.b, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0x50, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.h, p0/z, z0.h, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0x90, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.s, p0/z, z0.s, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0xd0, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.d, p0/z, z0.d, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0x0f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.b, p0/z, z0.b, #15"

  -
    input:
      bytes: [ 0x10, 0x20, 0x4f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.h, p0/z, z0.h, #15"

  -
    input:
      bytes: [ 0x10, 0x20, 0x8f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.s, p0/z, z0.s, #15"

  -
    input:
      bytes: [ 0x10, 0x20, 0xcf, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.d, p0/z, z0.d, #15"

  -
    input:
      bytes: [ 0x20, 0x80, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.b, p0/z, z1.b, z0.b"

  -
    input:
      bytes: [ 0x20, 0x80, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.h, p0/z, z1.h, z0.h"

  -
    input:
      bytes: [ 0x20, 0x80, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.s, p0/z, z1.s, z0.s"

  -
    input:
      bytes: [ 0x20, 0x80, 0xc0, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpge p0.d, p0/z, z1.d, z0.d"

  -
    input:
      bytes: [ 0x10, 0x60, 0x00, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.b, p0/z, z0.b, z0.d"

  -
    input:
      bytes: [ 0x10, 0x60, 0x40, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.h, p0/z, z0.h, z0.d"

  -
    input:
      bytes: [ 0x10, 0x60, 0x80, 0x24 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.s, p0/z, z0.s, z0.d"

  -
    input:
      bytes: [ 0x10, 0x20, 0x10, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.b, p0/z, z0.b, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0x50, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.h, p0/z, z0.h, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0x90, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.s, p0/z, z0.s, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0xd0, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.d, p0/z, z0.d, #-16"

  -
    input:
      bytes: [ 0x10, 0x20, 0x0f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.b, p0/z, z0.b, #15"

  -
    input:
      bytes: [ 0x10, 0x20, 0x4f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.h, p0/z, z0.h, #15"

  -
    input:
      bytes: [ 0x10, 0x20, 0x8f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.s, p0/z, z0.s, #15"

  -
    input:
      bytes: [ 0x10, 0x20, 0xcf, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmple p0.d, p0/z, z0.d, #15"
