test_cases:
  -
    input:
      bytes: [ 0x00,0x04,0x60,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.h, z0.h, z0.h"

  -
    input:
      bytes: [ 0x55,0x05,0x35,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.b, z10.b, z21.b"

  -
    input:
      bytes: [ 0xff,0x1f,0xc1,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.d, p7/m, z31.d, z31.d"

  -
    input:
      bytes: [ 0xb7,0x0d,0x41,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.h, p3/m, z23.h, z13.h"

  -
    input:
      bytes: [ 0xff,0x07,0x7f,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.h, z31.h, z31.h"

  -
    input:
      bytes: [ 0x55,0x05,0x75,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.h, z10.h, z21.h"

  -
    input:
      bytes: [ 0xff,0x07,0x3f,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.b, z31.b, z31.b"

  -
    input:
      bytes: [ 0x00,0x04,0xa0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.s, z0.s, z0.s"

  -
    input:
      bytes: [ 0xb7,0x0d,0x81,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.s, p3/m, z23.s, z13.s"

  -
    input:
      bytes: [ 0xb7,0x05,0x28,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.b, z13.b, z8.b"

  -
    input:
      bytes: [ 0x55,0x05,0xf5,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.d, z10.d, z21.d"

  -
    input:
      bytes: [ 0x55,0x05,0xb5,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.s, z10.s, z21.s"

  -
    input:
      bytes: [ 0x55,0x15,0x81,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.s, p5/m, z21.s, z10.s"

  -
    input:
      bytes: [ 0xff,0x1f,0x81,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.s, p7/m, z31.s, z31.s"

  -
    input:
      bytes: [ 0x00,0x00,0xc1,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.d, p0/m, z0.d, z0.d"

  -
    input:
      bytes: [ 0x00,0x04,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.b, z0.b, z0.b"

  -
    input:
      bytes: [ 0xb7,0x05,0xe8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.d, z13.d, z8.d"

  -
    input:
      bytes: [ 0xb7,0x0d,0xc1,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.d, p3/m, z23.d, z13.d"

  -
    input:
      bytes: [ 0xb7,0x05,0xa8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.s, z13.s, z8.s"

  -
    input:
      bytes: [ 0xff,0x1f,0x01,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.b, p7/m, z31.b, z31.b"

  -
    input:
      bytes: [ 0x00,0x00,0x41,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.h, p0/m, z0.h, z0.h"

  -
    input:
      bytes: [ 0xff,0x07,0xff,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.d, z31.d, z31.d"

  -
    input:
      bytes: [ 0xff,0x1f,0x41,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.h, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0xb7,0x05,0x68,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.h, z13.h, z8.h"

  -
    input:
      bytes: [ 0x55,0x15,0x01,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.b, p5/m, z21.b, z10.b"

  -
    input:
      bytes: [ 0x55,0x15,0xc1,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.d, p5/m, z21.d, z10.d"

  -
    input:
      bytes: [ 0x00,0x04,0xe0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0xff,0x07,0xbf,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.s, z31.s, z31.s"

  -
    input:
      bytes: [ 0x00,0x00,0x01,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.b, p0/m, z0.b, z0.b"

  -
    input:
      bytes: [ 0x00,0x00,0x81,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.s, p0/m, z0.s, z0.s"

  -
    input:
      bytes: [ 0x55,0x15,0x41,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z21.h, p5/m, z21.h, z10.h"

  -
    input:
      bytes: [ 0xb7,0x0d,0x01,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.b, p3/m, z23.b, z13.b"

  -
    input:
      bytes: [ 0x00,0xc0,0x21,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.b, z0.b, #0"

  -
    input:
      bytes: [ 0xff,0xdf,0x21,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.b, z31.b, #255"

  -
    input:
      bytes: [ 0x00,0xc0,0x61,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.h, z0.h, #0"

  -
    input:
      bytes: [ 0x00,0xe0,0x61,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.h, z0.h, #0, lsl #8"

  -
    input:
      bytes: [ 0xff,0xff,0x61,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.h, z31.h, #65280"

  -
    input:
      bytes: [ 0xff,0xff,0x61,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.h, z31.h, #65280"

  -
    input:
      bytes: [ 0x00,0xc0,0xa1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.s, z0.s, #0"

  -
    input:
      bytes: [ 0x00,0xe0,0xa1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.s, z0.s, #0, lsl #8"

  -
    input:
      bytes: [ 0xff,0xff,0xa1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.s, z31.s, #65280"

  -
    input:
      bytes: [ 0xff,0xff,0xa1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.s, z31.s, #65280"

  -
    input:
      bytes: [ 0x00,0xc0,0xe1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.d, z0.d, #0"

  -
    input:
      bytes: [ 0x00,0xe0,0xe1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z0.d, z0.d, #0, lsl #8"

  -
    input:
      bytes: [ 0xff,0xff,0xe1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.d, z31.d, #65280"

  -
    input:
      bytes: [ 0xff,0xff,0xe1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.d, z31.d, #65280"

  -
    input:
      bytes: [ 0xd7,0x2f,0x10,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23.b, p3/z, z30.b"

  -
    input:
      bytes: [ 0xb7,0x0d,0x01,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.b, p3/m, z23.b, z13.b"

  -
    input:
      bytes: [ 0xd7,0xbf,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z23, z30"

  -
    input:
      bytes: [ 0xb7,0x0d,0x01,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z23.b, p3/m, z23.b, z13.b"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xff,0xff,0xe1,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sub z31.d, z31.d, #65280"
