test_cases:
  -
    input:
      bytes: [ 0x00,0x80,0x40,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z0.h, p0/m, z0.h, z0.h, #90"

  -
    input:
      bytes: [ 0x00,0x80,0x80,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z0.s, p0/m, z0.s, z0.s, #90"

  -
    input:
      bytes: [ 0x00,0x80,0xc0,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z0.d, p0/m, z0.d, z0.d, #90"

  -
    input:
      bytes: [ 0xff,0x9f,0x41,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z31.h, p7/m, z31.h, z31.h, #270"

  -
    input:
      bytes: [ 0xff,0x9f,0x81,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z31.s, p7/m, z31.s, z31.s, #270"

  -
    input:
      bytes: [ 0xff,0x9f,0xc1,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z31.d, p7/m, z31.d, z31.d, #270"

  -
    input:
      bytes: [ 0xc4,0x3c,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0xe4,0x9f,0xc1,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z4.d, p7/m, z4.d, z31.d, #270"

  -
    input:
      bytes: [ 0xc4,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4,0x9f,0xc1,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcadd z4.d, p7/m, z4.d, z31.d, #270"

  -
    input:
      bytes: [ 0x00,0x80,0x40,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z0.h, p0/m, z0.h, z0.h, #90"

  -
    input:
      bytes: [ 0x00,0x80,0x80,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z0.s, p0/m, z0.s, z0.s, #90"

  -
    input:
      bytes: [ 0x00,0x80,0xc0,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z0.d, p0/m, z0.d, z0.d, #90"

  -
    input:
      bytes: [ 0xff,0x9f,0x41,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z31.h, p7/m, z31.h, z31.h, #270"

  -
    input:
      bytes: [ 0xff,0x9f,0x81,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z31.s, p7/m, z31.s, z31.s, #270"

  -
    input:
      bytes: [ 0xff,0x9f,0xc1,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z31.d, p7/m, z31.d, z31.d, #270"

  -
    input:
      bytes: [ 0xc4,0x3c,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0xe4,0x9f,0xc1,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z4.d, p7/m, z4.d, z31.d, #270"

  -
    input:
      bytes: [ 0xc4,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4,0x9f,0xc1,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcadd z4.d, p7/m, z4.d, z31.d, #270"
