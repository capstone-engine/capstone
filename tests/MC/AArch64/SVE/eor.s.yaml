test_cases:
  -
    input:
      bytes: [ 0xa5, 0x2e, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z5.b, z5.b, #0xf9"

  -
    input:
      bytes: [ 0xb7, 0x6d, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z23.h, z23.h, #0xfff9"

  -
    input:
      bytes: [ 0xa0, 0xeb, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.s, z0.s, #0xfffffff9"

  -
    input:
      bytes: [ 0xa0, 0xef, 0x43, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, #0xfffffffffffffff9"

  -
    input:
      bytes: [ 0x25, 0x3e, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z5.b, z5.b, #0x6"

  -
    input:
      bytes: [ 0x37, 0x7c, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z23.h, z23.h, #0x6"

  -
    input:
      bytes: [ 0x20, 0xf8, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.s, z0.s, #0x6"

  -
    input:
      bytes: [ 0x20, 0xf8, 0x43, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, #0x6"

  -
    input:
      bytes: [ 0xb7, 0x31, 0xa8, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z23.d, z13.d, z8.d"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0xff, 0x1f, 0x99, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z31.s, p7/m, z31.s, z31.s"

  -
    input:
      bytes: [ 0xff, 0x1f, 0x59, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z31.h, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0xff, 0x1f, 0xd9, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z31.d, p7/m, z31.d, z31.d"

  -
    input:
      bytes: [ 0xff, 0x1f, 0x19, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z31.b, p7/m, z31.b, z31.b"

  -
    input:
      bytes: [ 0x00, 0x42, 0x01, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor p0.b, p0/z, p0.b, p1.b"

  -
    input:
      bytes: [ 0x00, 0x42, 0x00, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "not p0.b, p0/z, p0.b"

  -
    input:
      bytes: [ 0xef, 0x7f, 0x0f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "not p15.b, p15/z, p15.b"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0xc4, 0x3c, 0x10, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.b, p7/z, z6.b"

  -
    input:
      bytes: [ 0xe4, 0x1f, 0x19, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z4.b, p7/m, z4.b, z31.b"

  -
    input:
      bytes: [ 0xc4, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4, 0x1f, 0x19, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z4.b, p7/m, z4.b, z31.b"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0xf8, 0x43, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, #0x6"

  -
    input:
      bytes: [ 0xa5, 0x2e, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z5.b, z5.b, #0xf9"

  -
    input:
      bytes: [ 0xb7, 0x6d, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z23.h, z23.h, #0xfff9"

  -
    input:
      bytes: [ 0xa0, 0xeb, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.s, z0.s, #0xfffffff9"

  -
    input:
      bytes: [ 0xa0, 0xef, 0x43, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, #0xfffffffffffffff9"

  -
    input:
      bytes: [ 0x25, 0x3e, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z5.b, z5.b, #0x6"

  -
    input:
      bytes: [ 0x37, 0x7c, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z23.h, z23.h, #0x6"

  -
    input:
      bytes: [ 0x20, 0xf8, 0x40, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.s, z0.s, #0x6"

  -
    input:
      bytes: [ 0x20, 0xf8, 0x43, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, #0x6"

  -
    input:
      bytes: [ 0xb7, 0x31, 0xa8, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z23.d, z13.d, z8.d"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0xff, 0x1f, 0x99, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z31.s, p7/m, z31.s, z31.s"

  -
    input:
      bytes: [ 0xff, 0x1f, 0x59, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z31.h, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0xff, 0x1f, 0xd9, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z31.d, p7/m, z31.d, z31.d"

  -
    input:
      bytes: [ 0xff, 0x1f, 0x19, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z31.b, p7/m, z31.b, z31.b"

  -
    input:
      bytes: [ 0x00, 0x42, 0x01, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor p0.b, p0/z, p0.b, p1.b"

  -
    input:
      bytes: [ 0x00, 0x42, 0x00, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "not p0.b, p0/z, p0.b"

  -
    input:
      bytes: [ 0xef, 0x7f, 0x0f, 0x25 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "not p15.b, p15/z, p15.b"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0x00, 0x30, 0xa0, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, z0.d"

  -
    input:
      bytes: [ 0xc4, 0x3c, 0x10, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.b, p7/z, z6.b"

  -
    input:
      bytes: [ 0xe4, 0x1f, 0x19, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z4.b, p7/m, z4.b, z31.b"

  -
    input:
      bytes: [ 0xc4, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4, 0x1f, 0x19, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z4.b, p7/m, z4.b, z31.b"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0xf8, 0x43, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "eor z0.d, z0.d, #0x6"
