test_cases:
  -
    input:
      bytes: [ 0x00,0xa0,0x80,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1sw { z0.d }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00,0xa0,0x80,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1sw { z0.d }, p0/z, [x0]"

  -
    input:
      bytes: [ 0xff,0xbf,0x8f,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1sw { z31.d }, p7/z, [sp, #-1, mul vl]"

  -
    input:
      bytes: [ 0x55,0xb5,0x85,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1sw { z21.d }, p5/z, [x10, #5, mul vl]"

  -
    input:
      bytes: [ 0xf7,0x4f,0x88,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1sw { z23.d }, p3/z, [sp, x8, lsl #2]"

  -
    input:
      bytes: [ 0xb7,0x4d,0x88,0xa4 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld1sw { z23.d }, p3/z, [x13, x8, lsl #2]"
