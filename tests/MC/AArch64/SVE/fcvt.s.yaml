test_cases:
  -
    input:
      bytes: [ 0x00,0xa0,0x88,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z0.h, p0/m, z0.s"

  -
    input:
      bytes: [ 0x00,0xa0,0xc8,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z0.h, p0/m, z0.d"

  -
    input:
      bytes: [ 0x00,0xa0,0x89,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z0.s, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00,0xa0,0xca,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z0.s, p0/m, z0.d"

  -
    input:
      bytes: [ 0x00,0xa0,0xc9,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z0.d, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00,0xa0,0xcb,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z0.d, p0/m, z0.s"

  -
    input:
      bytes: [ 0xe5,0x20,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z5.d, p0/z, z7.d"

  -
    input:
      bytes: [ 0x05,0xa0,0xcb,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z5.d, p0/m, z0.s"

  -
    input:
      bytes: [ 0xe5,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z5, z7"

  -
    input:
      bytes: [ 0x05,0xa0,0xcb,0x65 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcvt z5.d, p0/m, z0.s"
