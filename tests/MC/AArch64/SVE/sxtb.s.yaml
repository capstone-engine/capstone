test_cases:
  -
    input:
      bytes: [ 0x00,0xa0,0x50,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z0.h, p0/m, z0.h"

  -
    input:
      bytes: [ 0x00,0xa0,0x90,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z0.s, p0/m, z0.s"

  -
    input:
      bytes: [ 0x00,0xa0,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z0.d, p0/m, z0.d"

  -
    input:
      bytes: [ 0xff,0xbf,0x50,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z31.h, p7/m, z31.h"

  -
    input:
      bytes: [ 0xff,0xbf,0x90,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z31.s, p7/m, z31.s"

  -
    input:
      bytes: [ 0xff,0xbf,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z31.d, p7/m, z31.d"

  -
    input:
      bytes: [ 0xc4,0x3c,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0xe4,0xbf,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z4.d, p7/m, z31.d"

  -
    input:
      bytes: [ 0xc4,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4,0xbf,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sxtb z4.d, p7/m, z31.d"
