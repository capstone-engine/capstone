test_cases:
  -
    input:
      bytes: [ 0x00,0xd0,0x28,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z0.b, z0.b, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0x28,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.b, z31.b, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0x68,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z0.h, z0.h, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0x68,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.h, z31.h, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0xa8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z0.s, z0.s, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0xa8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.s, z31.s, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0xe8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z0.d, z0.d, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0xe8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.d, z31.d, #127"

  -
    input:
      bytes: [ 0xff,0x1f,0x08,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.b, p7/m, z31.b, z31.b"

  -
    input:
      bytes: [ 0xff,0x1f,0x48,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.h, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0xff,0x1f,0x88,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.s, p7/m, z31.s, z31.s"

  -
    input:
      bytes: [ 0xff,0x1f,0xc8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.d, p7/m, z31.d, z31.d"

  -
    input:
      bytes: [ 0xc4,0x3c,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0xe4,0x1f,0xc8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z4.d, p7/m, z4.d, z31.d"

  -
    input:
      bytes: [ 0xc4,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4,0x1f,0xc8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z4.d, p7/m, z4.d, z31.d"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xff,0xcf,0xe8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "smax z31.d, z31.d, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0x28,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z0.b, z0.b, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0x28,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.b, z31.b, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0x68,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z0.h, z0.h, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0x68,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.h, z31.h, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0xa8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z0.s, z0.s, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0xa8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.s, z31.s, #127"

  -
    input:
      bytes: [ 0x00,0xd0,0xe8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z0.d, z0.d, #-128"

  -
    input:
      bytes: [ 0xff,0xcf,0xe8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.d, z31.d, #127"

  -
    input:
      bytes: [ 0xff,0x1f,0x08,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.b, p7/m, z31.b, z31.b"

  -
    input:
      bytes: [ 0xff,0x1f,0x48,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.h, p7/m, z31.h, z31.h"

  -
    input:
      bytes: [ 0xff,0x1f,0x88,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.s, p7/m, z31.s, z31.s"

  -
    input:
      bytes: [ 0xff,0x1f,0xc8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.d, p7/m, z31.d, z31.d"

  -
    input:
      bytes: [ 0xc4,0x3c,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4.d, p7/z, z6.d"

  -
    input:
      bytes: [ 0xe4,0x1f,0xc8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z4.d, p7/m, z4.d, z31.d"

  -
    input:
      bytes: [ 0xc4,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z4, z6"

  -
    input:
      bytes: [ 0xe4,0x1f,0xc8,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z4.d, p7/m, z4.d, z31.d"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xff,0xcf,0xe8,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "smax z31.d, z31.d, #127"
