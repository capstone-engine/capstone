test_cases:
  -
    input:
      bytes: [ 0x00, 0xa0, 0x30, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z0.s }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x10, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z0.d }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x30, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z0.s }, p0/z, [x0]"

  -
    input:
      bytes: [ 0x00, 0xa0, 0x10, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z0.d }, p0/z, [x0]"

  -
    input:
      bytes: [ 0xff, 0xbf, 0x3f, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z31.s }, p7/z, [sp, #-1, mul vl]"

  -
    input:
      bytes: [ 0x55, 0xb5, 0x35, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z21.s }, p5/z, [x10, #5, mul vl]"

  -
    input:
      bytes: [ 0xff, 0xbf, 0x1f, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z31.d }, p7/z, [sp, #-1, mul vl]"

  -
    input:
      bytes: [ 0x55, 0xb5, 0x15, 0xa5 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ldnf1sh { z21.d }, p5/z, [x10, #5, mul vl]"
