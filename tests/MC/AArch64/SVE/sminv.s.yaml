test_cases:
  -
    input:
      bytes: [ 0xe0,0x3f,0x0a,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "sminv b0, p7, z31.b"

  -
    input:
      bytes: [ 0xe0,0x3f,0x4a,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "sminv h0, p7, z31.h"

  -
    input:
      bytes: [ 0xe0,0x3f,0x8a,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "sminv s0, p7, z31.s"

  -
    input:
      bytes: [ 0xe0,0x3f,0xca,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "sminv d0, p7, z31.d"

  -
    input:
      bytes: [ 0xe0,0x3f,0x0a,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sminv b0, p7, z31.b"

  -
    input:
      bytes: [ 0xe0,0x3f,0x4a,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sminv h0, p7, z31.h"

  -
    input:
      bytes: [ 0xe0,0x3f,0x8a,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sminv s0, p7, z31.s"

  -
    input:
      bytes: [ 0xe0,0x3f,0xca,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "sminv d0, p7, z31.d"
