test_cases:
  -
    input:
      bytes: [ 0x00, 0xc0, 0xe0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z0.h - z3.h }, p0/z, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x25, 0xce, 0xf0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z5.h - z8.h }, p3/z, [x17, x16, lsl #1]"

  -
    input:
      bytes: [ 0x00, 0xe0, 0xe0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z0.h - z3.h }, p0/z, [x0]"

  -
    input:
      bytes: [ 0xb7, 0xed, 0xe8, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z23.h - z26.h }, p3/z, [x13, #-32, mul vl]"

  -
    input:
      bytes: [ 0x55, 0xf5, 0xe5, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z21.h - z24.h }, p5/z, [x10, #20, mul vl]"

  -
    input:
      bytes: [ 0x5f, 0xf5, 0xe5, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z31.h, z0.h, z1.h, z2.h }, p5/z, [x10, #20, mul vl]"

  -
    input:
      bytes: [ 0x00, 0xc0, 0xe0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z0.h - z3.h }, p0/z, [x0, x0, lsl #1]"

  -
    input:
      bytes: [ 0x25, 0xce, 0xf0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z5.h - z8.h }, p3/z, [x17, x16, lsl #1]"

  -
    input:
      bytes: [ 0x00, 0xe0, 0xe0, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z0.h - z3.h }, p0/z, [x0]"

  -
    input:
      bytes: [ 0xb7, 0xed, 0xe8, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z23.h - z26.h }, p3/z, [x13, #-32, mul vl]"

  -
    input:
      bytes: [ 0x55, 0xf5, 0xe5, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z21.h - z24.h }, p5/z, [x10, #20, mul vl]"

  -
    input:
      bytes: [ 0x5f, 0xf5, 0xe5, 0xa4 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ld4h { z31.h, z0.h, z1.h, z2.h }, p5/z, [x10, #20, mul vl]"
