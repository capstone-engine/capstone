test_cases:
  -
    input:
      bytes: [ 0x30,0x80,0x00,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpgt p0.b, p0/z, z1.b, z0.b"

  -
    input:
      bytes: [ 0x30,0x80,0x40,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpgt p0.h, p0/z, z1.h, z0.h"

  -
    input:
      bytes: [ 0x30,0x80,0x80,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpgt p0.s, p0/z, z1.s, z0.s"

  -
    input:
      bytes: [ 0x30,0x80,0xc0,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmpgt p0.d, p0/z, z1.d, z0.d"

  -
    input:
      bytes: [ 0x00,0x60,0x00,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.b, p0/z, z0.b, z0.d"

  -
    input:
      bytes: [ 0x00,0x60,0x40,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.h, p0/z, z0.h, z0.d"

  -
    input:
      bytes: [ 0x00,0x60,0x80,0x24 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.s, p0/z, z0.s, z0.d"

  -
    input:
      bytes: [ 0x00,0x20,0x10,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.b, p0/z, z0.b, #-16"

  -
    input:
      bytes: [ 0x00,0x20,0x50,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.h, p0/z, z0.h, #-16"

  -
    input:
      bytes: [ 0x00,0x20,0x90,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.s, p0/z, z0.s, #-16"

  -
    input:
      bytes: [ 0x00,0x20,0xd0,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.d, p0/z, z0.d, #-16"

  -
    input:
      bytes: [ 0x00,0x20,0x0f,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.b, p0/z, z0.b, #15"

  -
    input:
      bytes: [ 0x00,0x20,0x4f,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.h, p0/z, z0.h, #15"

  -
    input:
      bytes: [ 0x00,0x20,0x8f,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.s, p0/z, z0.s, #15"

  -
    input:
      bytes: [ 0x00,0x20,0xcf,0x25 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cmplt p0.d, p0/z, z0.d, #15"
