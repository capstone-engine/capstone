test_cases:
  -
    input:
      bytes: [ 0x10, 0x20, 0x51, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcmle p0.h, p0/z, z0.h, #0.0"

  -
    input:
      bytes: [ 0x10, 0x20, 0x91, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcmle p0.s, p0/z, z0.s, #0.0"

  -
    input:
      bytes: [ 0x10, 0x20, 0xd1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcmle p0.d, p0/z, z0.d, #0.0"

  -
    input:
      bytes: [ 0x20, 0x40, 0x40, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcmge p0.h, p0/z, z1.h, z0.h"

  -
    input:
      bytes: [ 0x20, 0x40, 0x80, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcmge p0.s, p0/z, z1.s, z0.s"

  -
    input:
      bytes: [ 0x20, 0x40, 0xc0, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve" ]
    expected:
      insns:
        -
          asm_text: "fcmge p0.d, p0/z, z1.d, z0.d"

  -
    input:
      bytes: [ 0x10, 0x20, 0x51, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcmle p0.h, p0/z, z0.h, #0.0"

  -
    input:
      bytes: [ 0x10, 0x20, 0x91, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcmle p0.s, p0/z, z0.s, #0.0"

  -
    input:
      bytes: [ 0x10, 0x20, 0xd1, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcmle p0.d, p0/z, z0.d, #0.0"

  -
    input:
      bytes: [ 0x20, 0x40, 0x40, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcmge p0.h, p0/z, z1.h, z0.h"

  -
    input:
      bytes: [ 0x20, 0x40, 0x80, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcmge p0.s, p0/z, z1.s, z0.s"

  -
    input:
      bytes: [ 0x20, 0x40, 0xc0, 0x65 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fcmge p0.d, p0/z, z1.d, z0.d"
