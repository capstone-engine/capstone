test_cases:
  -
    input:
      bytes: [ 0x20, 0x10, 0x9f, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.s, z1.b, z31.b, #0"

  -
    input:
      bytes: [ 0x20, 0x10, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #0"

  -
    input:
      bytes: [ 0x20, 0x14, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #90"

  -
    input:
      bytes: [ 0x20, 0x18, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #180"

  -
    input:
      bytes: [ 0x20, 0x1c, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #270"

  -
    input:
      bytes: [ 0x20, 0x40, 0xbf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.s, z1.b, z7.b[3], #0"

  -
    input:
      bytes: [ 0x20, 0x40, 0xff, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z15.h[1], #0"

  -
    input:
      bytes: [ 0xc5, 0x44, 0xe3, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z5.d, z6.h, z3.h[0], #90"

  -
    input:
      bytes: [ 0xdd, 0x4b, 0xe0, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z29.d, z30.h, z0.h[0], #180"

  -
    input:
      bytes: [ 0xdf, 0x4f, 0xf7, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z31.d, z30.h, z7.h[1], #270"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0x10, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #0"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0x40, 0xff, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z15.h[1], #0"

  -
    input:
      bytes: [ 0x20, 0x10, 0x9f, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.s, z1.b, z31.b, #0"

  -
    input:
      bytes: [ 0x20, 0x10, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #0"

  -
    input:
      bytes: [ 0x20, 0x14, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #90"

  -
    input:
      bytes: [ 0x20, 0x18, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #180"

  -
    input:
      bytes: [ 0x20, 0x1c, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #270"

  -
    input:
      bytes: [ 0x20, 0x40, 0xbf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.s, z1.b, z7.b[3], #0"

  -
    input:
      bytes: [ 0x20, 0x40, 0xff, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z15.h[1], #0"

  -
    input:
      bytes: [ 0xc5, 0x44, 0xe3, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z5.d, z6.h, z3.h[0], #90"

  -
    input:
      bytes: [ 0xdd, 0x4b, 0xe0, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z29.d, z30.h, z0.h[0], #180"

  -
    input:
      bytes: [ 0xdf, 0x4f, 0xf7, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z31.d, z30.h, z7.h[1], #270"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0x10, 0xdf, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z31.h, #0"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0x40, 0xff, 0x44 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "cdot z0.d, z1.h, z15.h[1], #0"
