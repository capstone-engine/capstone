test_cases:
  -
    input:
      bytes: [ 0x20,0x80,0x09,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.b, p0/m, z0.b, z1.b"

  -
    input:
      bytes: [ 0x20,0x80,0x49,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.h, p0/m, z0.h, z1.h"

  -
    input:
      bytes: [ 0xdd,0x9f,0x89,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z29.s, p7/m, z29.s, z30.s"

  -
    input:
      bytes: [ 0xdf,0x9f,0xc9,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p7/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0x00,0x81,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.b, p0/m, z0.b, #0"

  -
    input:
      bytes: [ 0xff,0x81,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.b, p0/m, z31.b, #7"

  -
    input:
      bytes: [ 0x00,0x82,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.h, p0/m, z0.h, #0"

  -
    input:
      bytes: [ 0xff,0x83,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.h, p0/m, z31.h, #15"

  -
    input:
      bytes: [ 0x00,0x80,0x47,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.s, p0/m, z0.s, #0"

  -
    input:
      bytes: [ 0xff,0x83,0x47,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.s, p0/m, z31.s, #31"

  -
    input:
      bytes: [ 0x00,0x80,0x87,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.d, p0/m, z0.d, #0"

  -
    input:
      bytes: [ 0xff,0x83,0xc7,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, #63"

  -
    input:
      bytes: [ 0xdf,0x20,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p0/z, z6.d"

  -
    input:
      bytes: [ 0xdf,0x83,0xc9,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xdf,0x9f,0xc9,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p7/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0xdf,0x20,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p0/z, z6.d"

  -
    input:
      bytes: [ 0xff,0x83,0xc7,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, #63"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xff,0x83,0xc7,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, #63"

  -
    input:
      bytes: [ 0x20,0x80,0x09,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.b, p0/m, z0.b, z1.b"

  -
    input:
      bytes: [ 0x20,0x80,0x49,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.h, p0/m, z0.h, z1.h"

  -
    input:
      bytes: [ 0xdd,0x9f,0x89,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z29.s, p7/m, z29.s, z30.s"

  -
    input:
      bytes: [ 0xdf,0x9f,0xc9,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p7/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0x00,0x81,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.b, p0/m, z0.b, #0"

  -
    input:
      bytes: [ 0xff,0x81,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.b, p0/m, z31.b, #7"

  -
    input:
      bytes: [ 0x00,0x82,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.h, p0/m, z0.h, #0"

  -
    input:
      bytes: [ 0xff,0x83,0x07,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.h, p0/m, z31.h, #15"

  -
    input:
      bytes: [ 0x00,0x80,0x47,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.s, p0/m, z0.s, #0"

  -
    input:
      bytes: [ 0xff,0x83,0x47,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.s, p0/m, z31.s, #31"

  -
    input:
      bytes: [ 0x00,0x80,0x87,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z0.d, p0/m, z0.d, #0"

  -
    input:
      bytes: [ 0xff,0x83,0xc7,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, #63"

  -
    input:
      bytes: [ 0xdf,0x20,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p0/z, z6.d"

  -
    input:
      bytes: [ 0xdf,0x83,0xc9,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xdf,0x9f,0xc9,0x44 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p7/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0xdf,0x20,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p0/z, z6.d"

  -
    input:
      bytes: [ 0xff,0x83,0xc7,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, #63"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xff,0x83,0xc7,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "uqshl z31.d, p0/m, z31.d, #63"
