test_cases:
  -
    input:
      bytes: [ 0x20,0x80,0x57,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fminp z0.h, p0/m, z0.h, z1.h"

  -
    input:
      bytes: [ 0xdd,0x8f,0x97,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fminp z29.s, p3/m, z29.s, z30.s"

  -
    input:
      bytes: [ 0xdf,0x9f,0xd7,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fminp z31.d, p7/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0xdf,0x20,0xd0,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31.d, p0/z, z6.d"

  -
    input:
      bytes: [ 0xdf,0x83,0xd7,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fminp z31.d, p0/m, z31.d, z30.d"

  -
    input:
      bytes: [ 0xdf,0xbc,0x20,0x04 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z31, z6"

  -
    input:
      bytes: [ 0xdf,0x9f,0xd7,0x64 ]
      arch: "AArch64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "fminp z31.d, p7/m, z31.d, z30.d"
