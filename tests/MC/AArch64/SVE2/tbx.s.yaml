test_cases:
  -
    input:
      bytes: [ 0xff, 0x2f, 0x3f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.b, z31.b, z31.b"

  -
    input:
      bytes: [ 0xff, 0x2f, 0x7f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.h, z31.h, z31.h"

  -
    input:
      bytes: [ 0xff, 0x2f, 0xbf, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.s, z31.s, z31.s"

  -
    input:
      bytes: [ 0xff, 0x2f, 0xff, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.d, z31.d, z31.d"

  -
    input:
      bytes: [ 0xff, 0x2f, 0x3f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.b, z31.b, z31.b"

  -
    input:
      bytes: [ 0xff, 0x2f, 0x7f, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.h, z31.h, z31.h"

  -
    input:
      bytes: [ 0xff, 0x2f, 0xbf, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.s, z31.s, z31.s"

  -
    input:
      bytes: [ 0xff, 0x2f, 0xff, 0x05 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "CS_OPT_NO_BRANCH_OFFSET", "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "tbx z31.d, z31.d, z31.d"
