test_cases:
  -
    input:
      bytes: [ 0x00, 0xec, 0x0f, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.b, z0.b, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x08, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.b, z31.b, #8"

  -
    input:
      bytes: [ 0x00, 0xec, 0x1f, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.h, z0.h, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x10, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.h, z31.h, #16"

  -
    input:
      bytes: [ 0x00, 0xec, 0x5f, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.s, z0.s, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x40, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.s, z31.s, #32"

  -
    input:
      bytes: [ 0x00, 0xec, 0xdf, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.d, z0.d, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x80, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.d, z31.d, #64"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0xec, 0xdf, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sve2" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.d, z1.d, #1"

  -
    input:
      bytes: [ 0x00, 0xec, 0x0f, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.b, z0.b, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x08, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.b, z31.b, #8"

  -
    input:
      bytes: [ 0x00, 0xec, 0x1f, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.h, z0.h, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x10, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.h, z31.h, #16"

  -
    input:
      bytes: [ 0x00, 0xec, 0x5f, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.s, z0.s, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x40, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.s, z31.s, #32"

  -
    input:
      bytes: [ 0x00, 0xec, 0xdf, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.d, z0.d, #1"

  -
    input:
      bytes: [ 0xff, 0xef, 0x80, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z31.d, z31.d, #64"

  -
    input:
      bytes: [ 0xe0, 0xbc, 0x20, 0x04 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "movprfx z0, z7"

  -
    input:
      bytes: [ 0x20, 0xec, 0xdf, 0x45 ]
      arch: "CS_ARCH_AARCH64"
      options: [ "aarch64", "sme" ]
    expected:
      insns:
        -
          asm_text: "ursra z0.d, z1.d, #1"
