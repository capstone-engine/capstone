#ifndef __Riscv_ast2str_gen_inc__
#define __Riscv_ast2str_gen_inc__
#include <stdint.h>

#include <stddef.h>

#include "riscv_ast.gen.inc"
#include <string.h>

#include "riscv_ast2str_tbls.gen.inc"

#include "riscv_helpers_ast2str.h"

#define RISCV_MAX_INSTRUCTION_STR_LEN 256

#define DO_MEMCPY1 memcpy(buff, s0, s0_len)
#define DO_MEMCPY2                                                             \
  DO_MEMCPY1;                                                                  \
  memcpy(buff + s0_len, s1, s1_len)
#define DO_MEMCPY3                                                             \
  DO_MEMCPY2;                                                                  \
  memcpy(buff + s0_len + s1_len, s2, s2_len)
#define DO_MEMCPY4                                                             \
  DO_MEMCPY3;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len, s3, s3_len)
#define DO_MEMCPY5                                                             \
  DO_MEMCPY4;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len, s4, s4_len)
#define DO_MEMCPY6                                                             \
  DO_MEMCPY5;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len, s5, s5_len)
#define DO_MEMCPY7                                                             \
  DO_MEMCPY6;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len, s6, s6_len)
#define DO_MEMCPY8                                                             \
  DO_MEMCPY7;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len,  \
         s7, s7_len)
#define DO_MEMCPY9                                                             \
  DO_MEMCPY8;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len + \
             s7_len,                                                           \
         s8, s8_len)
#define DO_MEMCPY10                                                            \
  DO_MEMCPY9;                                                                  \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len + \
             s7_len + s8_len,                                                  \
         s9, s9_len)
#define DO_MEMCPY11                                                            \
  DO_MEMCPY10;                                                                 \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len + \
             s7_len + s8_len + s9_len,                                         \
         s10, s10_len)
#define DO_MEMCPY12                                                            \
  DO_MEMCPY11;                                                                 \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len + \
             s7_len + s8_len + s9_len + s10_len,                               \
         s11, s11_len)
#define DO_MEMCPY13                                                            \
  DO_MEMCPY12;                                                                 \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len + \
             s7_len + s8_len + s9_len + s10_len + s11_len,                     \
         s12, s12_len)
#define DO_MEMCPY14                                                            \
  DO_MEMCPY13;                                                                 \
  memcpy(buff + s0_len + s1_len + s2_len + s3_len + s4_len + s5_len + s6_len + \
             s7_len + s8_len + s9_len + s10_len + s11_len + s12_len,           \
         s13, s13_len)

static void ast2str(struct ast *tree, char *buff, riscv_conf *conf) {
  memset(buff, 0, RISCV_MAX_INSTRUCTION_STR_LEN);
  switch (tree->ast_node_type) {
  case RISCV_UTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    utype_mnemonic(tree->ast_node.utype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.utype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_20(tree->ast_node.utype.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_JAL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "jal";
    s0_len = 3;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_jal.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_21(tree->ast_node.riscv_jal.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_JALR: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    s0 = "jalr";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_jalr.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_12(tree->ast_node.riscv_jalr.imm, &s4, &s4_len, conf);
    s5 = "(";
    s5_len = 1;
    reg_name(tree->ast_node.riscv_jalr.rs1, &s6, &s6_len);
    s7 = ")";
    s7_len = 1;
    DO_MEMCPY8;
  } break;
  case RISCV_BTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    btype_mnemonic(tree->ast_node.btype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.btype.rs1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.btype.rs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_signed_13(tree->ast_node.btype.imm, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_ITYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    itype_mnemonic(tree->ast_node.itype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.itype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.itype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_signed_12(tree->ast_node.itype.imm, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_SHIFTIOP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    shiftiop_mnemonic(tree->ast_node.shiftiop.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.shiftiop.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.shiftiop.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_6(tree->ast_node.shiftiop.shamt, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_RTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    rtype_mnemonic(tree->ast_node.rtype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.rtype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.rtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.rtype.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_LOAD: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char *s11 = "";
    size_t s11_len = 0;
    s0 = "l";
    s0_len = 1;
    size_mnemonic(tree->ast_node.load.width, &s1, &s1_len);
    if (tree->ast_node.load.is_unsigned) {
      s2 = "u";
      s2_len = 1;
    } else {
      s2 = "";
      s2_len = 0;
    }
    if (tree->ast_node.load.aq) {
      s3 = ".aq";
      s3_len = 3;
    } else {
      s3 = "";
      s3_len = 0;
    }
    if (tree->ast_node.load.rl) {
      s4 = ".rl";
      s4_len = 3;
    } else {
      s4 = "";
      s4_len = 0;
    }
    spc(&s5, &s5_len, conf);
    reg_name(tree->ast_node.load.rd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_signed_12(tree->ast_node.load.imm, &s8, &s8_len, conf);
    s9 = "(";
    s9_len = 1;
    reg_name(tree->ast_node.load.rs1, &s10, &s10_len);
    s11 = ")";
    s11_len = 1;
    DO_MEMCPY12;
  } break;
  case RISCV_STORE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char s10_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s10 = s10_buffer;
    size_t s10_len = 0;
    char *s11 = "";
    size_t s11_len = 0;
    char s12_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s12 = s12_buffer;
    size_t s12_len = 0;
    char *s13 = "";
    size_t s13_len = 0;
    s0 = "s";
    s0_len = 1;
    size_mnemonic(tree->ast_node.store.width, &s1, &s1_len);
    if (tree->ast_node.store.aq) {
      s2 = ".aq";
      s2_len = 3;
    } else {
      s2 = "";
      s2_len = 0;
    }
    if (tree->ast_node.store.rl) {
      s3 = ".rl";
      s3_len = 3;
    } else {
      s3 = "";
      s3_len = 0;
    }
    spc(&s4, &s4_len, conf);
    reg_name(tree->ast_node.store.rs2, &s5, &s5_len);
    sep(&s6, &s6_len, conf);
    hex_bits_signed_12(tree->ast_node.store.imm, &s7, &s7_len, conf);
    opt_spc(&s8, &s8_len, conf);
    s9 = "(";
    s9_len = 1;
    opt_spc(&s10, &s10_len, conf);
    reg_name(tree->ast_node.store.rs1, &s11, &s11_len);
    opt_spc(&s12, &s12_len, conf);
    s13 = ")";
    s13_len = 1;
    DO_MEMCPY14;
  } break;
  case RISCV_ADDIW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "addiw";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.addiw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.addiw.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_signed_12(tree->ast_node.addiw.imm, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_RTYPEW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    rtypew_mnemonic(tree->ast_node.rtypew.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.rtypew.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.rtypew.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.rtypew.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHIFTIWOP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    shiftiwop_mnemonic(tree->ast_node.shiftiwop.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.shiftiwop.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.shiftiwop.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.shiftiwop.shamt, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_FENCE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "fence";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    fence_bits(tree->ast_node.fence.pred, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    fence_bits(tree->ast_node.fence.succ, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_FENCE_TSO: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "fence.tso";
    s0_len = 9;
    spc(&s1, &s1_len, conf);
    fence_bits(tree->ast_node.fence_tso.pred, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    fence_bits(tree->ast_node.fence_tso.succ, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_ECALL: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "ecall";
    s0_len = 5;
    DO_MEMCPY1;
  } break;
  case RISCV_MRET: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "mret";
    s0_len = 4;
    DO_MEMCPY1;
  } break;
  case RISCV_SRET: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "sret";
    s0_len = 4;
    DO_MEMCPY1;
  } break;
  case RISCV_EBREAK: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "ebreak";
    s0_len = 6;
    DO_MEMCPY1;
  } break;
  case RISCV_WFI: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "wfi";
    s0_len = 3;
    DO_MEMCPY1;
  } break;
  case RISCV_SFENCE_VMA: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sfence.vma";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sfence_vma.rs1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sfence_vma.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_FENCEI: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "fence.i";
    s0_len = 7;
    DO_MEMCPY1;
  } break;
  case RISCV_LOADRES: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    s0 = "lr.";
    s0_len = 3;
    size_mnemonic(tree->ast_node.loadres.width, &s1, &s1_len);
    if (tree->ast_node.loadres.aq) {
      s2 = ".aq";
      s2_len = 3;
    } else {
      s2 = "";
      s2_len = 0;
    }
    if (tree->ast_node.loadres.rl) {
      s3 = ".rl";
      s3_len = 3;
    } else {
      s3 = "";
      s3_len = 0;
    }
    spc(&s4, &s4_len, conf);
    reg_name(tree->ast_node.loadres.rd, &s5, &s5_len);
    sep(&s6, &s6_len, conf);
    s7 = "(";
    s7_len = 1;
    reg_name(tree->ast_node.loadres.rs1, &s8, &s8_len);
    s9 = ")";
    s9_len = 1;
    DO_MEMCPY10;
  } break;
  case RISCV_STORECON: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char *s11 = "";
    size_t s11_len = 0;
    s0 = "sc.";
    s0_len = 3;
    size_mnemonic(tree->ast_node.storecon.width, &s1, &s1_len);
    if (tree->ast_node.storecon.aq) {
      s2 = ".aq";
      s2_len = 3;
    } else {
      s2 = "";
      s2_len = 0;
    }
    if (tree->ast_node.storecon.rl) {
      s3 = ".rl";
      s3_len = 3;
    } else {
      s3 = "";
      s3_len = 0;
    }
    spc(&s4, &s4_len, conf);
    reg_name(tree->ast_node.storecon.rd, &s5, &s5_len);
    sep(&s6, &s6_len, conf);
    reg_name(tree->ast_node.storecon.rs2, &s7, &s7_len);
    sep(&s8, &s8_len, conf);
    s9 = "(";
    s9_len = 1;
    reg_name(tree->ast_node.storecon.rs1, &s10, &s10_len);
    s11 = ")";
    s11_len = 1;
    DO_MEMCPY12;
  } break;
  case RISCV_AMO: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char *s11 = "";
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    amo_mnemonic(tree->ast_node.amo.op, &s0, &s0_len);
    s1 = ".";
    s1_len = 1;
    size_mnemonic(tree->ast_node.amo.width, &s2, &s2_len);
    if (tree->ast_node.amo.aq) {
      s3 = ".aq";
      s3_len = 3;
    } else {
      s3 = "";
      s3_len = 0;
    }
    if (tree->ast_node.amo.rl) {
      s4 = ".rl";
      s4_len = 3;
    } else {
      s4 = "";
      s4_len = 0;
    }
    spc(&s5, &s5_len, conf);
    reg_name(tree->ast_node.amo.rd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    reg_name(tree->ast_node.amo.rs2, &s8, &s8_len);
    sep(&s9, &s9_len, conf);
    s10 = "(";
    s10_len = 1;
    reg_name(tree->ast_node.amo.rs1, &s11, &s11_len);
    s12 = ")";
    s12_len = 1;
    DO_MEMCPY13;
  } break;
  case RISCV_C_NOP: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "c.nop";
    s0_len = 5;
    DO_MEMCPY1;
  } break;
  case RISCV_C_ADDI4SPN: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.addi4spn";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_addi4spn.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_10(tree->ast_node.c_addi4spn.nzimm << 2 | 0x0 << 0, &s4, &s4_len,
                conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_LW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.lw";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_lw.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_lw.rsc, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_7(tree->ast_node.c_lw.uimm << 2 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_C_LD: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.ld";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_ld.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_ld.rsc, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_8(tree->ast_node.c_ld.uimm << 3 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_C_SW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.sw";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sw.rsc1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_sw.rsc2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_7(tree->ast_node.c_sw.uimm << 2 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_C_SD: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.sd";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sd.rsc1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_sd.rsc2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_8(tree->ast_node.c_sd.uimm << 3 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_C_ADDI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.addi";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_addi.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_6(tree->ast_node.c_addi.nzi, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_JAL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    s0 = "c.jal";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    hex_bits_signed_12(tree->ast_node.c_jal << 1 | 0x0 << 0, &s2, &s2_len,
                       conf);
    DO_MEMCPY3;
  } break;
  case RISCV_C_ADDIW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.addiw";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_addiw.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_6(tree->ast_node.c_addiw.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_LI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.li";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_li.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_6(tree->ast_node.c_li.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_ADDI16SP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    s0 = "c.addi16sp";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    hex_bits_signed_6(tree->ast_node.c_addi16sp, &s2, &s2_len, conf);
    DO_MEMCPY3;
  } break;
  case RISCV_C_LUI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.lui";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_lui.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_6(tree->ast_node.c_lui.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SRLI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.srli";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_srli.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_srli.shamt, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SRAI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.srai";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_srai.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_srai.shamt, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_ANDI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.andi";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_andi.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_6(tree->ast_node.c_andi.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SUB: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.sub";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sub.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_sub.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_XOR: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.xor";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_xor.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_xor.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_OR: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.or";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_or.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_or.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_AND: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.and";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_and.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_and.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SUBW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.subw";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_subw.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_subw.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_ADDW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.addw";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_addw.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_addw.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_J: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    s0 = "c.j";
    s0_len = 3;
    spc(&s1, &s1_len, conf);
    hex_bits_signed_12(tree->ast_node.c_j << 1 | 0x0 << 0, &s2, &s2_len, conf);
    DO_MEMCPY3;
  } break;
  case RISCV_C_BEQZ: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.beqz";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_beqz.rs, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_8(tree->ast_node.c_beqz.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_BNEZ: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.bnez";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_bnez.rs, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_signed_8(tree->ast_node.c_bnez.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SLLI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.slli";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_slli.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_slli.shamt, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_LWSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.lwsp";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_lwsp.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_lwsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_LDSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.ldsp";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_ldsp.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_ldsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SWSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.swsp";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_swsp.rs2, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_swsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_SDSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.sdsp";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_sdsp.rs2, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_sdsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_JR: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.jr";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_jr, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_JALR: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.jalr";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_jalr, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_MV: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.mv";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_mv.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.c_mv.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_C_EBREAK: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "c.ebreak";
    s0_len = 8;
    DO_MEMCPY1;
  } break;
  case RISCV_C_ADD: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.add";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_add.rsd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.c_add.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_MUL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    if ((tree->ast_node.mul.mul_op.high == 1) &&
        (tree->ast_node.mul.mul_op.signed_rs1 == 1) &&
        (tree->ast_node.mul.mul_op.signed_rs2 == 1)) {
      s0 = "mulh";
      s0_len = 4;
    } else if ((tree->ast_node.mul.mul_op.high == 1) &&
               (tree->ast_node.mul.mul_op.signed_rs1 == 0) &&
               (tree->ast_node.mul.mul_op.signed_rs2 == 0)) {
      s0 = "mulhu";
      s0_len = 5;
    } else if ((tree->ast_node.mul.mul_op.high == 1) &&
               (tree->ast_node.mul.mul_op.signed_rs1 == 1) &&
               (tree->ast_node.mul.mul_op.signed_rs2 == 0)) {
      s0 = "mulhsu";
      s0_len = 6;
    } else if ((tree->ast_node.mul.mul_op.high == 0) &&
               (tree->ast_node.mul.mul_op.signed_rs1 == 1) &&
               (tree->ast_node.mul.mul_op.signed_rs2 == 1)) {
      s0 = "mul";
      s0_len = 3;
    } else
      ;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.mul.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.mul.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.mul.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_DIV: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    s0 = "div";
    s0_len = 3;
    if (tree->ast_node.div.s) {
      s1 = "";
      s1_len = 0;
    } else {
      s1 = "u";
      s1_len = 1;
    }
    spc(&s2, &s2_len, conf);
    reg_name(tree->ast_node.div.rd, &s3, &s3_len);
    sep(&s4, &s4_len, conf);
    reg_name(tree->ast_node.div.rs1, &s5, &s5_len);
    sep(&s6, &s6_len, conf);
    reg_name(tree->ast_node.div.rs2, &s7, &s7_len);
    DO_MEMCPY8;
  } break;
  case RISCV_REM: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    s0 = "rem";
    s0_len = 3;
    if (tree->ast_node.rem.s) {
      s1 = "";
      s1_len = 0;
    } else {
      s1 = "u";
      s1_len = 1;
    }
    spc(&s2, &s2_len, conf);
    reg_name(tree->ast_node.rem.rd, &s3, &s3_len);
    sep(&s4, &s4_len, conf);
    reg_name(tree->ast_node.rem.rs1, &s5, &s5_len);
    sep(&s6, &s6_len, conf);
    reg_name(tree->ast_node.rem.rs2, &s7, &s7_len);
    DO_MEMCPY8;
  } break;
  case RISCV_MULW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "mulw";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.mulw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.mulw.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.mulw.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_DIVW: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "div";
    s0_len = 3;
    if (tree->ast_node.divw.s) {
      s1 = "";
      s1_len = 0;
    } else {
      s1 = "u";
      s1_len = 1;
    }
    s2 = "w";
    s2_len = 1;
    spc(&s3, &s3_len, conf);
    reg_name(tree->ast_node.divw.rd, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.divw.rs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    reg_name(tree->ast_node.divw.rs2, &s8, &s8_len);
    DO_MEMCPY9;
  } break;
  case RISCV_REMW: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "rem";
    s0_len = 3;
    if (tree->ast_node.remw.s) {
      s1 = "";
      s1_len = 0;
    } else {
      s1 = "u";
      s1_len = 1;
    }
    s2 = "w";
    s2_len = 1;
    spc(&s3, &s3_len, conf);
    reg_name(tree->ast_node.remw.rd, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.remw.rs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    reg_name(tree->ast_node.remw.rs2, &s8, &s8_len);
    DO_MEMCPY9;
  } break;
  case RISCV_CSR: {
    if (tree->ast_node.csr.is_imm == RISCV_true) {
      char *s0 = "";
      size_t s0_len = 0;
      char *s1 = "";
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char *s3 = "";
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s7 = s7_buffer;
      size_t s7_len = 0;
      csr_mnemonic(tree->ast_node.csr.op, &s0, &s0_len);
      s1 = "i";
      s1_len = 1;
      spc(&s2, &s2_len, conf);
      reg_name(tree->ast_node.csr.rd, &s3, &s3_len);
      sep(&s4, &s4_len, conf);
      csr_name_map(tree->ast_node.csr.csr, &s5, &s5_len, conf);
      sep(&s6, &s6_len, conf);
      hex_bits_5(tree->ast_node.csr.rs1, &s7, &s7_len, conf);
      DO_MEMCPY8;
    }
    if (tree->ast_node.csr.is_imm == RISCV_false) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      csr_mnemonic(tree->ast_node.csr.op, &s0, &s0_len);
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.csr.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      csr_name_map(tree->ast_node.csr.csr, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      reg_name(tree->ast_node.csr.rs1, &s6, &s6_len);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_C_NOP_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    s0 = "c.nop.hint.";
    s0_len = 11;
    hex_bits_6(tree->ast_node.c_nop_hint, &s1, &s1_len, conf);
    DO_MEMCPY2;
  } break;
  case RISCV_C_ADDI_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    s0 = "c.addi.hint.";
    s0_len = 12;
    reg_name(tree->ast_node.c_addi_hint, &s1, &s1_len);
    DO_MEMCPY2;
  } break;
  case RISCV_C_LI_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    s0 = "c.li.hint.";
    s0_len = 10;
    hex_bits_6(tree->ast_node.c_li_hint, &s1, &s1_len, conf);
    DO_MEMCPY2;
  } break;
  case RISCV_C_LUI_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    s0 = "c.lui.hint.";
    s0_len = 11;
    hex_bits_6(tree->ast_node.c_lui_hint, &s1, &s1_len, conf);
    DO_MEMCPY2;
  } break;
  case RISCV_C_MV_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    s0 = "c.mv.hint.";
    s0_len = 10;
    reg_name(tree->ast_node.c_mv_hint, &s1, &s1_len);
    DO_MEMCPY2;
  } break;
  case RISCV_C_ADD_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    s0 = "c.add.hint.";
    s0_len = 11;
    reg_name(tree->ast_node.c_add_hint, &s1, &s1_len);
    DO_MEMCPY2;
  } break;
  case RISCV_C_SLLI_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    s0 = "c.slli.hint.";
    s0_len = 12;
    reg_name(tree->ast_node.c_slli_hint.rsd, &s1, &s1_len);
    s2 = ".";
    s2_len = 1;
    hex_bits_6(tree->ast_node.c_slli_hint.shamt, &s3, &s3_len, conf);
    DO_MEMCPY4;
  } break;
  case RISCV_C_SRLI_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    s0 = "c.srli.hint.";
    s0_len = 12;
    creg_name(tree->ast_node.c_srli_hint, &s1, &s1_len);
    DO_MEMCPY2;
  } break;
  case RISCV_C_SRAI_HINT: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    s0 = "c.srai.hint.";
    s0_len = 12;
    creg_name(tree->ast_node.c_srai_hint, &s1, &s1_len);
    DO_MEMCPY2;
  } break;
  case RISCV_FENCE_RESERVED: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    s0 = "fence.reserved.";
    s0_len = 15;
    fence_bits(tree->ast_node.fence_reserved.pred, &s1, &s1_len, conf);
    s2 = ".";
    s2_len = 1;
    fence_bits(tree->ast_node.fence_reserved.succ, &s3, &s3_len, conf);
    s4 = ".";
    s4_len = 1;
    reg_name(tree->ast_node.fence_reserved.rs, &s5, &s5_len);
    s6 = ".";
    s6_len = 1;
    reg_name(tree->ast_node.fence_reserved.rd, &s7, &s7_len);
    s8 = ".";
    s8_len = 1;
    hex_bits_4(tree->ast_node.fence_reserved.fm, &s9, &s9_len, conf);
    DO_MEMCPY10;
  } break;
  case RISCV_FENCEI_RESERVED: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "fence.i.reserved.";
    s0_len = 17;
    reg_name(tree->ast_node.fencei_reserved.rd, &s1, &s1_len);
    s2 = ".";
    s2_len = 1;
    reg_name(tree->ast_node.fencei_reserved.rs, &s3, &s3_len);
    s4 = ".";
    s4_len = 1;
    hex_bits_12(tree->ast_node.fencei_reserved.imm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_LOAD_FP: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char s10_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s10 = s10_buffer;
    size_t s10_len = 0;
    char *s11 = "";
    size_t s11_len = 0;
    s0 = "fl";
    s0_len = 2;
    size_mnemonic(tree->ast_node.load_fp.width, &s1, &s1_len);
    spc(&s2, &s2_len, conf);
    freg_or_reg_name(tree->ast_node.load_fp.rd, &s3, &s3_len, conf);
    sep(&s4, &s4_len, conf);
    hex_bits_signed_12(tree->ast_node.load_fp.imm, &s5, &s5_len, conf);
    opt_spc(&s6, &s6_len, conf);
    s7 = "(";
    s7_len = 1;
    opt_spc(&s8, &s8_len, conf);
    reg_name(tree->ast_node.load_fp.rs1, &s9, &s9_len);
    opt_spc(&s10, &s10_len, conf);
    s11 = ")";
    s11_len = 1;
    DO_MEMCPY12;
  } break;
  case RISCV_STORE_FP: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char s10_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s10 = s10_buffer;
    size_t s10_len = 0;
    char *s11 = "";
    size_t s11_len = 0;
    s0 = "fs";
    s0_len = 2;
    size_mnemonic(tree->ast_node.store_fp.width, &s1, &s1_len);
    spc(&s2, &s2_len, conf);
    freg_name(tree->ast_node.store_fp.rs2, &s3, &s3_len);
    sep(&s4, &s4_len, conf);
    hex_bits_signed_12(tree->ast_node.store_fp.imm, &s5, &s5_len, conf);
    opt_spc(&s6, &s6_len, conf);
    s7 = "(";
    s7_len = 1;
    opt_spc(&s8, &s8_len, conf);
    reg_name(tree->ast_node.store_fp.rs1, &s9, &s9_len);
    opt_spc(&s10, &s10_len, conf);
    s11 = ")";
    s11_len = 1;
    DO_MEMCPY12;
  } break;
  case RISCV_F_MADD_TYPE_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    f_madd_type_mnemonic_S(tree->ast_node.f_madd_type_s.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_s.rd, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_s.rs1, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_s.rs2, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_s.rs3, &s8, &s8_len, conf);
    sep(&s9, &s9_len, conf);
    frm_mnemonic(tree->ast_node.f_madd_type_s.rm, &s10, &s10_len);
    DO_MEMCPY11;
  } break;
  case RISCV_F_BIN_RM_TYPE_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    f_bin_rm_type_mnemonic_S(tree->ast_node.f_bin_rm_type_s.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_s.rd, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_s.rs1, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_s.rs2, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    frm_mnemonic(tree->ast_node.f_bin_rm_type_s.rm, &s8, &s8_len);
    DO_MEMCPY9;
  } break;
  case RISCV_F_UN_RM_TYPE_S: {
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FSQRT_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fsqrt.s";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_W_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.w.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_WU_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.wu.s";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_S_W) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.s.w";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_S_WU) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.s.wu";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_L_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.l.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_LU_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.lu.s";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_S_L) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.s.l";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_s.fcvt_s_lu == RISCV_FCVT_S_LU) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.s.lu";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_s.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_s.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_F_BIN_TYPE_S: {
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FSGNJ_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnj.s";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FSGNJN_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnjn.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FSGNJX_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnjx.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FMIN_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fmin.s";
      s0_len = 6;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FMAX_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fmax.s";
      s0_len = 6;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FEQ_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "feq.s";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FLT_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "flt.s";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_s.fle_s == RISCV_FLE_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fle.s";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_s.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_F_UN_TYPE_S: {
    if (tree->ast_node.f_un_type_s.fmv_w_x == RISCV_FMV_X_W) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      s0 = "fmv.x.w";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_name(tree->ast_node.f_un_type_s.rs1, &s4, &s4_len);
      DO_MEMCPY5;
    }
    if (tree->ast_node.f_un_type_s.fmv_w_x == RISCV_FMV_W_X) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      s0 = "fmv.w.x";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_name(tree->ast_node.f_un_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_type_s.rs1, &s4, &s4_len);
      DO_MEMCPY5;
    }
    if (tree->ast_node.f_un_type_s.fmv_w_x == RISCV_FCLASS_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      s0 = "fclass.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_type_s.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_type_s.rs1, &s4, &s4_len, conf);
      DO_MEMCPY5;
    }
  } break;
  case RISCV_C_FLWSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.flwsp";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_flwsp.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_flwsp.imm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_FSWSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.fswsp";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_fswsp.rs2, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_fswsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_FLW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.flw";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_flw.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_flw.rsc, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_7(tree->ast_node.c_flw.uimm << 2 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_C_FSW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.fsw";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_fsw.rsc1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_fsw.rsc2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_7(tree->ast_node.c_fsw.uimm << 2 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_F_MADD_TYPE_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    f_madd_type_mnemonic_D(tree->ast_node.f_madd_type_d.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_d.rd, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_d.rs1, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_d.rs2, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_d.rs3, &s8, &s8_len, conf);
    sep(&s9, &s9_len, conf);
    frm_mnemonic(tree->ast_node.f_madd_type_d.rm, &s10, &s10_len);
    DO_MEMCPY11;
  } break;
  case RISCV_F_BIN_RM_TYPE_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    f_bin_rm_type_mnemonic_D(tree->ast_node.f_bin_rm_type_d.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_d.rd, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_d.rs1, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_d.rs2, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    frm_mnemonic(tree->ast_node.f_bin_rm_type_d.rm, &s8, &s8_len);
    DO_MEMCPY9;
  } break;
  case RISCV_F_UN_RM_TYPE_D: {
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FSQRT_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fsqrt.d";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_W_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.w.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_WU_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.wu.d";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_D_W) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.d.w";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_D_WU) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.d.wu";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_L_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.l.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_LU_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.lu.d";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_D_L) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.d.l";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_D_LU) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.d.lu";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_S_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.s.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_d.fcvt_d_lu == RISCV_FCVT_D_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.d.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_d.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_F_BIN_TYPE_D: {
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FSGNJ_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnj.d";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FSGNJN_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnjn.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FSGNJX_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnjx.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FMIN_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fmin.d";
      s0_len = 6;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FMAX_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fmax.d";
      s0_len = 6;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FEQ_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "feq.d";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FLT_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "flt.d";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_d.fle_d == RISCV_FLE_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fle.d";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_d.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_F_UN_TYPE_D: {
    if (tree->ast_node.f_un_type_d.fmv_d_x == RISCV_FMV_X_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      s0 = "fmv.x.d";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_name(tree->ast_node.f_un_type_d.rs1, &s4, &s4_len);
      DO_MEMCPY5;
    }
    if (tree->ast_node.f_un_type_d.fmv_d_x == RISCV_FMV_D_X) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      s0 = "fmv.d.x";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_name(tree->ast_node.f_un_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_type_d.rs1, &s4, &s4_len);
      DO_MEMCPY5;
    }
    if (tree->ast_node.f_un_type_d.fmv_d_x == RISCV_FCLASS_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      s0 = "fclass.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_type_d.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_type_d.rs1, &s4, &s4_len, conf);
      DO_MEMCPY5;
    }
  } break;
  case RISCV_C_FLDSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.fldsp";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_fldsp.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_fldsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_FSDSP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "c.fsdsp";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.c_fsdsp.rs2, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_6(tree->ast_node.c_fsdsp.uimm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_C_FLD: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.fld";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_fld.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_fld.rsc, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_8(tree->ast_node.c_fld.uimm << 3 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_C_FSD: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "c.fsd";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_fsd.rsc1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_fsd.rsc2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_8(tree->ast_node.c_fsd.uimm << 3 | 0x0 << 0, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_SINVAL_VMA: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sinval.vma";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sinval_vma.rs1, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sinval_vma.rs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SFENCE_W_INVAL: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "sfence.w.inval";
    s0_len = 14;
    DO_MEMCPY1;
  } break;
  case RISCV_SFENCE_INVAL_IR: {
    char *s0 = "";
    size_t s0_len = 0;
    s0 = "sfence.inval.ir";
    s0_len = 15;
    DO_MEMCPY1;
  } break;
  case RISCV_SLLIUW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "slli.uw";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_slliuw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_slliuw.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_6(tree->ast_node.riscv_slliuw.shamt, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBA_RTYPEUW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zba_rtypeuw_mnemonic(tree->ast_node.zba_rtypeuw.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zba_rtypeuw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zba_rtypeuw.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zba_rtypeuw.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBA_RTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zba_rtype_mnemonic(tree->ast_node.zba_rtype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zba_rtype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zba_rtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zba_rtype.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_RORIW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "roriw";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_roriw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_roriw.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.riscv_roriw.shamt, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_RORI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "rori";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_rori.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_rori.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_6(tree->ast_node.riscv_rori.shamt, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBB_RTYPEW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zbb_rtypew_mnemonic(tree->ast_node.zbb_rtypew.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbb_rtypew.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbb_rtypew.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zbb_rtypew.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBB_RTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zbb_rtype_mnemonic(tree->ast_node.zbb_rtype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbb_rtype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbb_rtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zbb_rtype.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBB_EXTOP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    zbb_extop_mnemonic(tree->ast_node.zbb_extop.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbb_extop.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbb_extop.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_REV8: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "rev8";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_rev8.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_rev8.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_ORCB: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "orc.b";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_orcb.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_orcb.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CPOP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "cpop";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_cpop.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_cpop.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CPOPW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "cpopw";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_cpopw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_cpopw.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CLZ: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "clz";
    s0_len = 3;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_clz.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_clz.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CLZW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "clzw";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_clzw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_clzw.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CTZ: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "ctz";
    s0_len = 3;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_ctz.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_ctz.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CTZW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "ctzw";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_ctzw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_ctzw.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_CLMUL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "clmul";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_clmul.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_clmul.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.riscv_clmul.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_CLMULH: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "clmulh";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_clmulh.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_clmulh.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.riscv_clmulh.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_CLMULR: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "clmulr";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_clmulr.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_clmulr.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.riscv_clmulr.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBS_IOP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    zbs_iop_mnemonic(tree->ast_node.zbs_iop.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbs_iop.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbs_iop.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_6(tree->ast_node.zbs_iop.shamt, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBS_RTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zbs_rtype_mnemonic(tree->ast_node.zbs_rtype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbs_rtype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbs_rtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zbs_rtype.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_C_LBU: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    s0 = "c.lbu";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_lbu.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_2(tree->ast_node.c_lbu.uimm, &s4, &s4_len, conf);
    opt_spc(&s5, &s5_len, conf);
    s6 = "(";
    s6_len = 1;
    opt_spc(&s7, &s7_len, conf);
    creg_name(tree->ast_node.c_lbu.rs1c, &s8, &s8_len);
    opt_spc(&s9, &s9_len, conf);
    s10 = ")";
    s10_len = 1;
    DO_MEMCPY11;
  } break;
  case RISCV_C_LHU: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    s0 = "c.lhu";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_lhu.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_2(tree->ast_node.c_lhu.uimm, &s4, &s4_len, conf);
    opt_spc(&s5, &s5_len, conf);
    s6 = "(";
    s6_len = 1;
    opt_spc(&s7, &s7_len, conf);
    creg_name(tree->ast_node.c_lhu.rs1c, &s8, &s8_len);
    opt_spc(&s9, &s9_len, conf);
    s10 = ")";
    s10_len = 1;
    DO_MEMCPY11;
  } break;
  case RISCV_C_LH: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    s0 = "c.lh";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_lh.rdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_2(tree->ast_node.c_lh.uimm, &s4, &s4_len, conf);
    opt_spc(&s5, &s5_len, conf);
    s6 = "(";
    s6_len = 1;
    opt_spc(&s7, &s7_len, conf);
    creg_name(tree->ast_node.c_lh.rs1c, &s8, &s8_len);
    opt_spc(&s9, &s9_len, conf);
    s10 = ")";
    s10_len = 1;
    DO_MEMCPY11;
  } break;
  case RISCV_C_SB: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    s0 = "c.sb";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sb.rs2c, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_2(tree->ast_node.c_sb.uimm, &s4, &s4_len, conf);
    opt_spc(&s5, &s5_len, conf);
    s6 = "(";
    s6_len = 1;
    opt_spc(&s7, &s7_len, conf);
    creg_name(tree->ast_node.c_sb.rs1c, &s8, &s8_len);
    opt_spc(&s9, &s9_len, conf);
    s10 = ")";
    s10_len = 1;
    DO_MEMCPY11;
  } break;
  case RISCV_C_SH: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    s0 = "c.sh";
    s0_len = 4;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sh.rs1c, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_2(tree->ast_node.c_sh.uimm, &s4, &s4_len, conf);
    opt_spc(&s5, &s5_len, conf);
    s6 = "(";
    s6_len = 1;
    opt_spc(&s7, &s7_len, conf);
    creg_name(tree->ast_node.c_sh.rs2c, &s8, &s8_len);
    opt_spc(&s9, &s9_len, conf);
    s10 = ")";
    s10_len = 1;
    DO_MEMCPY11;
  } break;
  case RISCV_C_ZEXT_B: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.zext.b";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_zext_b, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_SEXT_B: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.sext.b";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sext_b, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_ZEXT_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.zext.h";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_zext_h, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_SEXT_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.sext.h";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_sext_h, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_ZEXT_W: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.zext.w";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_zext_w, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_NOT: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    s0 = "c.not";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_not, &s2, &s2_len);
    DO_MEMCPY3;
  } break;
  case RISCV_C_MUL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "c.mul";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    creg_name(tree->ast_node.c_mul.rsdc, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    creg_name(tree->ast_node.c_mul.rs2c, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_F_BIN_RM_TYPE_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    f_bin_rm_type_mnemonic_H(tree->ast_node.f_bin_rm_type_h.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_h.rd, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_h.rs1, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    freg_or_reg_name(tree->ast_node.f_bin_rm_type_h.rs2, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    frm_mnemonic(tree->ast_node.f_bin_rm_type_h.rm, &s8, &s8_len);
    DO_MEMCPY9;
  } break;
  case RISCV_F_MADD_TYPE_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    f_madd_type_mnemonic_H(tree->ast_node.f_madd_type_h.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_h.rd, &s2, &s2_len, conf);
    sep(&s3, &s3_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_h.rs1, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_h.rs2, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    freg_or_reg_name(tree->ast_node.f_madd_type_h.rs3, &s8, &s8_len, conf);
    sep(&s9, &s9_len, conf);
    frm_mnemonic(tree->ast_node.f_madd_type_h.rm, &s10, &s10_len);
    DO_MEMCPY11;
  } break;
  case RISCV_F_BIN_TYPE_H: {
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FSGNJ_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnj.h";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FSGNJN_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnjn.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FSGNJX_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fsgnjx.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FMIN_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fmin.h";
      s0_len = 6;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FMAX_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fmax.h";
      s0_len = 6;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FEQ_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "feq.h";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FLT_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "flt.h";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_bin_type_h.fle_h == RISCV_FLE_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s6 = s6_buffer;
      size_t s6_len = 0;
      s0 = "fle.h";
      s0_len = 5;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_bin_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      freg_or_reg_name(tree->ast_node.f_bin_type_h.rs2, &s6, &s6_len, conf);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_F_UN_RM_TYPE_H: {
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FSQRT_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fsqrt.h";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_W_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.w.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_WU_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.wu.h";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_H_W) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.h.w";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_H_WU) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.h.wu";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_L_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.l.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_LU_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.lu.h";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_H_L) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.h.l";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_H_LU) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.h.lu";
      s0_len = 9;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_H_S) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.h.s";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_H_D) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.h.d";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_S_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.s.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
    if (tree->ast_node.f_un_rm_type_h.fcvt_h_lu == RISCV_FCVT_D_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s2 = s2_buffer;
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s5 = s5_buffer;
      size_t s5_len = 0;
      char *s6 = "";
      size_t s6_len = 0;
      s0 = "fcvt.d.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rd, &s2, &s2_len, conf);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_rm_type_h.rs1, &s4, &s4_len, conf);
      sep(&s5, &s5_len, conf);
      frm_mnemonic(tree->ast_node.f_un_rm_type_h.rm, &s6, &s6_len);
      DO_MEMCPY7;
    }
  } break;
  case RISCV_F_UN_TYPE_H: {
    if (tree->ast_node.f_un_type_h.fmv_h_x == RISCV_FMV_X_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      s0 = "fmv.x.h";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_name(tree->ast_node.f_un_type_h.rs1, &s4, &s4_len);
      DO_MEMCPY5;
    }
    if (tree->ast_node.f_un_type_h.fmv_h_x == RISCV_FMV_H_X) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char *s4 = "";
      size_t s4_len = 0;
      s0 = "fmv.h.x";
      s0_len = 7;
      spc(&s1, &s1_len, conf);
      freg_name(tree->ast_node.f_un_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      reg_name(tree->ast_node.f_un_type_h.rs1, &s4, &s4_len);
      DO_MEMCPY5;
    }
    if (tree->ast_node.f_un_type_h.fmv_h_x == RISCV_FCLASS_H) {
      char *s0 = "";
      size_t s0_len = 0;
      char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s1 = s1_buffer;
      size_t s1_len = 0;
      char *s2 = "";
      size_t s2_len = 0;
      char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s3 = s3_buffer;
      size_t s3_len = 0;
      char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
      char *s4 = s4_buffer;
      size_t s4_len = 0;
      s0 = "fclass.h";
      s0_len = 8;
      spc(&s1, &s1_len, conf);
      reg_name(tree->ast_node.f_un_type_h.rd, &s2, &s2_len);
      sep(&s3, &s3_len, conf);
      freg_or_reg_name(tree->ast_node.f_un_type_h.rs1, &s4, &s4_len, conf);
      DO_MEMCPY5;
    }
  } break;
  case RISCV_FLI_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "fli.h";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fli_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_5(tree->ast_node.riscv_fli_h.constantidx, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_FLI_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "fli.s";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fli_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_5(tree->ast_node.riscv_fli_s.constantidx, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_FLI_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "fli.d";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fli_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_5(tree->ast_node.riscv_fli_d.constantidx, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_FMINM_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fminm.h";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fminm_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fminm_h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fminm_h.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FMAXM_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fmaxm.h";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_h.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FMINM_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fminm.s";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fminm_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fminm_s.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fminm_s.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FMAXM_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fmaxm.s";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_s.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_s.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FMINM_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fminm.d";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fminm_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fminm_d.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fminm_d.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FMAXM_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fmaxm.d";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_d.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fmaxm_d.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FROUND_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fround.h";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fround_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fround_h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    frm_mnemonic(tree->ast_node.riscv_fround_h.rm, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FROUNDNX_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "froundnx.h";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_froundnx_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_froundnx_h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    frm_mnemonic(tree->ast_node.riscv_froundnx_h.rm, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FROUND_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fround.s";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fround_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fround_s.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    frm_mnemonic(tree->ast_node.riscv_fround_s.rm, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FROUNDNX_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "froundnx.s";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_froundnx_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_froundnx_s.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    frm_mnemonic(tree->ast_node.riscv_froundnx_s.rm, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FROUND_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fround.d";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fround_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fround_d.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    frm_mnemonic(tree->ast_node.riscv_fround_d.rm, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FROUNDNX_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "froundnx.d";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_froundnx_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_froundnx_d.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    frm_mnemonic(tree->ast_node.riscv_froundnx_d.rm, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FMVH_X_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "fmvh.x.d";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_fmvh_x_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fmvh_x_d.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_FMVP_D_X: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fmvp.d.x";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fmvp_d_x.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_fmvp_d_x.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.riscv_fmvp_d_x.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FLEQ_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fleq.h";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fleq_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fleq_h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fleq_h.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FLTQ_H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fltq.h";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fltq_h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fltq_h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fltq_h.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FLEQ_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fleq.s";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fleq_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fleq_s.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fleq_s.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FLTQ_S: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fltq.s";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fltq_s.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fltq_s.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fltq_s.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FLEQ_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fleq.d";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fleq_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fleq_d.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fleq_d.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FLTQ_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "fltq.d";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.riscv_fltq_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fltq_d.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    freg_name(tree->ast_node.riscv_fltq_d.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_FCVTMOD_W_D: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "fcvtmod.w.d";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_fcvtmod_w_d.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.riscv_fcvtmod_w_d.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA256SIG0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha256sig0";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha256sig0.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha256sig0.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA256SIG1: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha256sig1";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha256sig1.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha256sig1.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA256SUM0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha256sum0";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha256sum0.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha256sum0.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA256SUM1: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha256sum1";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha256sum1.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha256sum1.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_AES32ESMI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    s0 = "aes32esmi";
    s0_len = 9;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes32esmi.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes32esmi.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes32esmi.rs2, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_2(tree->ast_node.aes32esmi.bs, &s8, &s8_len, conf);
    DO_MEMCPY9;
  } break;
  case RISCV_AES32ESI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    s0 = "aes32esi";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes32esi.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes32esi.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes32esi.rs2, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_2(tree->ast_node.aes32esi.bs, &s8, &s8_len, conf);
    DO_MEMCPY9;
  } break;
  case RISCV_AES32DSMI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    s0 = "aes32dsmi";
    s0_len = 9;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes32dsmi.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes32dsmi.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes32dsmi.rs2, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_2(tree->ast_node.aes32dsmi.bs, &s8, &s8_len, conf);
    DO_MEMCPY9;
  } break;
  case RISCV_AES32DSI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    s0 = "aes32dsi";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes32dsi.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes32dsi.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes32dsi.rs2, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_2(tree->ast_node.aes32dsi.bs, &s8, &s8_len, conf);
    DO_MEMCPY9;
  } break;
  case RISCV_SHA512SIG0L: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "sha512sig0l";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sig0l.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sig0l.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sha512sig0l.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHA512SIG0H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "sha512sig0h";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sig0h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sig0h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sha512sig0h.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHA512SIG1L: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "sha512sig1l";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sig1l.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sig1l.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sha512sig1l.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHA512SIG1H: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "sha512sig1h";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sig1h.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sig1h.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sha512sig1h.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHA512SUM0R: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "sha512sum0r";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sum0r.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sum0r.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sha512sum0r.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHA512SUM1R: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "sha512sum1r";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sum1r.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sum1r.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sha512sum1r.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_AES64KS1I: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    s0 = "aes64ks1i";
    s0_len = 9;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64ks1i.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64ks1i.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_4(tree->ast_node.aes64ks1i.rnum, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_AES64KS2: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "aes64ks2";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64ks2.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64ks2.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes64ks2.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_AES64IM: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "aes64im";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64im.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64im.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_AES64ESM: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "aes64esm";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64esm.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64esm.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes64esm.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_AES64ES: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "aes64es";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64es.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64es.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes64es.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_AES64DSM: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "aes64dsm";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64dsm.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64dsm.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes64dsm.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_AES64DS: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "aes64ds";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.aes64ds.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.aes64ds.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.aes64ds.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_SHA512SIG0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha512sig0";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sig0.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sig0.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA512SIG1: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha512sig1";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sig1.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sig1.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA512SUM0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha512sum0";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sum0.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sum0.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SHA512SUM1: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sha512sum1";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sha512sum1.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sha512sum1.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SM3P0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sm3p0";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sm3p0.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sm3p0.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SM3P1: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "sm3p1";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sm3p1.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sm3p1.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_SM4ED: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    s0 = "sm4ed";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sm4ed.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sm4ed.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sm4ed.rs2, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_2(tree->ast_node.sm4ed.bs, &s8, &s8_len, conf);
    DO_MEMCPY9;
  } break;
  case RISCV_SM4KS: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    s0 = "sm4ks";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.sm4ks.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.sm4ks.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.sm4ks.rs2, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    hex_bits_2(tree->ast_node.sm4ks.bs, &s8, &s8_len, conf);
    DO_MEMCPY9;
  } break;
  case RISCV_ZBKB_RTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zbkb_rtype_mnemonic(tree->ast_node.zbkb_rtype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbkb_rtype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbkb_rtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zbkb_rtype.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZBKB_PACKW: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "packw";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zbkb_packw.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zbkb_packw.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zbkb_packw.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZIP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "zip";
    s0_len = 3;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_zip.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_zip.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_UNZIP: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "unzip";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_unzip.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_unzip.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_BREV8: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "brev8";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_brev8.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_brev8.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_XPERM8: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "xperm8";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_xperm8.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_xperm8.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.riscv_xperm8.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_XPERM4: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "xperm4";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.riscv_xperm4.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_xperm4.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.riscv_xperm4.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_ZICOND_RTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    zicond_mnemonic(tree->ast_node.zicond_rtype.riscv_czero_nez, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.zicond_rtype.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.zicond_rtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.zicond_rtype.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_VSETVLI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    s0 = "vsetvli";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.vsetvli.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.vsetvli.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    sew_flag(tree->ast_node.vsetvli.sew, &s6, &s6_len);
    maybe_lmul_flag(tree->ast_node.vsetvli.lmul, &s7, &s7_len, conf);
    maybe_ta_flag(tree->ast_node.vsetvli.ta, &s8, &s8_len, conf);
    maybe_ma_flag(tree->ast_node.vsetvli.ma, &s9, &s9_len, conf);
    DO_MEMCPY10;
  } break;
  case RISCV_VSETVL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "vsetvl";
    s0_len = 6;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.vsetvl.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.vsetvl.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vsetvl.rs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_VSETIVLI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char s8_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s8 = s8_buffer;
    size_t s8_len = 0;
    char s9_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s9 = s9_buffer;
    size_t s9_len = 0;
    s0 = "vsetivli";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.vsetivli.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_5(tree->ast_node.vsetivli.uimm, &s4, &s4_len, conf);
    sep(&s5, &s5_len, conf);
    sew_flag(tree->ast_node.vsetivli.sew, &s6, &s6_len);
    maybe_lmul_flag(tree->ast_node.vsetivli.lmul, &s7, &s7_len, conf);
    maybe_ta_flag(tree->ast_node.vsetivli.ta, &s8, &s8_len, conf);
    maybe_ma_flag(tree->ast_node.vsetivli.ma, &s9, &s9_len, conf);
    DO_MEMCPY10;
  } break;
  case RISCV_VVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vvtype_mnemonic(tree->ast_node.vvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.vvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_NVSTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    nvstype_mnemonic(tree->ast_node.nvstype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.nvstype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.nvstype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.nvstype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.nvstype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_NVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    nvtype_mnemonic(tree->ast_node.nvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.nvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.nvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.nvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.nvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_MASKTYPEV: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "vmerge.vvm";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.masktypev.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.masktypev.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.masktypev.vs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_MOVETYPEV: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vmv.v.v";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.movetypev.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.movetypev.vs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_VXTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vxtype_mnemonic(tree->ast_node.vxtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vxtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vxtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vxtype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.vxtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_NXSTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    nxstype_mnemonic(tree->ast_node.nxstype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.nxstype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.nxstype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.nxstype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.nxstype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_NXTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    nxtype_mnemonic(tree->ast_node.nxtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.nxtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.nxtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.nxtype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.nxtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VXSG: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vxsg_mnemonic(tree->ast_node.vxsg.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vxsg.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vxsg.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vxsg.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.vxsg.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_MASKTYPEX: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "vmerge.vxm";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.masktypex.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.masktypex.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.masktypex.rs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_MOVETYPEX: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vmv.v.x";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.movetypex.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.movetypex.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_VITYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vitype_mnemonic(tree->ast_node.vitype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vitype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vitype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.vitype.simm, &s6, &s6_len, conf);
    maybe_vmask(tree->ast_node.vitype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_NISTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    nistype_mnemonic(tree->ast_node.nistype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.nistype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.nistype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.nistype.simm, &s6, &s6_len, conf);
    maybe_vmask(tree->ast_node.nistype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_NITYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    nitype_mnemonic(tree->ast_node.nitype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.nitype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.nitype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.nitype.simm, &s6, &s6_len, conf);
    maybe_vmask(tree->ast_node.nitype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VISG: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    visg_mnemonic(tree->ast_node.visg.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.visg.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.visg.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.visg.simm, &s6, &s6_len);
    maybe_vmask(tree->ast_node.visg.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_MASKTYPEI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "vmerge.vim";
    s0_len = 10;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.masktypei.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.masktypei.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.masktypei.simm, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_MOVETYPEI: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char s4_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s4 = s4_buffer;
    size_t s4_len = 0;
    s0 = "vmv.v.i";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.movetypei.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    hex_bits_5(tree->ast_node.movetypei.simm, &s4, &s4_len, conf);
    DO_MEMCPY5;
  } break;
  case RISCV_VMVRTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "vmv";
    s0_len = 3;
    simm_string(tree->ast_node.vmvrtype.simm, &s1, &s1_len);
    s2 = "r.v";
    s2_len = 3;
    spc(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vmvrtype.vd, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vmvrtype.vs2, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_MVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    mvvtype_mnemonic(tree->ast_node.mvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.mvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.mvvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.mvvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.mvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_MVVMATYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    mvvmatype_mnemonic(tree->ast_node.mvvmatype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.mvvmatype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.mvvmatype.vs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.mvvmatype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.mvvmatype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_WVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    wvvtype_mnemonic(tree->ast_node.wvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.wvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.wvvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.wvvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.wvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_WVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    wvtype_mnemonic(tree->ast_node.wvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.wvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.wvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.wvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.wvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_WMVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    wmvvtype_mnemonic(tree->ast_node.wmvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.wmvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.wmvvtype.vs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.wmvvtype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.wmvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VEXT2TYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vext2type_mnemonic(tree->ast_node.vext2type.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vext2type.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vext2type.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vext2type.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VEXT4TYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vext4type_mnemonic(tree->ast_node.vext4type.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vext4type.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vext4type.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vext4type.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VEXT8TYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vext8type_mnemonic(tree->ast_node.vext8type.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vext8type.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vext8type.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vext8type.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VMVXS: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vmv.x.s";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.vmvxs.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vmvxs.vs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_MVVCOMPRESS: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "vcompress.vm";
    s0_len = 12;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.mvvcompress.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.mvvcompress.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.mvvcompress.vs1, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_MVXTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    mvxtype_mnemonic(tree->ast_node.mvxtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.mvxtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.mvxtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.mvxtype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.mvxtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_MVXMATYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    mvxmatype_mnemonic(tree->ast_node.mvxmatype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.mvxmatype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.mvxmatype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.mvxmatype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.mvxmatype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_WVXTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    wvxtype_mnemonic(tree->ast_node.wvxtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.wvxtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.wvxtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.wvxtype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.wvxtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_WXTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    wxtype_mnemonic(tree->ast_node.wxtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.wxtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.wxtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.wxtype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.wxtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_WMVXTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    wmvxtype_mnemonic(tree->ast_node.wmvxtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.wmvxtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.wmvxtype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.wmvxtype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.wmvxtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VMVSX: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vmv.s.x";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vmvsx.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.vmvsx.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_FVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fvvtype_mnemonic(tree->ast_node.fvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fvvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fvvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FVVMATYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fvvmatype_mnemonic(tree->ast_node.fvvmatype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fvvmatype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fvvmatype.vs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fvvmatype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fvvmatype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FWVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fwvvtype_mnemonic(tree->ast_node.fwvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fwvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fwvvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fwvvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fwvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FWVVMATYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fwvvmatype_mnemonic(tree->ast_node.fwvvmatype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fwvvmatype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fwvvmatype.vs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fwvvmatype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fwvvmatype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FWVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fwvtype_mnemonic(tree->ast_node.fwvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fwvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fwvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fwvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fwvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VFUNARY0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vfunary0_mnemonic(tree->ast_node.vfunary0.vfunary0, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfunary0.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfunary0.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vfunary0.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VFWUNARY0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vfwunary0_mnemonic(tree->ast_node.vfwunary0.vfwunary0, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfwunary0.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfwunary0.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vfwunary0.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VFNUNARY0: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vfnunary0_mnemonic(tree->ast_node.vfnunary0.vfnunary0, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfnunary0.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfnunary0.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vfnunary0.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VFUNARY1: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    vfunary1_mnemonic(tree->ast_node.vfunary1.vfunary1, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfunary1.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfunary1.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vfunary1.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VFMVFS: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vfmv.f.s";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    freg_name(tree->ast_node.vfmvfs.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfmvfs.vs2, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_FVFTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fvftype_mnemonic(tree->ast_node.fvftype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fvftype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fvftype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.fvftype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fvftype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FVFMATYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fvfmatype_mnemonic(tree->ast_node.fvfmatype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fvfmatype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.fvfmatype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fvfmatype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fvfmatype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FWVFTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fwvftype_mnemonic(tree->ast_node.fwvftype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fwvftype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fwvftype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.fwvftype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fwvftype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FWVFMATYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fwvfmatype_mnemonic(tree->ast_node.fwvfmatype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fwvfmatype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.fwvfmatype.rs1, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fwvfmatype.vs2, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fwvfmatype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FWFTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fwftype_mnemonic(tree->ast_node.fwftype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fwftype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fwftype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.fwftype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fwftype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VFMERGE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "vfmerge.vfm";
    s0_len = 11;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfmerge.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfmerge.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vfmerge.rs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VFMV: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vfmv.v.f";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfmv.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    reg_name(tree->ast_node.vfmv.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_VFMVSF: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    s0 = "vfmv.s.f";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vfmvsf.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    freg_name(tree->ast_node.vfmvsf.rs1, &s4, &s4_len);
    DO_MEMCPY5;
  } break;
  case RISCV_VLSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    s0 = "vl";
    s0_len = 2;
    nfields_string(tree->ast_node.vlsegtype.nf, &s1, &s1_len);
    s2 = "e";
    s2_len = 1;
    vlewidth_bitsnumberstr(tree->ast_node.vlsegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vlsegtype.vd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vlsegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    maybe_vmask(tree->ast_node.vlsegtype.vm, &s11, &s11_len, conf);
    DO_MEMCPY12;
  } break;
  case RISCV_VLSEGFFTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    s0 = "vl";
    s0_len = 2;
    nfields_string(tree->ast_node.vlsegfftype.nf, &s1, &s1_len);
    s2 = "e";
    s2_len = 1;
    vlewidth_bitsnumberstr(tree->ast_node.vlsegfftype.width, &s3, &s3_len);
    s4 = "ff.v";
    s4_len = 4;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vlsegfftype.vd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vlsegfftype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    maybe_vmask(tree->ast_node.vlsegfftype.vm, &s11, &s11_len, conf);
    DO_MEMCPY12;
  } break;
  case RISCV_VSSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    s0 = "vs";
    s0_len = 2;
    nfields_string(tree->ast_node.vssegtype.nf, &s1, &s1_len);
    s2 = "e";
    s2_len = 1;
    vlewidth_bitsnumberstr(tree->ast_node.vssegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vssegtype.vs3, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vssegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    maybe_vmask(tree->ast_node.vssegtype.vm, &s11, &s11_len, conf);
    DO_MEMCPY12;
  } break;
  case RISCV_VLSSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    char s13_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s13 = s13_buffer;
    size_t s13_len = 0;
    s0 = "vls";
    s0_len = 3;
    nfields_string(tree->ast_node.vlssegtype.nf, &s1, &s1_len);
    s2 = "e";
    s2_len = 1;
    vlewidth_bitsnumberstr(tree->ast_node.vlssegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vlssegtype.vd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vlssegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    sep(&s11, &s11_len, conf);
    reg_name(tree->ast_node.vlssegtype.rs2, &s12, &s12_len);
    maybe_vmask(tree->ast_node.vlssegtype.vm, &s13, &s13_len, conf);
    DO_MEMCPY14;
  } break;
  case RISCV_VSSSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    char s13_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s13 = s13_buffer;
    size_t s13_len = 0;
    s0 = "vss";
    s0_len = 3;
    nfields_string(tree->ast_node.vsssegtype.nf, &s1, &s1_len);
    s2 = "e";
    s2_len = 1;
    vlewidth_bitsnumberstr(tree->ast_node.vsssegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vsssegtype.vs3, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vsssegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    sep(&s11, &s11_len, conf);
    reg_name(tree->ast_node.vsssegtype.rs2, &s12, &s12_len);
    maybe_vmask(tree->ast_node.vsssegtype.vm, &s13, &s13_len, conf);
    DO_MEMCPY14;
  } break;
  case RISCV_VLUXSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    char s13_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s13 = s13_buffer;
    size_t s13_len = 0;
    s0 = "vlux";
    s0_len = 4;
    nfields_string(tree->ast_node.vluxsegtype.nf, &s1, &s1_len);
    s2 = "ei";
    s2_len = 2;
    vlewidth_bitsnumberstr(tree->ast_node.vluxsegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vluxsegtype.vd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vluxsegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    sep(&s11, &s11_len, conf);
    reg_name(tree->ast_node.vluxsegtype.vs2, &s12, &s12_len);
    maybe_vmask(tree->ast_node.vluxsegtype.vm, &s13, &s13_len, conf);
    DO_MEMCPY14;
  } break;
  case RISCV_VLOXSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    char s13_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s13 = s13_buffer;
    size_t s13_len = 0;
    s0 = "vlox";
    s0_len = 4;
    nfields_string(tree->ast_node.vloxsegtype.nf, &s1, &s1_len);
    s2 = "ei";
    s2_len = 2;
    vlewidth_bitsnumberstr(tree->ast_node.vloxsegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vloxsegtype.vd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vloxsegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    sep(&s11, &s11_len, conf);
    reg_name(tree->ast_node.vloxsegtype.vs2, &s12, &s12_len);
    maybe_vmask(tree->ast_node.vloxsegtype.vm, &s13, &s13_len, conf);
    DO_MEMCPY14;
  } break;
  case RISCV_VSUXSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    char s13_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s13 = s13_buffer;
    size_t s13_len = 0;
    s0 = "vsux";
    s0_len = 4;
    nfields_string(tree->ast_node.vsuxsegtype.nf, &s1, &s1_len);
    s2 = "ei";
    s2_len = 2;
    vlewidth_bitsnumberstr(tree->ast_node.vsuxsegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vsuxsegtype.vs3, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vsuxsegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    sep(&s11, &s11_len, conf);
    reg_name(tree->ast_node.vsuxsegtype.vs2, &s12, &s12_len);
    maybe_vmask(tree->ast_node.vsuxsegtype.vm, &s13, &s13_len, conf);
    DO_MEMCPY14;
  } break;
  case RISCV_VSOXSEGTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    char s11_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s11 = s11_buffer;
    size_t s11_len = 0;
    char *s12 = "";
    size_t s12_len = 0;
    char s13_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s13 = s13_buffer;
    size_t s13_len = 0;
    s0 = "vsox";
    s0_len = 4;
    nfields_string(tree->ast_node.vsoxsegtype.nf, &s1, &s1_len);
    s2 = "ei";
    s2_len = 2;
    vlewidth_bitsnumberstr(tree->ast_node.vsoxsegtype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vsoxsegtype.vs3, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vsoxsegtype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    sep(&s11, &s11_len, conf);
    reg_name(tree->ast_node.vsoxsegtype.vs2, &s12, &s12_len);
    maybe_vmask(tree->ast_node.vsoxsegtype.vm, &s13, &s13_len, conf);
    DO_MEMCPY14;
  } break;
  case RISCV_VLRETYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char *s3 = "";
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    char *s9 = "";
    size_t s9_len = 0;
    char *s10 = "";
    size_t s10_len = 0;
    s0 = "vl";
    s0_len = 2;
    nfields_string(tree->ast_node.vlretype.nf, &s1, &s1_len);
    s2 = "re";
    s2_len = 2;
    vlewidth_bitsnumberstr(tree->ast_node.vlretype.width, &s3, &s3_len);
    s4 = ".v";
    s4_len = 2;
    spc(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vlretype.vd, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "(";
    s8_len = 1;
    reg_name(tree->ast_node.vlretype.rs1, &s9, &s9_len);
    s10 = ")";
    s10_len = 1;
    DO_MEMCPY11;
  } break;
  case RISCV_VSRETYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char *s1 = "";
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char *s7 = "";
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    s0 = "vs";
    s0_len = 2;
    nfields_string(tree->ast_node.vsretype.nf, &s1, &s1_len);
    s2 = "r.v";
    s2_len = 3;
    spc(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vsretype.vs3, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    s6 = "(";
    s6_len = 1;
    reg_name(tree->ast_node.vsretype.rs1, &s7, &s7_len);
    s8 = ")";
    s8_len = 1;
    DO_MEMCPY9;
  } break;
  case RISCV_VMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char *s5 = "";
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    vmtype_mnemonic(tree->ast_node.vmtype.op, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vmtype.vd_or_vs3, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    s4 = "(";
    s4_len = 1;
    reg_name(tree->ast_node.vmtype.rs1, &s5, &s5_len);
    s6 = ")";
    s6_len = 1;
    DO_MEMCPY7;
  } break;
  case RISCV_MMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    mmtype_mnemonic(tree->ast_node.mmtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.mmtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.mmtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.mmtype.vs1, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_VCPOP_M: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "vpopc.m";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.vcpop_m.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vcpop_m.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vcpop_m.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VFIRST_M: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "vfirst.m";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    reg_name(tree->ast_node.vfirst_m.rd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vfirst_m.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vfirst_m.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VMSBF_M: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "vmsbf.m";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vmsbf_m.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vmsbf_m.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vmsbf_m.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VMSIF_M: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "vmsif.m";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vmsif_m.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vmsif_m.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vmsif_m.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VMSOF_M: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "vmsof.m";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vmsof_m.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vmsof_m.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.vmsof_m.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VIOTA_M: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    s0 = "viota.m";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.viota_m.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.viota_m.vs2, &s4, &s4_len);
    maybe_vmask(tree->ast_node.viota_m.vm, &s5, &s5_len, conf);
    DO_MEMCPY6;
  } break;
  case RISCV_VID_V: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    s0 = "vid.v";
    s0_len = 5;
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vid_v.vd, &s2, &s2_len);
    maybe_vmask(tree->ast_node.vid_v.vm, &s3, &s3_len, conf);
    DO_MEMCPY4;
  } break;
  case RISCV_VVMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    vvmtype_mnemonic(tree->ast_node.vvmtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vvmtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vvmtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vvmtype.vs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VVMCTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    vvmctype_mnemonic(tree->ast_node.vvmctype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vvmctype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vvmctype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vvmctype.vs1, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_VVMSTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    vvmstype_mnemonic(tree->ast_node.vvmstype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vvmstype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vvmstype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vvmstype.vs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VVCMPTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vvcmptype_mnemonic(tree->ast_node.vvcmptype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vvcmptype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vvcmptype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.vvcmptype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.vvcmptype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VXMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    vxmtype_mnemonic(tree->ast_node.vxmtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vxmtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vxmtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vxmtype.rs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VXMCTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    vxmctype_mnemonic(tree->ast_node.vxmctype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vxmctype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vxmctype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vxmctype.rs1, &s6, &s6_len);
    DO_MEMCPY7;
  } break;
  case RISCV_VXMSTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    vxmstype_mnemonic(tree->ast_node.vxmstype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vxmstype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vxmstype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vxmstype.rs1, &s6, &s6_len);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VXCMPTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vxcmptype_mnemonic(tree->ast_node.vxcmptype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vxcmptype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vxcmptype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.vxcmptype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.vxcmptype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_VIMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    vimtype_mnemonic(tree->ast_node.vimtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vimtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vimtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.vimtype.simm, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VIMCTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    vimctype_mnemonic(tree->ast_node.vimctype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vimctype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vimctype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.vimctype.simm, &s6, &s6_len, conf);
    DO_MEMCPY7;
  } break;
  case RISCV_VIMSTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    char *s8 = "";
    size_t s8_len = 0;
    vimstype_mnemonic(tree->ast_node.vimstype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vimstype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vimstype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.vimstype.simm, &s6, &s6_len, conf);
    sep(&s7, &s7_len, conf);
    s8 = "v0";
    s8_len = 2;
    DO_MEMCPY9;
  } break;
  case RISCV_VICMPTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char s6_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s6 = s6_buffer;
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    vicmptype_mnemonic(tree->ast_node.vicmptype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.vicmptype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.vicmptype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    hex_bits_5(tree->ast_node.vicmptype.simm, &s6, &s6_len, conf);
    maybe_vmask(tree->ast_node.vicmptype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FVVMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fvvmtype_mnemonic(tree->ast_node.fvvmtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fvvmtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fvvmtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.fvvmtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fvvmtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_FVFMTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    fvfmtype_mnemonic(tree->ast_node.fvfmtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.fvfmtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.fvfmtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    reg_name(tree->ast_node.fvfmtype.rs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.fvfmtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_RIVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    rivvtype_mnemonic(tree->ast_node.rivvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.rivvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.rivvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.rivvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.rivvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_RMVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    rmvvtype_mnemonic(tree->ast_node.rmvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.rmvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.rmvvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.rmvvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.rmvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_RFVVTYPE: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    char s7_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s7 = s7_buffer;
    size_t s7_len = 0;
    rfvvtype_mnemonic(tree->ast_node.rfvvtype.funct6, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    vreg_name(tree->ast_node.rfvvtype.vd, &s2, &s2_len);
    sep(&s3, &s3_len, conf);
    vreg_name(tree->ast_node.rfvvtype.vs2, &s4, &s4_len);
    sep(&s5, &s5_len, conf);
    vreg_name(tree->ast_node.rfvvtype.vs1, &s6, &s6_len);
    maybe_vmask(tree->ast_node.rfvvtype.vm, &s7, &s7_len, conf);
    DO_MEMCPY8;
  } break;
  case RISCV_ZICBOM: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    cbop_mnemonic(tree->ast_node.riscv_zicbom.cbop, &s0, &s0_len);
    spc(&s1, &s1_len, conf);
    s2 = "(";
    s2_len = 1;
    opt_spc(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_zicbom.rs1, &s4, &s4_len);
    opt_spc(&s5, &s5_len, conf);
    s6 = ")";
    s6_len = 1;
    DO_MEMCPY7;
  } break;
  case RISCV_ZICBOZ: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char *s2 = "";
    size_t s2_len = 0;
    char s3_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s3 = s3_buffer;
    size_t s3_len = 0;
    char *s4 = "";
    size_t s4_len = 0;
    char s5_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s5 = s5_buffer;
    size_t s5_len = 0;
    char *s6 = "";
    size_t s6_len = 0;
    s0 = "cbo.zero";
    s0_len = 8;
    spc(&s1, &s1_len, conf);
    s2 = "(";
    s2_len = 1;
    opt_spc(&s3, &s3_len, conf);
    reg_name(tree->ast_node.riscv_zicboz, &s4, &s4_len);
    opt_spc(&s5, &s5_len, conf);
    s6 = ")";
    s6_len = 1;
    DO_MEMCPY7;
  } break;
  case RISCV_ILLEGAL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    s0 = "illegal";
    s0_len = 7;
    spc(&s1, &s1_len, conf);
    hex_bits_32(tree->ast_node.illegal, &s2, &s2_len, conf);
    DO_MEMCPY3;
  } break;
  case RISCV_C_ILLEGAL: {
    char *s0 = "";
    size_t s0_len = 0;
    char s1_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s1 = s1_buffer;
    size_t s1_len = 0;
    char s2_buffer[RISCV_TEMP_BUFFER_MAX_LEN] = {0};
    char *s2 = s2_buffer;
    size_t s2_len = 0;
    s0 = "c.illegal";
    s0_len = 9;
    spc(&s1, &s1_len, conf);
    hex_bits_16(tree->ast_node.c_illegal, &s2, &s2_len, conf);
    DO_MEMCPY3;
  } break;
  }
}

#endif
